******************************************************************************
                   ARP32 Linker PC v1.0.7                      
******************************************************************************
>> Linked Mon Jun 25 22:15:08 2018

OUTPUT FILE NAME:   <.\elf_out\test_integralImage.eve.out>
ENTRY POINT SYMBOL: "_reset_handler"  address: 80000100


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  VECMEM                80000000   00000100  00000050  000000b0  RWIX
  CMDMEM                80000100   00001000  00000028  00000fd8  RWIX
  EXTMEM                80001100   00020000  0000e53c  00011ac4  RWIX

PAGE 1:
  DATMEM                40020000   00008000  00006923  000016dd  RWIX
  WMEM                  40040000   00007fe0  00000000  00007fe0  RWIX
  IMEMLA                40050000   00004000  00000000  00004000  RWIX
  IMEMHA                40054000   00004000  00000000  00004000  RWIX
  IMEMLB                40070000   00004000  00000000  00004000  RWIX
  IMEMHB                40074000   00004000  00000000  00004000  RWIX
  L3MEM                 40300000   00100000  00000000  00100000  RWIX
  GEM0_L2_MEM           40800000   00008000  00000000  00008000  RWIX
  EXTDMEM               80030000   02000000  018034b6  007fcb4a  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.cinit     1    40020000    00000000     UNINITIALIZED

.init_array 
*          1    40020000    00000000     UNINITIALIZED

.intvecs   0    80000000    00000028     
                  80000000    00000028     boot_arp32.obj (.intvecs)

.imemha    0    80000028    00000008     UNINITIALIZED
                  80000028    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemha)

.imemhb    0    80000030    00000008     UNINITIALIZED
                  80000030    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemhb)

.imemla    0    80000038    00000008     UNINITIALIZED
                  80000038    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemla)

.imemlb    0    80000040    00000008     UNINITIALIZED
                  80000040    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemlb)

.wmem      0    80000048    00000008     UNINITIALIZED
                  80000048    00000008     rtsarp32_v200.lib : vcop_memory.obj (.wmem)

.inthandler 
*          0    80000100    00000028     
                  80000100    00000028     boot_arp32.obj (.inthandler)

.rts_text 
*          0    80001100    00006a00     
                  80001100    000004f8     rtsarp32_v200.lib : _scanfi.obj (.text:_scanfi)
                  800015f8    000003a0                       : strtod.obj (.text:strtod)
                  80001998    0000039c                       : strtold.obj (.text:strtold)
                  80001d34    000002d8                       : strtoll.obj (.text:strtoll)
                  8000200c    000002a0                       : _printfi.obj (.text:_setfield)
                  800022ac    00000268                       : _scanfi.obj (.text:_sproc_int)
                  80002514    00000260                       : _scanfi.obj (.text:_sset_arg)
                  80002774    0000025c                       : _printfi.obj (.text:_pproc_fge)
                  800029d0    0000025c                       : _printfi.obj (.text:ecvt)
                  80002c2c    00000258                       : _printfi.obj (.text:fcvt)
                  80002e84    0000024c                       : strtoull.obj (.text:strtoull)
                  800030d0    0000022c                       : _printfi.obj (.text:_printfi)
                  800032fc    00000220                       : _printfi.obj (.text:_pconv_e)
                  8000351c    00000208                       : _printfi.obj (.text:_getarg_diouxp)
                  80003724    00000200                       : frcdivd.obj (.text:_frcdivd)
                  80003924    000001e4                       : divd.obj (.text:__arp32abi_divd)
                  80003b08    000001cc                       : imath64.obj (.text:__arp32abi_divull)
                  80003cd4    000001cc                       : strtol.obj (.text:strtol)
                  80003ea0    000001c8                       : mpyd.obj (.text:__arp32abi_mpyd)
                  80004068    000001c8                       : fgets.obj (.text:_dofgets)
                  80004230    000001b8                       : addd.obj (.text:__arp32abi_addd)
                  800043e8    000001a0                       : strtoul.obj (.text:strtoul)
                  80004588    0000018c                       : _printfi.obj (.text:_pproc_diouxp)
                  80004714    00000170                       : fputs.obj (.text:fputs)
                  80004884    00000160                       : frcaddd.obj (.text:_frcaddd)
                  800049e4    0000015c                       : _scanfi.obj (.text:_sproc_float)
                  80004b40    00000158                       : llmpy.obj (.text:__arp32abi_mpyll)
                  80004c98    00000144                       : fread.obj (.text:fread)
                  80004ddc    00000140                       : frcmpyd.obj (.text:_frcmpyd)
                  80004f1c    00000140                       : _scanfi.obj (.text:_sget_conv)
                  8000505c    0000013c                       : _printfi.obj (.text:_pproc_fwp)
                  80005198    0000012c                       : fopen.obj (.text:_openfile)
                  800052c4    00000118                       : setvbuf.obj (.text:setvbuf)
                  800053dc    00000114                       : _printfi.obj (.text:_pconv_g)
                  800054f0    000000f4                       : _printfi.obj (.text:_pproc_str)
                  800055e4    000000ec                       : lowlev.obj (.text:open)
                  800056d0    000000e8                       : fputc.obj (.text:fputc)
                  800057b8    000000dc                       : memcpy.obj (.text:memcpy)
                  80005894    000000cc                       : cmpd.obj (.text:__arp32abi_cmpd)
                  80005960    000000c4                       : memory.obj (.text:mem_alloc)
                  80005a24    000000bc                       : _printfi.obj (.text:_ltostr)
                  80005ae0    000000bc                       : _scanfi.obj (.text:_sproc_str)
                  80005b9c    000000b4                       : trgdrv.obj (.text:HOSTlseek)
                  80005c50    000000b4                       : _scanfi.obj (.text:_sproc_lb)
                  80005d04    000000ac                       : trgdrv.obj (.text:HOSTrename)
                  80005db0    000000a8                       : fopen.obj (.text:_search_fp)
                  80005e58    000000a8                       : memset.obj (.text:memset)
                  80005f00    000000a0                       : lowlev.obj (.text:getdevice)
                  80005fa0    0000009c                       : _bufread.obj (.text:_buff_read)
                  8000603c    0000009c                       : _printfi.obj (.text:_mcpy)
                  800060d8    00000098                       : trgdrv.obj (.text:HOSTopen)
                  80006170    00000094                       : sscanf.obj (.text:_chkmbc)
                  80006204    00000094                       : memory.obj (.text:mem_free)
                  80006298    00000090                       : trgdrv.obj (.text:HOSTread)
                  80006328    00000090                       : cvtdf.obj (.text:__arp32abi_cvtdf)
                  800063b8    00000090                       : _printfi.obj (.text:_pproc_fflags)
                  80006448    00000090                       : _io_perm.obj (.text:_wrt_ok)
                  800064d8    00000090                       : fseek.obj (.text:fseek)
                  80006568    00000090                       : ftell.obj (.text:ftell)
                  800065f8    0000008c                       : trgdrv.obj (.text:HOSTwrite)
                  80006684    00000088                       : lowlev.obj (.text:close)
                  8000670c    00000084                       : _printfi.obj (.text:_ecpy)
                  80006790    00000080                       : cvtfd.obj (.text:__arp32abi_cvtfd)
                  80006810    00000080                       : _scanfi.obj (.text:_sget_scanset)
                  80006890    00000080                       : printf.obj (.text:printf)
                  80006910    0000007c                       : fixdi.obj (.text:__arp32abi_fixdi)
                  8000698c    0000007c                       : fclose.obj (.text:_closefile)
                  80006a08    0000007c                       : atoi.obj (.text:atoi)
                  80006a84    0000007c                       : fflush.obj (.text:fflush)
                  80006b00    00000078                       : trgdrv.obj (.text:HOSTunlink)
                  80006b78    00000078                       : _printfi.obj (.text:_div)
                  80006bf0    00000078                       : _printfi.obj (.text:_pconv_f)
                  80006c68    00000078                       : memory.obj (.text:minit)
                  80006ce0    00000074                       : trgdrv.obj (.text:HOSTclose)
                  80006d54    00000074                       : fprintf.obj (.text:fprintf)
                  80006dc8    00000070                       : autoinit.obj (.text:_auto_init)
                  80006e38    00000070                       : vfprintf.obj (.text:vfprintf)
                  80006ea8    0000006c                       : _io_perm.obj (.text:_rd_ok)
                  80006f14    00000068                       : fltid.obj (.text:__arp32abi_fltid)
                  80006f7c    00000068                       : boot.obj (.text:_c_int00)
                  80006fe4    00000068                       : lowlev.obj (.text:lseek)
                  8000704c    00000068                       : lowlev.obj (.text:read)
                  800070b4    00000068                       : lowlev.obj (.text:write)
                  8000711c    00000064                       : imath64.obj (.text:_subcull)
                  80007180    00000064                       : ltoa.obj (.text:ltoa)
                  800071e4    00000060                       : llshift.obj (.text:__arp32abi_llshl)
                  80007244    00000060                       : fflush.obj (.text:_doflush)
                  800072a4    0000005c                       : isinf.obj (.text:__arp32abi_isinf)
                  80007300    0000005c                       : lowlev.obj (.text:tabinit)
                  8000735c    0000005c                       : vcop_memory.obj (.text:vcop_minit)
                  800073b8    00000054                       : _printfi.obj (.text:_fcpy)
                  8000740c    00000054                       : renormd.obj (.text:_renormd)
                  80007460    00000054                       : exit.obj (.text:exit)
                  800074b4    00000050                       : fopen.obj (.text:_cleanup)
                  80007504    00000050                       : lowlev.obj (.text:finddevice)
                  80007554    00000050                       : rand.obj (.text:rand)
                  800075a4    0000004c                       : memory.obj (.text:malloc)
                  800075f0    00000048                       : trgmsg.obj (.text:readmsg)
                  80007638    00000048                       : lowlev.obj (.text:unlink)
                  80007680    00000048                       : trgmsg.obj (.text:writemsg)
                  800076c8    00000040                       : args_main.obj (.text:_args_main)
                  80007708    0000003c                       : _printfi.obj (.text:__arp32abi_isnan)
                  80007744    0000003c                       : strasgi_c.obj (.text:__arp32abi_strasgi)
                  80007780    0000003c                       : fopen.obj (.text:fopen)
                  800077bc    0000003c                       : vsprintf.obj (.text:vsprintf)
                  800077f8    00000038                       : assert.obj (.text:__arp32abi_abort_msg)
                  80007830    00000038                       : imath64.obj (.text:__arp32abi_remull)
                  80007868    00000038                       : sscanf.obj (.text:sscanf)
                  800078a0    00000034                       : llshift.obj (.text:__arp32abi_llshru)
                  800078d4    00000030                       : fclose.obj (.text:fclose)
                  80007904    0000002c                       : subd.obj (.text:__arp32abi_subd)
                  80007930    00000028                       : negd.obj (.text:__arp32abi_negd)
                  80007958    00000028                       : mult.obj (.text:_mpyl)
                  80007980    00000024                       : llcmp.obj (.text:__arp32abi_cmplls)
                  800079a4    00000024                       : llcmp.obj (.text:__arp32abi_cmpllu)
                  800079c8    00000020                       : memccpy.obj (.text:memccpy)
                  800079e8    0000001c                       : lladdsub.obj (.text:__arp32abi_addll)
                  80007a04    0000001c                       : vsprintf.obj (.text:_outs)
                  80007a20    00000018                       : fgets.obj (.text:fgets)
                  80007a38    00000014                       : lladdsub.obj (.text:__arp32abi_subll)
                  80007a4c    00000014                       : memory.obj (.text:free)
                  80007a60    00000010                       : lladdsub.obj (.text:__arp32abi_negll)
                  80007a70    00000010                       : sscanf.obj (.text:_inpchar)
                  80007a80    00000010                       : vsprintf.obj (.text:_outc)
                  80007a90    0000000c                       : fprintf.obj (.text:_outc)
                  80007a9c    0000000c                       : printf.obj (.text:_outc)
                  80007aa8    0000000c                       : vfprintf.obj (.text:_outc)
                  80007ab4    0000000c                       : fprintf.obj (.text:_outs)
                  80007ac0    0000000c                       : printf.obj (.text:_outs)
                  80007acc    0000000c                       : vfprintf.obj (.text:_outs)
                  80007ad8    0000000c                       : sscanf.obj (.text:_uninpchar)
                  80007ae4    0000000c                       : remove.obj (.text:remove)
                  80007af0    00000008                       : exit.obj (.text:abort)
                  80007af8    00000004                       : _lock.obj (.text:_nop)
                  80007afc    00000004                       : pre_init.obj (.text:_system_pre_init)

.text      0    80007b00    00003b0c     
                  80007b00    00000d8c     ti_stats_collector.obj (.text:statCollectorControl)
                  8000888c    00000640     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_configure)
                  80008ecc    000005fc     integral_image_test.obj (.text:integralImageTest)
                  800094c8    000003e8     configparser.obj (.text:ParseContent)
                  800098b0    00000308     configparser.obj (.text:printparams)
                  80009bb8    00000288     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_update)
                  80009e40    00000234     eve_profile.obj (.text:profiler_end)
                  8000a074    00000220     libevekernels.eve.lib : eve_integral_image_kernel.obj (.text:eve_integral_image_u8_int_int_init)
                  8000a294    000001f8     integral_image_test.obj (.text:main)
                  8000a48c    000001c4     dmautils.lib : dma_funcs.obj (.text:DMA_funcs_hardwareRegSetup)
                  8000a650    000001b8                  : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerOutChannel)
                  8000a808    00000178                  : dma_resource_allocator.obj (.text:DMA_resourceAllocator_allocateResources)
                  8000a980    00000164                  : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerInChannel)
                  8000aae4    00000154     report_utils.obj (.text:report_printAppletInfo)
                  8000ac38    000000e8     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_init)
                  8000ad20    000000d8     configparser.obj (.text:readparamfile)
                  8000adf8    000000cc     dmautils.lib : edma_utils_state.obj (.text:DMA_utils_updateStateStruct)
                  8000aec4    000000c4     eve_profile.obj (.text:profiler_init)
                  8000af88    00000098     dmautils.lib : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D)
                  8000b020    0000008c     libevekernels.eve.lib : eve_integral_image_kernel.obj (.text:eve_integral_image_u8_int_int_vloops)
                  8000b0ac    00000074     dmautils.lib : dma_funcs.obj (.text:DMA_funcs_writeTransferParams)
                  8000b120    00000070     ti_stats_collector.obj (.text:statCollectorInit)
                  8000b190    0000006c     eve_profile.obj (.text:profiler_getStackDepth)
                  8000b1fc    00000068     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitOutChannel)
                  8000b264    0000005c     integral_image_test.obj (.text:TestApp_AllocMemRecords)
                  8000b2c0    00000058     ti_mem_manager.obj (.text:TI_GetMemoryChunk)
                  8000b318    00000054     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitInChannel)
                  8000b36c    00000050     eve_profile.obj (.text:profiler_testCaseInfo)
                  8000b3bc    0000004c     dmautils.lib : edma_utils.obj (.text:EDMA_UTILS_globalReset)
                  8000b408    00000048     eve_profile.obj (.text:profiler_start)
                  8000b450    00000044     dmautils.lib : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D_init)
                  8000b494    00000038     eve_profile.obj (.text:profiler_printStatus)
                  8000b4cc    00000030     eve_profile.obj (.text:profiler_initStack)
                  8000b4fc    0000002c     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_initResources)
                  8000b528    0000002c     libevekernels.eve.lib : eve_integral_image_kernel.obj (.text:eve_integral_image_reset_accv_init)
                  8000b554    00000024     eve_profile.obj (.text:TEST_PRINTF)
                  8000b578    00000020     dmautils.lib : edma_utils_state.obj (.text:DMA_utils_resetStateStruct)
                  8000b598    00000018     libevekernels.eve.lib : eve_integral_image_kernel.obj (.text:eve_integral_image_reset_accv_vloops)
                  8000b5b0    00000018     eve_profile.obj (.text:profiler_getSP)
                  8000b5c8    00000010     eve_profile.obj (.text:profiler_end_print)
                  8000b5d8    0000000c     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_setEdma3RmHandle)
                  8000b5e4    0000000c     ti_mem_manager.obj (.text:TI_CreateMemoryHandle)
                  8000b5f0    0000000c     ti_mem_manager.obj (.text:TI_ResetMemoryHandle)
                  8000b5fc    00000008     libevekernels.eve.lib : eve_integral_image_kernel.obj (.text:eve_integral_image_u8_int_int_param_count)
                  8000b604    00000004     dmautils.lib : edma3lld_support.obj (.text:EDMA3LLD_SUPPORT_requestResources)
                  8000b608    00000004     libevekernels.eve.lib : eve_integral_image_kernel.obj (.text:eve_integral_image_reset_accv_param_count)

.bam_text 
*          0    8000b60c    00003624     
                  8000b60c    00000820     algframework.lib : bam_construct_int.obj (.text:BAM_initGraph)
                  8000be2c    00000770                      : bam_construct_int.obj (.text:BAM_autoAllocMemRec)
                  8000c59c    00000574                      : bam_execute.obj (.text:BAM_execute)
                  8000cb10    0000047c                      : bam_construct_int.obj (.text:BAM_finaliseGraph)
                  8000cf8c    00000414                      : bam_construct_int.obj (.text:BAM_optimizeGraph)
                  8000d3a0    00000378                      : bam_construct_int.obj (.text:BAM_getMemRec)
                  8000d718    000001cc                      : bam_construct.obj (.text:BAM_createGraph)
                  8000d8e4    00000184                      : bam_memory.obj (.text:bam_mem_alloc)
                  8000da68    00000158                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_getMemRecFunc)
                  8000dbc0    00000158                      : bam_construct_int.obj (.text:BAM_updateNodes)
                  8000dd18    00000138                      : bam_execute.obj (.text:BAM_process)
                  8000de50    00000138                      : bam_memory.obj (.text:bam_getMemPacket)
                  8000df88    00000120                      : bam_construct_int.obj (.text:BAM_setNodeMemRec)
                  8000e0a8    0000011c                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_setMemRecFunc)
                  8000e1c4    00000110                      : bam_construct_int.obj (.text:BAM_fillKernelInfo)
                  8000e2d4    0000010c                      : bam_construct_int.obj (.text:BAM_getGraphMemSize)
                  8000e3e0    000000cc                      : bam_memory.obj (.text:bam_mem_free)
                  8000e4ac    000000b4                      : bam_execute.obj (.text:BAM_activateGraph)
                  8000e560    000000ac                      : bam_construct_int.obj (.text:BAM_copyIntMemRec2ExtMem)
                  8000e60c    000000a0                      : bam_memory.obj (.text:bam_minit)
                  8000e6ac    00000098                      : bam_execute.obj (.text:BAM_ARP32_computeWrapper)
                  8000e744    00000090                      : bam_memory.obj (.text:bam_releaseMemPacket)
                  8000e7d4    0000008c                      : bam_construct_int.obj (.text:BAM_copyNodeList)
                  8000e860    00000074                      : bam_execute.obj (.text:BAM_initGraphInstance)
                  8000e8d4    00000070                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel)
                  8000e944    00000070                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel)
                  8000e9b4    00000068                      : bam_memory.obj (.text:bam_mcheck)
                  8000ea1c    00000064                      : bam_execute.obj (.text:BAM_DSP_computeWrapper)
                  8000ea80    00000054                      : bam_execute.obj (.text:BAM_controlNode)
                  8000ead4    0000004c                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitInChannel)
                  8000eb20    0000004c                      : bam_construct.obj (.text:BAM_initKernelDB)
                  8000eb6c    00000044                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitOutChannel)
                  8000ebb0    00000038                      : bam_construct_int.obj (.text:BAM_getMemPacket)
                  8000ebe8    0000002c                      : bam_utils.obj (.text:BAM_printf)
                  8000ec14    00000018                      : bam_execute.obj (.text:VCOP_SET_MEM_VIEW)
                  8000ec2c    00000004                      : bam_execute.obj (.text:BAM_dummyKernelFunc)

.algo_text 
*          0    8000ec30    000008fc     
                  8000ec30    000000f4     libevekernels.eve.lib : bam_image_integralimage_u8_helper_funcs.obj (.text:BAM_Image_integralImage_u8_getMemRecFunc)
                  8000ed24    0000006c                           : bam_image_integralimage_u8_exec_funcs.obj (.text:BAM_Image_integralImage_u8_initFrame)
                  8000ed90    00000044                           : bam_image_integralimage_u8_exec_funcs.obj (.text:BAM_Image_integralImage_u8_computeFrame)
                  8000edd4    000001a8     libeveIntegralImage.eve.lib : integral_image_graph.obj (.text:INTEGRAL_IMAGE_TI_graphCreate)
                  8000ef7c    0000019c                                 : integral_image_graph.obj (.text:INTEGRAL_IMAGE_TI_initKernelsArgs)
                  8000f118    0000010c                                 : integral_image_alg.obj (.text:INTEGRAL_IMAGE_TI_process)
                  8000f224    000000dc                                 : integral_image_alg.obj (.text:INTEGRAL_IMAGE_TI_alloc)
                  8000f300    0000009c                                 : integral_image_alg.obj (.text:INTEGRAL_IMAGE_TI_init)
                  8000f39c    00000088                                 : integral_image_graph.obj (.text:INTEGRAL_IMAGE_TI_dmaControl)
                  8000f424    0000005c                                 : integral_image_alg.obj (.text:INTEGRAL_IMAGE_TI_activate)
                  8000f480    00000050                                 : integral_image_alg.obj (.text:INTEGRAL_IMAGE_TI_deactivate)
                  8000f4d0    00000020                                 : integral_image_graph.obj (.text:INTEGRAL_IMAGE_TI_execute)
                  8000f4f0    0000001c                                 : integral_image_graph.obj (.text:INTEGRAL_IMAGE_TI_getGraphMemReq)
                  8000f50c    00000018                                 : integral_image_alg.obj (.text:INTEGRAL_IMAGE_TI_free)
                  8000f524    00000004                                 : integral_image_alg.obj (.text:INTEGRAL_IMAGE_TI_control)
                  8000f528    00000004                                 : integral_image_alg.obj (.text:INTEGRAL_IMAGE_TI_numAlloc)

.starterware_text 
*          0    8000f52c    00000110     
                  8000f52c    00000048     libevestarterware_eve.lib : sctm.obj (.text:EVE_SCTM_CounterConfig)
                  8000f574    0000002c                               : sctm.obj (.text:EVE_SCTM_CounterTimerEnable)
                  8000f5a0    0000002c                               : sctm.obj (.text:EVE_SCTM_InpEvtSelect)
                  8000f5cc    0000002c                               : sctm.obj (.text:EVE_SCTM_SamplingSelect)
                  8000f5f8    00000018                               : sctm.obj (.text:EVE_SCTM_CounterRead)
                  8000f610    00000018                               : sctm.obj (.text:EVE_SCTM_OverflowCheck)
                  8000f628    00000014                               : sctm.obj (.text:EVE_SCTM_Enable)

.algo_neardata 
*          1    40020000    00000000     UNINITIALIZED

.starterware_neardata 
*          1    40020000    00000000     UNINITIALIZED

.stack     1    40020000    00004000     UNINITIALIZED
                  40020000    00000004     rtsarp32_v200.lib : boot.obj (.stack)
                  40020004    00003ffc     --HOLE--

.dmemSect 
*          1    40024000    00002000     UNINITIALIZED
                  40024000    00002000     integral_image_test.obj (.dmemSect)

.bam_neardata 
*          1    40026000    000003d9     
                  40026000    00000014     algframework.lib : bam_memory.obj (.bss) [fill = 0]
                  40026014    00000005                      : bam_memory.obj (.data)
                  40026019    00000003     --HOLE-- [fill = 0]
                  4002601c    00000008                      : bam_construct_int.obj (.rodata)
                  40026024    00000004                      : bam_execute.obj (.rodata)
                  40026028    00000004                      : bam_memory.obj (.rodata)
                  4002602c    000001f8                      : bam_dma_autoincrement_node.obj (.const:.string)
                  40026224    00000121                      : bam_construct_int.obj (.const:.string)
                  40026345    00000090                      : bam_execute.obj (.const:.string)
                  400263d5    00000001     --HOLE-- [fill = 0]
                  400263d6    00000003                      : bam_construct_int.obj (.const:.string:$P$T0$1)

.rts_neardata 
*          1    400263dc    00000266     
                  400263dc    00000101     rtsarp32_v200.lib : ctype.obj (.const:.string:_ctypes_)
                  400264dd    00000003                       : assert.obj (.const:.string)
                  400264e0    00000050                       : strtod.obj (.const:digits)
                  40026530    00000050                       : strtold.obj (.const:digits)
                  40026580    00000048                       : strtod.obj (.const:powerof10)
                  400265c8    00000048                       : strtold.obj (.const:powerof10)
                  40026610    00000023                       : _printfi.obj (.const:.string)
                  40026633    00000001     --HOLE-- [fill = 0]
                  40026634    00000007                       : _scanfi.obj (.const:.string:flit$1)
                  4002663b    00000001     --HOLE-- [fill = 0]
                  4002663c    00000006                       : _scanfi.obj (.const:.string:barr$2)

.bss       1    40026644    00000150     UNINITIALIZED
                  40026644    000000a8     dmautils.lib : dma_resource_allocator.obj (.bss)
                  400266ec    00000060                  : edma_utils_state.obj (.bss)
                  4002674c    00000048     eve_profile.obj (.bss)

.data      1    40026794    00000028     
                  40026794    00000020     boot_arp32.obj (.data)
                  400267b4    00000004     dmautils.lib : dma_resource_allocator.obj (.data)
                  400267b8    00000004     eve_profile.obj (.data)

.rodata    1    400267bc    00000048     
                  400267bc    00000028     ti_stats_collector.obj (.rodata)
                  400267e4    00000008     dmautils.lib : edma_utils_autoincrement.obj (.rodata)
                  400267ec    00000008     eve_profile.obj (.rodata)
                  400267f4    00000008     integral_image_test.obj (.rodata)
                  400267fc    00000004     dmautils.lib : edma_utils_memcpy.obj (.rodata)
                  40026800    00000004     libeveIntegralImage.eve.lib : integral_image_graph.obj (.rodata)

.cio       1    40026804    00000120     UNINITIALIZED
                  40026804    00000120     rtsarp32_v200.lib : trgmsg.obj (.cio)

.edma_utils_lib_fardata 
*          1    40026924    00000004     
                  40026924    00000004     dmautils.lib : edma_utils.obj (.const:edmaBase)

.sysmem    1    80030000    01800000     UNINITIALIZED
                  80030000    00000008     rtsarp32_v200.lib : memory.obj (.sysmem)
                  80030008    017ffff8     --HOLE--

.fardata   1    81830000    0000186c     
                  81830000    00001800     integral_image_test.obj (.fardata:gsTokenMap_sof)
                  81831800    00000030     libeveIntegralImage.eve.lib : integral_image_graph.obj (.fardata:bamKernelExecFuncDB)
                  81831830    00000030                                 : integral_image_graph.obj (.fardata:bamKernelHostDB)
                  81831860    0000000c                                 : integral_image_graph.obj (.fardata)

.const     1    8183186c    00000cfe     
                  8183186c    000003d2     eve_profile.obj (.const:.string)
                  81831c3e    00000256     configparser.obj (.const:.string)
                  81831e94    0000019c     integral_image_test.obj (.const:.string)
                  81832030    00000194     libeveIntegralImage.eve.lib : integral_image_graph.obj (.const:.string)
                  818321c4    00000128     ti_stats_collector.obj (.const:.switchtab)
                  818322ec    000000fd     report_utils.obj (.const:.string)
                  818323e9    00000056     ti_mem_manager.obj (.const:.string)
                  8183243f    00000001     --HOLE-- [fill = 0]
                  81832440    00000054     libeveIntegralImage.eve.lib : integral_image_alg.obj (.const)
                  81832494    00000043     ti_stats_collector.obj (.const:.string)
                  818324d7    00000032     libeveIntegralImage.eve.lib : integral_image_alg.obj (.const:.string)
                  81832509    00000003     --HOLE-- [fill = 0]
                  8183250c    00000030                                 : integral_image_graph.obj (.const:$P$T0$1)
                  8183253c    00000014                                 : integral_image_graph.obj (.const:$P$T1$2)
                  81832550    00000012     integral_image_test.obj (.const:.string:__FUNCTION__$1)
                  81832562    00000008     configparser.obj (.const:.string:$P$T0$1)

.bam_fardata 
*          1    8183256c    00000558     
                  8183256c    00000078     algframework.lib : bam_memory.obj (.far) [fill = 0]
                  818325e4    0000000c                      : bam_execute.obj (.far) [fill = 0]
                  818325f0    00000008                      : bam_construct.obj (.far) [fill = 0]
                  818325f8    00000400                      : bam_utils.obj (.fardata:gBAM_memPrintfArr)
                  818329f8    00000068                      : bam_dma_autoincrement_node.obj (.fardata)
                  81832a60    00000064                      : bam_memory.obj (.fardata:vcop_mem)

.far       1    81832ac4    000004cc     UNINITIALIZED
                  81832ac4    00000484     integral_image_test.obj (.far)
                  81832f48    00000028     ti_stats_collector.obj (.far)
                  81832f70    00000020     eve_profile.obj (.far)

.rts_fardata 
*          1    81832f90    00000300     
                  81832f90    000000a0     rtsarp32_v200.lib : defs.obj (.far) [fill = 0]
                  81833030    0000000c                       : memory.obj (.far) [fill = 0]
                  8183303c    00000008                       : boot.obj (.far) [fill = 0]
                  81833044    00000008                       : trgdrv.obj (.far) [fill = 0]
                  8183304c    000000f0                       : defs.obj (.fardata:_ftable)
                  8183313c    00000078                       : lowlev.obj (.fardata:_device)
                  818331b4    00000064                       : vcop_memory.obj (.fardata:vcop_mem)
                  81833218    00000050                       : lowlev.obj (.fardata:_stream)
                  81833268    00000008                       : _lock.obj (.fardata)
                  81833270    00000005                       : vcop_memory.obj (.fardata)
                  81833275    00000003     --HOLE-- [fill = 0]
                  81833278    00000004                       : defs.obj (.fardata)
                  8183327c    00000004                       : errno.obj (.fardata)
                  81833280    00000004                       : fopen.obj (.fardata)
                  81833284    00000004                       : lowlev.obj (.fardata)
                  81833288    00000004                       : memory.obj (.fardata)
                  8183328c    00000004                       : rand.obj (.fardata)

.starterware_fardata 
*          1    81833290    000001f4     
                  81833290    000001f4     libevestarterware_eve.lib : cred.obj (.fardata:CRED_instVirtAddr)

.algo_fardata 
*          1    81833484    00000034     
                  81833484    0000001c     libevekernels.eve.lib : bam_image_integralimage_u8_helper_funcs.obj (.fardata)
                  818334a0    00000018                           : bam_image_integralimage_u8_exec_funcs.obj (.fardata)


SEGMENT ATTRIBUTES

    id tag      seg value
    -- ---      --- -----
     0 PHA_PAGE 4   1    
     1 PHA_PAGE 5   1    
     2 PHA_PAGE 6   1    
     3 PHA_PAGE 7   1    
     4 PHA_PAGE 8   1    
     5 PHA_PAGE 9   1    
     6 PHA_PAGE 10  1    
     7 PHA_PAGE 11  1    
     8 PHA_PAGE 12  1    
     9 PHA_PAGE 13  1    
    10 PHA_PAGE 14  1    
    11 PHA_PAGE 15  1    
    12 PHA_PAGE 16  1    


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
8000e6ac   BAM_ARP32_computeWrapper
8000ead4   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000eb6c   BAM_DMA_AUTOINCREMENT_frameInitOutChannel
8000da68   BAM_DMA_AUTOINCREMENT_getMemRecFunc
8000e0a8   BAM_DMA_AUTOINCREMENT_setMemRecFunc
8000e8d4   BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel
8000e944   BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel
8000ed90   BAM_Image_integralImage_u8_computeFrame
8000ec30   BAM_Image_integralImage_u8_getMemRecFunc
8000ed24   BAM_Image_integralImage_u8_initFrame
8000e4ac   BAM_activateGraph
8000ea80   BAM_controlNode
8000e560   BAM_copyIntMemRec2ExtMem
8000e7d4   BAM_copyNodeList
8000d718   BAM_createGraph
8000ec2c   BAM_dummyKernelFunc
8000e1c4   BAM_fillKernelInfo
8000e2d4   BAM_getGraphMemSize
8000ebb0   BAM_getMemPacket
8000b60c   BAM_initGraph
8000e860   BAM_initGraphInstance
8000eb20   BAM_initKernelDB
8000cf8c   BAM_optimizeGraph
8000ebe8   BAM_printf
8000dd18   BAM_process
8000dbc0   BAM_updateNodes
80007af0   C$$EXIT
800076c0   C$$IO$$
81833290   CRED_instVirtAddr
8000a48c   DMA_funcs_hardwareRegSetup
8000b0ac   DMA_funcs_writeTransferParams
8000a808   DMA_resourceAllocator_allocateResources
8000b4fc   DMA_resourceAllocator_initResources
8000b5d8   DMA_resourceAllocator_setEdma3RmHandle
8000b578   DMA_utils_resetStateStruct
8000adf8   DMA_utils_updateStateStruct
40024000   DMEM_SCRATCH
8000b604   EDMA3LLD_SUPPORT_requestResources
8000888c   EDMA_UTILS_autoIncrement_configure
8000ac38   EDMA_UTILS_autoIncrement_init
8000a980   EDMA_UTILS_autoIncrement_triggerInChannel
8000a650   EDMA_UTILS_autoIncrement_triggerOutChannel
80009bb8   EDMA_UTILS_autoIncrement_update
8000b318   EDMA_UTILS_autoIncrement_waitInChannel
8000b1fc   EDMA_UTILS_autoIncrement_waitOutChannel
8000b3bc   EDMA_UTILS_globalReset
8000af88   EDMA_UTILS_memcpy2D
8000f52c   EVE_SCTM_CounterConfig
8000f5f8   EVE_SCTM_CounterRead
8000f574   EVE_SCTM_CounterTimerEnable
8000f628   EVE_SCTM_Enable
8000f5a0   EVE_SCTM_InpEvtSelect
8000f610   EVE_SCTM_OverflowCheck
8000f5cc   EVE_SCTM_SamplingSelect
80006ce0   HOSTclose
80005b9c   HOSTlseek
800060d8   HOSTopen
80006298   HOSTread
80005d04   HOSTrename
80006b00   HOSTunlink
800065f8   HOSTwrite
00000000   IMEMH_SIZE
00000000   IMEML_SIZE
8183246c   INTEGRAL_IMAGE_TI_IRES
81832440   INTEGRAL_IMAGE_TI_VISION_FXNS
8000f424   INTEGRAL_IMAGE_TI_activate
8000f224   INTEGRAL_IMAGE_TI_alloc
8000f524   INTEGRAL_IMAGE_TI_control
8000f480   INTEGRAL_IMAGE_TI_deactivate
8000f39c   INTEGRAL_IMAGE_TI_dmaControl
8000f4d0   INTEGRAL_IMAGE_TI_execute
8000f50c   INTEGRAL_IMAGE_TI_free
8000f4f0   INTEGRAL_IMAGE_TI_getGraphMemReq
8000edd4   INTEGRAL_IMAGE_TI_graphCreate
8000f300   INTEGRAL_IMAGE_TI_init
8000f528   INTEGRAL_IMAGE_TI_numAlloc
8000f118   INTEGRAL_IMAGE_TI_process
8000b554   TEST_PRINTF
8000b5e4   TI_CreateMemoryHandle
8000b2c0   TI_GetMemoryChunk
8000b5f0   TI_ResetMemoryHandle
8000b264   TestApp_AllocMemRecords
00000000   WMEM_SIZE
40026804   __CIOBUF_
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit
40024000   __TI_STACK_END
00004000   __TI_STACK_SIZE
40026000   __TI_STATIC_BASE
01800000   __TI_SYSMEM_SIZE
00000001   __TI_args_main
00000001   __TI_exit
800077f8   __arp32abi_abort_msg
80004230   __arp32abi_addd
800079e8   __arp32abi_addll
80005894   __arp32abi_cmpd
80007980   __arp32abi_cmplls
800079a4   __arp32abi_cmpllu
80006328   __arp32abi_cvtdf
80006790   __arp32abi_cvtfd
80003924   __arp32abi_divd
80003b08   __arp32abi_divull
80006910   __arp32abi_fixdi
80006f14   __arp32abi_fltid
800072a4   __arp32abi_isinf
800071e4   __arp32abi_llshl
800078a0   __arp32abi_llshru
80003ea0   __arp32abi_mpyd
80004b40   __arp32abi_mpyll
80007930   __arp32abi_negd
80007a60   __arp32abi_negll
80007830   __arp32abi_remull
80007744   __arp32abi_strasgi
80007904   __arp32abi_subd
80007a38   __arp32abi_subll
ffffffff   __binit__
ffffffff   __c_args__
00000034   _algo_fardata_size
00000000   _algo_neardata_size
000008fc   _algo_text_size
800076c8   _args_main
80006dc8   _auto_init
00000558   _bam_fardata_size
000003d9   _bam_neardata_size
00003624   _bam_text_size
80005fa0   _buff_read
80006f7c   _c_int00
800074b4   _cleanup
8183303c   _cleanup_ptr
8000698c   _closefile
400263dc   _ctypes_
80007244   _doflush
81833040   _dtors_ptr
80000120   _dummy_handler
80004884   _frcaddd
80003724   _frcdivd
80004ddc   _frcmpyd
81833278   _ft_end
8183304c   _ftable
80000028   _imemha_memory
80000030   _imemhb_memory
80000038   _imemla_memory
80000040   _imemlb_memory
81833268   _lock
80007958   _mpyl
40026794   _my_stack
80007af8   _nop
800030d0   _printfi
80006ea8   _rd_ok
8000740c   _renormd
80000100   _reset_handler
00000300   _rts_fardata_size
00000266   _rts_neardata_size
00006a00   _rts_text_size
80001100   _scanfi
40020000   _stack
000001f4   _starterware_fardata_size
00000000   _starterware_neardata_size
00000110   _starterware_text_size
80030000   _sys_memory
80007afc   _system_pre_init
00003b0c   _text_size
81832f90   _tmpnams
8183326c   _unlock
80000000   _vec_table
80000048   _wmem_memory
80006448   _wrt_ok
80007af0   abort
80006a08   atoi
8000de50   bam_getMemPacket
8000e9b4   bam_mcheck
8000d8e4   bam_mem_alloc
8000e3e0   bam_mem_free
8000e60c   bam_minit
8000e744   bam_releaseMemPacket
40026008   bam_stat_num_packets
ffffffff   binit
80006684   close
40026924   edmaBase
8183327c   errno
8000b528   eve_integral_image_reset_accv_init
8000b608   eve_integral_image_reset_accv_param_count
8000b598   eve_integral_image_reset_accv_vloops
8000a074   eve_integral_image_u8_int_int_init
8000b5fc   eve_integral_image_u8_int_int_param_count
8000b020   eve_integral_image_u8_int_int_vloops
80007460   exit
800078d4   fclose
80006a84   fflush
80007a20   fgets
80007780   fopen
80006d54   fprintf
800056d0   fputc
80004714   fputs
80004c98   fread
80007a4c   free
800064d8   fseek
80006568   ftell
818329f8   gBAM_TI_dmaAutoIncrementReadKernel
81832a0c   gBAM_TI_dmaAutoIncrementWriteKernel
81832a30   gBAM_TI_dmaReadAutoIncrementKernelExecFunc
81832a20   gBAM_TI_dmaReadAutoIncrementKernelHelperFunc
81832a48   gBAM_TI_dmaWriteAutoIncrementKernelExecFunc
81832a28   gBAM_TI_dmaWriteAutoIncrementKernelHelperFunc
81833498   gBAM_TI_integralImage_u8HelperFunc
81833484   gBAM_TI_integralImage_u8Kernel
818334a0   gBAM_TI_integralImage_u8KernelExecFunc
818325f8   gBAM_memPrintfArr
400266ec   gDmaUtilsStateStruct
81832ac4   gParams
81832f80   gTest_TI_profileSctm
40026778   gTest_TI_profileTsc
81830000   gsTokenMap_sof
80008ecc   integralImageTest
80006fe4   lseek
80007180   ltoa
8000a294   main
800075a4   malloc
81832f38   memObj_DMEM
80005960   mem_alloc
80006204   mem_free
800079c8   memccpy
800057b8   memcpy
80005e58   memset
80006c68   minit
800055e4   open
80006890   printf
800098b0   printparams
80009e40   profiler_end
8000b5c8   profiler_end_print
8000b5b0   profiler_getSP
8000b190   profiler_getStackDepth
8000aec4   profiler_init
8000b4cc   profiler_initStack
8000b494   profiler_printStatus
8000b408   profiler_start
8000b36c   profiler_testCaseInfo
80007554   rand
8000704c   read
800075f0   readmsg
8000ad20   readparamfile
80007ae4   remove
8000aae4   report_printAppletInfo
800052c4   setvbuf
80007868   sscanf
80007b00   statCollectorControl
8000b120   statCollectorInit
800015f8   strtod
80003cd4   strtol
80001998   strtold
80001d34   strtoll
800043e8   strtoul
80002e84   strtoull
40026754   test_module_cyles
80007638   unlink
8000735c   vcop_minit
80006e38   vfprintf
800077bc   vsprintf
800070b4   write
80007680   writemsg


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000000   IMEMH_SIZE
00000000   IMEML_SIZE
00000000   WMEM_SIZE
00000000   _algo_neardata_size
00000000   _starterware_neardata_size
00000001   __TI_args_main
00000001   __TI_exit
00000034   _algo_fardata_size
00000110   _starterware_text_size
000001f4   _starterware_fardata_size
00000266   _rts_neardata_size
00000300   _rts_fardata_size
000003d9   _bam_neardata_size
00000558   _bam_fardata_size
000008fc   _algo_text_size
00003624   _bam_text_size
00003b0c   _text_size
00004000   __TI_STACK_SIZE
00006a00   _rts_text_size
01800000   __TI_SYSMEM_SIZE
40020000   _stack
40024000   DMEM_SCRATCH
40024000   __TI_STACK_END
40026000   __TI_STATIC_BASE
40026008   bam_stat_num_packets
400263dc   _ctypes_
400266ec   gDmaUtilsStateStruct
40026754   test_module_cyles
40026778   gTest_TI_profileTsc
40026794   _my_stack
40026804   __CIOBUF_
40026924   edmaBase
80000000   _vec_table
80000028   _imemha_memory
80000030   _imemhb_memory
80000038   _imemla_memory
80000040   _imemlb_memory
80000048   _wmem_memory
80000100   _reset_handler
80000120   _dummy_handler
80001100   _scanfi
800015f8   strtod
80001998   strtold
80001d34   strtoll
80002e84   strtoull
800030d0   _printfi
80003724   _frcdivd
80003924   __arp32abi_divd
80003b08   __arp32abi_divull
80003cd4   strtol
80003ea0   __arp32abi_mpyd
80004230   __arp32abi_addd
800043e8   strtoul
80004714   fputs
80004884   _frcaddd
80004b40   __arp32abi_mpyll
80004c98   fread
80004ddc   _frcmpyd
800052c4   setvbuf
800055e4   open
800056d0   fputc
800057b8   memcpy
80005894   __arp32abi_cmpd
80005960   mem_alloc
80005b9c   HOSTlseek
80005d04   HOSTrename
80005e58   memset
80005fa0   _buff_read
800060d8   HOSTopen
80006204   mem_free
80006298   HOSTread
80006328   __arp32abi_cvtdf
80006448   _wrt_ok
800064d8   fseek
80006568   ftell
800065f8   HOSTwrite
80006684   close
80006790   __arp32abi_cvtfd
80006890   printf
80006910   __arp32abi_fixdi
8000698c   _closefile
80006a08   atoi
80006a84   fflush
80006b00   HOSTunlink
80006c68   minit
80006ce0   HOSTclose
80006d54   fprintf
80006dc8   _auto_init
80006e38   vfprintf
80006ea8   _rd_ok
80006f14   __arp32abi_fltid
80006f7c   _c_int00
80006fe4   lseek
8000704c   read
800070b4   write
80007180   ltoa
800071e4   __arp32abi_llshl
80007244   _doflush
800072a4   __arp32abi_isinf
8000735c   vcop_minit
8000740c   _renormd
80007460   exit
800074b4   _cleanup
80007554   rand
800075a4   malloc
800075f0   readmsg
80007638   unlink
80007680   writemsg
800076c0   C$$IO$$
800076c8   _args_main
80007744   __arp32abi_strasgi
80007780   fopen
800077bc   vsprintf
800077f8   __arp32abi_abort_msg
80007830   __arp32abi_remull
80007868   sscanf
800078a0   __arp32abi_llshru
800078d4   fclose
80007904   __arp32abi_subd
80007930   __arp32abi_negd
80007958   _mpyl
80007980   __arp32abi_cmplls
800079a4   __arp32abi_cmpllu
800079c8   memccpy
800079e8   __arp32abi_addll
80007a20   fgets
80007a38   __arp32abi_subll
80007a4c   free
80007a60   __arp32abi_negll
80007ae4   remove
80007af0   C$$EXIT
80007af0   abort
80007af8   _nop
80007afc   _system_pre_init
80007b00   statCollectorControl
8000888c   EDMA_UTILS_autoIncrement_configure
80008ecc   integralImageTest
800098b0   printparams
80009bb8   EDMA_UTILS_autoIncrement_update
80009e40   profiler_end
8000a074   eve_integral_image_u8_int_int_init
8000a294   main
8000a48c   DMA_funcs_hardwareRegSetup
8000a650   EDMA_UTILS_autoIncrement_triggerOutChannel
8000a808   DMA_resourceAllocator_allocateResources
8000a980   EDMA_UTILS_autoIncrement_triggerInChannel
8000aae4   report_printAppletInfo
8000ac38   EDMA_UTILS_autoIncrement_init
8000ad20   readparamfile
8000adf8   DMA_utils_updateStateStruct
8000aec4   profiler_init
8000af88   EDMA_UTILS_memcpy2D
8000b020   eve_integral_image_u8_int_int_vloops
8000b0ac   DMA_funcs_writeTransferParams
8000b120   statCollectorInit
8000b190   profiler_getStackDepth
8000b1fc   EDMA_UTILS_autoIncrement_waitOutChannel
8000b264   TestApp_AllocMemRecords
8000b2c0   TI_GetMemoryChunk
8000b318   EDMA_UTILS_autoIncrement_waitInChannel
8000b36c   profiler_testCaseInfo
8000b3bc   EDMA_UTILS_globalReset
8000b408   profiler_start
8000b494   profiler_printStatus
8000b4cc   profiler_initStack
8000b4fc   DMA_resourceAllocator_initResources
8000b528   eve_integral_image_reset_accv_init
8000b554   TEST_PRINTF
8000b578   DMA_utils_resetStateStruct
8000b598   eve_integral_image_reset_accv_vloops
8000b5b0   profiler_getSP
8000b5c8   profiler_end_print
8000b5d8   DMA_resourceAllocator_setEdma3RmHandle
8000b5e4   TI_CreateMemoryHandle
8000b5f0   TI_ResetMemoryHandle
8000b5fc   eve_integral_image_u8_int_int_param_count
8000b604   EDMA3LLD_SUPPORT_requestResources
8000b608   eve_integral_image_reset_accv_param_count
8000b60c   BAM_initGraph
8000cf8c   BAM_optimizeGraph
8000d718   BAM_createGraph
8000d8e4   bam_mem_alloc
8000da68   BAM_DMA_AUTOINCREMENT_getMemRecFunc
8000dbc0   BAM_updateNodes
8000dd18   BAM_process
8000de50   bam_getMemPacket
8000e0a8   BAM_DMA_AUTOINCREMENT_setMemRecFunc
8000e1c4   BAM_fillKernelInfo
8000e2d4   BAM_getGraphMemSize
8000e3e0   bam_mem_free
8000e4ac   BAM_activateGraph
8000e560   BAM_copyIntMemRec2ExtMem
8000e60c   bam_minit
8000e6ac   BAM_ARP32_computeWrapper
8000e744   bam_releaseMemPacket
8000e7d4   BAM_copyNodeList
8000e860   BAM_initGraphInstance
8000e8d4   BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel
8000e944   BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel
8000e9b4   bam_mcheck
8000ea80   BAM_controlNode
8000ead4   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000eb20   BAM_initKernelDB
8000eb6c   BAM_DMA_AUTOINCREMENT_frameInitOutChannel
8000ebb0   BAM_getMemPacket
8000ebe8   BAM_printf
8000ec2c   BAM_dummyKernelFunc
8000ec30   BAM_Image_integralImage_u8_getMemRecFunc
8000ed24   BAM_Image_integralImage_u8_initFrame
8000ed90   BAM_Image_integralImage_u8_computeFrame
8000edd4   INTEGRAL_IMAGE_TI_graphCreate
8000f118   INTEGRAL_IMAGE_TI_process
8000f224   INTEGRAL_IMAGE_TI_alloc
8000f300   INTEGRAL_IMAGE_TI_init
8000f39c   INTEGRAL_IMAGE_TI_dmaControl
8000f424   INTEGRAL_IMAGE_TI_activate
8000f480   INTEGRAL_IMAGE_TI_deactivate
8000f4d0   INTEGRAL_IMAGE_TI_execute
8000f4f0   INTEGRAL_IMAGE_TI_getGraphMemReq
8000f50c   INTEGRAL_IMAGE_TI_free
8000f524   INTEGRAL_IMAGE_TI_control
8000f528   INTEGRAL_IMAGE_TI_numAlloc
8000f52c   EVE_SCTM_CounterConfig
8000f574   EVE_SCTM_CounterTimerEnable
8000f5a0   EVE_SCTM_InpEvtSelect
8000f5cc   EVE_SCTM_SamplingSelect
8000f5f8   EVE_SCTM_CounterRead
8000f610   EVE_SCTM_OverflowCheck
8000f628   EVE_SCTM_Enable
80030000   _sys_memory
81830000   gsTokenMap_sof
81832440   INTEGRAL_IMAGE_TI_VISION_FXNS
8183246c   INTEGRAL_IMAGE_TI_IRES
818325f8   gBAM_memPrintfArr
818329f8   gBAM_TI_dmaAutoIncrementReadKernel
81832a0c   gBAM_TI_dmaAutoIncrementWriteKernel
81832a20   gBAM_TI_dmaReadAutoIncrementKernelHelperFunc
81832a28   gBAM_TI_dmaWriteAutoIncrementKernelHelperFunc
81832a30   gBAM_TI_dmaReadAutoIncrementKernelExecFunc
81832a48   gBAM_TI_dmaWriteAutoIncrementKernelExecFunc
81832ac4   gParams
81832f38   memObj_DMEM
81832f80   gTest_TI_profileSctm
81832f90   _tmpnams
8183303c   _cleanup_ptr
81833040   _dtors_ptr
8183304c   _ftable
81833268   _lock
8183326c   _unlock
81833278   _ft_end
8183327c   errno
81833290   CRED_instVirtAddr
81833484   gBAM_TI_integralImage_u8Kernel
81833498   gBAM_TI_integralImage_u8HelperFunc
818334a0   gBAM_TI_integralImage_u8KernelExecFunc
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit

[264 symbols]
