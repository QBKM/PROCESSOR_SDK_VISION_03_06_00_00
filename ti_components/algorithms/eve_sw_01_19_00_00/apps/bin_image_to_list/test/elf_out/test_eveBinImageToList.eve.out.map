******************************************************************************
                   ARP32 Linker PC v1.0.7                      
******************************************************************************
>> Linked Mon Jun 25 22:16:01 2018

OUTPUT FILE NAME:   <.\elf_out\test_eveBinImageToList.eve.out>
ENTRY POINT SYMBOL: "_reset_handler"  address: 80000100


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  VECMEM                80000000   00000100  00000028  000000d8  RWIX
  CMDMEM                80000100   00001000  00000028  00000fd8  RWIX
  EXTMEM                80001100   00020000  00010bec  0000f414  RWIX

PAGE 1:
  DATMEM                40020000   00008000  00006fd9  00001027  RWIX
  WMEM                  40040000   00007fe0  00007e00  000001e0  RWIX
  IMEMLA                40050000   00004000  00004000  00000000  RWIX
  IMEMHA                40054000   00004000  00004000  00000000  RWIX
  IMEMLB                40070000   00004000  00004000  00000000  RWIX
  IMEMHB                40074000   00004000  00004000  00000000  RWIX
  L3MEM                 40300000   00100000  00000000  00100000  RWIX
  GEM0_L2_MEM           40800000   00008000  00000000  00008000  RWIX
  EXTDMEM               80030000   02000000  0180986a  007f6796  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.cinit     1    40020000    00000000     UNINITIALIZED

.init_array 
*          1    40020000    00000000     UNINITIALIZED

.intvecs   0    80000000    00000028     
                  80000000    00000028     boot_arp32.obj (.intvecs)

.inthandler 
*          0    80000100    00000028     
                  80000100    00000028     boot_arp32.obj (.inthandler)

.rts_text 
*          0    80001100    00006f30     
                  80001100    000004f8     rtsarp32_v200.lib : _scanfi.obj (.text:_scanfi)
                  800015f8    000003a0                       : strtod.obj (.text:strtod)
                  80001998    0000039c                       : strtold.obj (.text:strtold)
                  80001d34    00000364                       : divf.obj (.text:__arp32abi_divf)
                  80002098    000002d8                       : strtoll.obj (.text:strtoll)
                  80002370    000002a0                       : _printfi.obj (.text:_setfield)
                  80002610    00000268                       : _scanfi.obj (.text:_sproc_int)
                  80002878    00000260                       : _scanfi.obj (.text:_sset_arg)
                  80002ad8    0000025c                       : _printfi.obj (.text:_pproc_fge)
                  80002d34    0000025c                       : _printfi.obj (.text:ecvt)
                  80002f90    00000258                       : _printfi.obj (.text:fcvt)
                  800031e8    0000024c                       : strtoull.obj (.text:strtoull)
                  80003434    0000022c                       : _printfi.obj (.text:_printfi)
                  80003660    00000220                       : _printfi.obj (.text:_pconv_e)
                  80003880    00000208                       : _printfi.obj (.text:_getarg_diouxp)
                  80003a88    00000200                       : frcdivd.obj (.text:_frcdivd)
                  80003c88    000001e4                       : divd.obj (.text:__arp32abi_divd)
                  80003e6c    000001cc                       : imath64.obj (.text:__arp32abi_divull)
                  80004038    000001cc                       : strtol.obj (.text:strtol)
                  80004204    000001c8                       : mpyd.obj (.text:__arp32abi_mpyd)
                  800043cc    000001c8                       : fgets.obj (.text:_dofgets)
                  80004594    000001b8                       : addd.obj (.text:__arp32abi_addd)
                  8000474c    000001a0                       : strtoul.obj (.text:strtoul)
                  800048ec    0000018c                       : _printfi.obj (.text:_pproc_diouxp)
                  80004a78    00000170                       : fputs.obj (.text:fputs)
                  80004be8    00000160                       : frcaddd.obj (.text:_frcaddd)
                  80004d48    0000015c                       : _scanfi.obj (.text:_sproc_float)
                  80004ea4    00000158                       : llmpy.obj (.text:__arp32abi_mpyll)
                  80004ffc    00000144                       : fread.obj (.text:fread)
                  80005140    00000140                       : frcmpyd.obj (.text:_frcmpyd)
                  80005280    00000140                       : _scanfi.obj (.text:_sget_conv)
                  800053c0    0000013c                       : _printfi.obj (.text:_pproc_fwp)
                  800054fc    0000012c                       : fopen.obj (.text:_openfile)
                  80005628    00000118                       : setvbuf.obj (.text:setvbuf)
                  80005740    00000114                       : _printfi.obj (.text:_pconv_g)
                  80005854    000000f4                       : _printfi.obj (.text:_pproc_str)
                  80005948    000000ec                       : lowlev.obj (.text:open)
                  80005a34    000000e8                       : fputc.obj (.text:fputc)
                  80005b1c    000000dc                       : memcpy.obj (.text:memcpy)
                  80005bf8    000000cc                       : cmpd.obj (.text:__arp32abi_cmpd)
                  80005cc4    000000c4                       : memory.obj (.text:mem_alloc)
                  80005d88    000000bc                       : _printfi.obj (.text:_ltostr)
                  80005e44    000000bc                       : _scanfi.obj (.text:_sproc_str)
                  80005f00    000000b4                       : trgdrv.obj (.text:HOSTlseek)
                  80005fb4    000000b4                       : _scanfi.obj (.text:_sproc_lb)
                  80006068    000000ac                       : trgdrv.obj (.text:HOSTrename)
                  80006114    000000a8                       : fopen.obj (.text:_search_fp)
                  800061bc    000000a8                       : memset.obj (.text:memset)
                  80006264    000000a0                       : lowlev.obj (.text:getdevice)
                  80006304    0000009c                       : _bufread.obj (.text:_buff_read)
                  800063a0    0000009c                       : _printfi.obj (.text:_mcpy)
                  8000643c    00000098                       : trgdrv.obj (.text:HOSTopen)
                  800064d4    00000094                       : sscanf.obj (.text:_chkmbc)
                  80006568    00000094                       : memory.obj (.text:mem_free)
                  800065fc    00000090                       : trgdrv.obj (.text:HOSTread)
                  8000668c    00000090                       : cvtdf.obj (.text:__arp32abi_cvtdf)
                  8000671c    00000090                       : _printfi.obj (.text:_pproc_fflags)
                  800067ac    00000090                       : _io_perm.obj (.text:_wrt_ok)
                  8000683c    00000090                       : fseek.obj (.text:fseek)
                  800068cc    00000090                       : ftell.obj (.text:ftell)
                  8000695c    0000008c                       : trgdrv.obj (.text:HOSTwrite)
                  800069e8    00000088                       : lowlev.obj (.text:close)
                  80006a70    00000084                       : _printfi.obj (.text:_ecpy)
                  80006af4    00000080                       : cvtfd.obj (.text:__arp32abi_cvtfd)
                  80006b74    00000080                       : fltulld.obj (.text:__arp32abi_fltulld)
                  80006bf4    00000080                       : _scanfi.obj (.text:_sget_scanset)
                  80006c74    00000080                       : printf.obj (.text:printf)
                  80006cf4    0000007c                       : fixdi.obj (.text:__arp32abi_fixdi)
                  80006d70    0000007c                       : fltullf.obj (.text:__arp32abi_fltullf)
                  80006dec    0000007c                       : fclose.obj (.text:_closefile)
                  80006e68    0000007c                       : atoi.obj (.text:atoi)
                  80006ee4    0000007c                       : fflush.obj (.text:fflush)
                  80006f60    00000078                       : trgdrv.obj (.text:HOSTunlink)
                  80006fd8    00000078                       : _printfi.obj (.text:_div)
                  80007050    00000078                       : _printfi.obj (.text:_pconv_f)
                  800070c8    00000078                       : memory.obj (.text:minit)
                  80007140    00000074                       : trgdrv.obj (.text:HOSTclose)
                  800071b4    00000074                       : fprintf.obj (.text:fprintf)
                  80007228    00000070                       : autoinit.obj (.text:_auto_init)
                  80007298    00000070                       : vfprintf.obj (.text:vfprintf)
                  80007308    0000006c                       : _io_perm.obj (.text:_rd_ok)
                  80007374    00000068                       : fltid.obj (.text:__arp32abi_fltid)
                  800073dc    00000068                       : boot.obj (.text:_c_int00)
                  80007444    00000068                       : lowlev.obj (.text:lseek)
                  800074ac    00000068                       : lowlev.obj (.text:read)
                  80007514    00000068                       : lowlev.obj (.text:write)
                  8000757c    00000064                       : imath64.obj (.text:_subcull)
                  800075e0    00000064                       : ltoa.obj (.text:ltoa)
                  80007644    00000060                       : llshift.obj (.text:__arp32abi_llshl)
                  800076a4    00000060                       : fflush.obj (.text:_doflush)
                  80007704    0000005c                       : isinf.obj (.text:__arp32abi_isinf)
                  80007760    0000005c                       : lowlev.obj (.text:tabinit)
                  800077bc    0000005c                       : vcop_memory.obj (.text:vcop_minit)
                  80007818    00000058                       : fltif.obj (.text:__arp32abi_fltif)
                  80007870    00000054                       : _printfi.obj (.text:_fcpy)
                  800078c4    00000054                       : renormd.obj (.text:_renormd)
                  80007918    00000054                       : exit.obj (.text:exit)
                  8000796c    00000050                       : fopen.obj (.text:_cleanup)
                  800079bc    00000050                       : lowlev.obj (.text:finddevice)
                  80007a0c    00000050                       : rand.obj (.text:rand)
                  80007a5c    0000004c                       : memory.obj (.text:malloc)
                  80007aa8    00000048                       : frcmpyf_div.obj (.text:__arp32abi_frcmpyf_div)
                  80007af0    00000048                       : trgmsg.obj (.text:readmsg)
                  80007b38    00000048                       : lowlev.obj (.text:unlink)
                  80007b80    00000048                       : trgmsg.obj (.text:writemsg)
                  80007bc8    00000040                       : args_main.obj (.text:_args_main)
                  80007c08    0000003c                       : _printfi.obj (.text:__arp32abi_isnan)
                  80007c44    0000003c                       : strasgi_c.obj (.text:__arp32abi_strasgi)
                  80007c80    0000003c                       : fopen.obj (.text:fopen)
                  80007cbc    0000003c                       : vsprintf.obj (.text:vsprintf)
                  80007cf8    00000038                       : assert.obj (.text:__arp32abi_abort_msg)
                  80007d30    00000038                       : imath64.obj (.text:__arp32abi_remull)
                  80007d68    00000038                       : sscanf.obj (.text:sscanf)
                  80007da0    00000034                       : llshift.obj (.text:__arp32abi_llshru)
                  80007dd4    00000030                       : fclose.obj (.text:fclose)
                  80007e04    00000030                       : rand.obj (.text:srand)
                  80007e34    0000002c                       : subd.obj (.text:__arp32abi_subd)
                  80007e60    00000028                       : negd.obj (.text:__arp32abi_negd)
                  80007e88    00000028                       : mult.obj (.text:_mpyl)
                  80007eb0    00000024                       : llcmp.obj (.text:__arp32abi_cmplls)
                  80007ed4    00000024                       : llcmp.obj (.text:__arp32abi_cmpllu)
                  80007ef8    00000020                       : memccpy.obj (.text:memccpy)
                  80007f18    0000001c                       : lladdsub.obj (.text:__arp32abi_addll)
                  80007f34    0000001c                       : vsprintf.obj (.text:_outs)
                  80007f50    00000018                       : fgets.obj (.text:fgets)
                  80007f68    00000014                       : lladdsub.obj (.text:__arp32abi_subll)
                  80007f7c    00000014                       : memory.obj (.text:free)
                  80007f90    00000010                       : lladdsub.obj (.text:__arp32abi_negll)
                  80007fa0    00000010                       : sscanf.obj (.text:_inpchar)
                  80007fb0    00000010                       : vsprintf.obj (.text:_outc)
                  80007fc0    0000000c                       : fprintf.obj (.text:_outc)
                  80007fcc    0000000c                       : printf.obj (.text:_outc)
                  80007fd8    0000000c                       : vfprintf.obj (.text:_outc)
                  80007fe4    0000000c                       : fprintf.obj (.text:_outs)
                  80007ff0    0000000c                       : printf.obj (.text:_outs)
                  80007ffc    0000000c                       : vfprintf.obj (.text:_outs)
                  80008008    0000000c                       : sscanf.obj (.text:_uninpchar)
                  80008014    0000000c                       : remove.obj (.text:remove)
                  80008020    00000008                       : exit.obj (.text:abort)
                  80008028    00000004                       : _lock.obj (.text:_nop)
                  8000802c    00000004                       : pre_init.obj (.text:_system_pre_init)

.text      0    80008030    00004ba8     
                  80008030    00000d8c     ti_stats_collector.obj (.text:statCollectorControl)
                  80008dbc    00000b68     bin_image_to_list_tb.obj (.text:binImageToListTest)
                  80009924    00000640     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_configure)
                  80009f64    000004bc                  : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_configure)
                  8000a420    000003e8     configparser.obj (.text:ParseContent)
                  8000a808    0000031c     bin_image_to_list_tb.obj (.text:TestApp_BinImageToListReference)
                  8000ab24    00000308     configparser.obj (.text:printparams)
                  8000ae2c    00000288     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_update)
                  8000b0b4    00000234     bin_image_to_list_tb.obj (.text:main)
                  8000b2e8    00000234     eve_profile.obj (.text:profiler_end)
                  8000b51c    000001c4     dmautils.lib : dma_funcs.obj (.text:DMA_funcs_hardwareRegSetup)
                  8000b6e0    00000190                  : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_init)
                  8000b870    00000178                  : dma_resource_allocator.obj (.text:DMA_resourceAllocator_allocateResources)
                  8000b9e8    0000016c                  : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_update)
                  8000bb54    00000164                  : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerInChannel)
                  8000bcb8    0000015c     bin_image_to_list_tb.obj (.text:TestApp_AllocateBufs)
                  8000be14    00000154     report_utils.obj (.text:report_printAppletInfo)
                  8000bf68    000000f0     libevenatckernels.eve.lib : vcop_bin_image_to_list_cn.obj (.text:vcop_bin_image_to_list_cn)
                  8000c058    000000e8     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_init)
                  8000c140    000000d8     configparser.obj (.text:readparamfile)
                  8000c218    000000cc     dmautils.lib : edma_utils_state.obj (.text:DMA_utils_updateStateStruct)
                  8000c2e4    000000c4     eve_profile.obj (.text:profiler_init)
                  8000c3a8    000000c0     libevenatckernels.eve.lib : vcop_binary_masking_cn.obj (.text:vcop_binary_masking_cn)
                  8000c468    000000b8     dmautils.lib : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_init)
                  8000c520    000000b8     libevenatckernels.eve.lib : vcop_select_list_elements_cn.obj (.text:vcop_select_list_elements_cn)
                  8000c5d8    000000a0     dmautils.lib : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_updateNtrigger)
                  8000c678    00000098                  : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D)
                  8000c710    00000074                  : dma_funcs.obj (.text:DMA_funcs_writeTransferParams)
                  8000c784    00000070     ti_stats_collector.obj (.text:statCollectorInit)
                  8000c7f4    0000006c     eve_profile.obj (.text:profiler_getStackDepth)
                  8000c860    00000058     ti_mem_manager.obj (.text:TI_GetMemoryChunk)
                  8000c8b8    00000054     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitInChannel)
                  8000c90c    00000050     eve_profile.obj (.text:profiler_testCaseInfo)
                  8000c95c    0000004c     dmautils.lib : edma_utils.obj (.text:EDMA_UTILS_globalReset)
                  8000c9a8    00000048     eve_profile.obj (.text:profiler_start)
                  8000c9f0    00000044     dmautils.lib : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D_init)
                  8000ca34    00000038                  : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_waitInChannel)
                  8000ca6c    00000038     eve_profile.obj (.text:profiler_printStatus)
                  8000caa4    00000030     eve_profile.obj (.text:profiler_initStack)
                  8000cad4    0000002c     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_initResources)
                  8000cb00    00000024     eve_profile.obj (.text:TEST_PRINTF)
                  8000cb24    00000020     dmautils.lib : edma_utils_state.obj (.text:DMA_utils_resetStateStruct)
                  8000cb44    00000020                  : edma_utils_autoincrement_1d.obj (.text:EDMA_UTILS_autoIncrement1D_triggerInChannel)
                  8000cb64    00000020                  : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_wait)
                  8000cb84    00000018     eve_profile.obj (.text:profiler_getSP)
                  8000cb9c    00000010     dmautils.lib : edma_utils_scatterGather.obj (.text:EDMA_UTILS_scattherGather_configure)
                  8000cbac    00000010     eve_profile.obj (.text:profiler_end_print)
                  8000cbbc    0000000c     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_setEdma3RmHandle)
                  8000cbc8    0000000c     ti_mem_manager.obj (.text:TI_CreateMemoryHandle)
                  8000cbd4    00000004     dmautils.lib : edma3lld_support.obj (.text:EDMA3LLD_SUPPORT_requestResources)

.bam_text 
*          0    8000cbd8    000031d8     
                  8000cbd8    00000820     algframework.lib : bam_construct_int.obj (.text:BAM_initGraph)
                  8000d3f8    00000770                      : bam_construct_int.obj (.text:BAM_autoAllocMemRec)
                  8000db68    00000574                      : bam_execute.obj (.text:BAM_execute)
                  8000e0dc    0000047c                      : bam_construct_int.obj (.text:BAM_finaliseGraph)
                  8000e558    00000414                      : bam_construct_int.obj (.text:BAM_optimizeGraph)
                  8000e96c    00000378                      : bam_construct_int.obj (.text:BAM_getMemRec)
                  8000ece4    000001cc                      : bam_construct.obj (.text:BAM_createGraph)
                  8000eeb0    00000184                      : bam_memory.obj (.text:bam_mem_alloc)
                  8000f034    00000158                      : bam_construct_int.obj (.text:BAM_updateNodes)
                  8000f18c    00000138                      : bam_execute.obj (.text:BAM_process)
                  8000f2c4    00000138                      : bam_memory.obj (.text:bam_getMemPacket)
                  8000f3fc    00000120                      : bam_construct_int.obj (.text:BAM_setNodeMemRec)
                  8000f51c    00000110                      : bam_construct_int.obj (.text:BAM_fillKernelInfo)
                  8000f62c    0000010c                      : bam_construct_int.obj (.text:BAM_getGraphMemSize)
                  8000f738    000000cc                      : bam_memory.obj (.text:bam_mem_free)
                  8000f804    000000ac                      : bam_construct_int.obj (.text:BAM_copyIntMemRec2ExtMem)
                  8000f8b0    000000a0                      : bam_memory.obj (.text:bam_minit)
                  8000f950    00000098                      : bam_execute.obj (.text:BAM_ARP32_computeWrapper)
                  8000f9e8    00000090                      : bam_memory.obj (.text:bam_releaseMemPacket)
                  8000fa78    0000008c                      : bam_construct_int.obj (.text:BAM_copyNodeList)
                  8000fb04    00000074                      : bam_execute.obj (.text:BAM_initGraphInstance)
                  8000fb78    00000068                      : bam_memory.obj (.text:bam_mcheck)
                  8000fbe0    00000064                      : bam_execute.obj (.text:BAM_DSP_computeWrapper)
                  8000fc44    00000054                      : bam_execute.obj (.text:BAM_controlNode)
                  8000fc98    0000004c                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitInChannel)
                  8000fce4    0000004c                      : bam_construct.obj (.text:BAM_initKernelDB)
                  8000fd30    00000038                      : bam_construct_int.obj (.text:BAM_getMemPacket)
                  8000fd68    0000002c                      : bam_utils.obj (.text:BAM_printf)
                  8000fd94    00000018                      : bam_execute.obj (.text:VCOP_SET_MEM_VIEW)
                  8000fdac    00000004                      : bam_execute.obj (.text:BAM_dummyKernelFunc)

.algo_text 
*          0    8000fdb0    00001e2c     
                  8000fdb0    0000011c     libevekernels.eve.lib : vcop_bin_image_to_list_kernel.obj (.text:vcop_bin_image_to_list_init)
                  8000fecc    000000e4                           : bam_bin_image_to_list_exec_funcs.obj (.text:Bam_Bin_image_to_list_initFrame)
                  8000ffb0    000000dc                           : bam_select_list_elements_exec_funcs.obj (.text:Bam_Select_list_elements_initFrame)
                  8001008c    000000d8                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_init)
                  80010164    0000007c                           : vcop_binary_masking_kernel.obj (.text:vcop_binary_masking_init)
                  800101e0    00000078                           : vcop_bin_image_to_list_kernel.obj (.text:vcop_bin_image_to_list_vloops)
                  80010258    00000050                           : bam_bin_image_to_list_helper_funcs.obj (.text:BAM_Bin_image_to_list_getMemRecFunc)
                  800102a8    00000050                           : bam_select_list_elements_helper_funcs.obj (.text:BAM_Select_list_elements_getMemRecFunc)
                  800102f8    00000048                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_param_block_update_init)
                  80010340    00000048                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_vloops)
                  80010388    0000003c                           : bam_binary_masking_exec_funcs.obj (.text:Bam_BinaryMasking_initFrame)
                  800103c4    0000003c                           : bam_select_list_elements_exec_funcs.obj (.text:Bam_Select_list_elements_control)
                  80010400    00000038                           : bam_select_list_elements_exec_funcs.obj (.text:Bam_Select_list_elements_computeFrame)
                  80010438    00000034                           : bam_binary_masking_helper_funcs.obj (.text:BAM_BinaryMasking_getMemRecFunc)
                  8001046c    00000034                           : bam_bin_image_to_list_exec_funcs.obj (.text:Bam_Bin_image_to_list_control)
                  800104a0    00000030                           : bam_binary_masking_exec_funcs.obj (.text:Bam_BinaryMasking_control)
                  800104d0    00000030                           : vcop_binary_masking_kernel.obj (.text:vcop_binary_masking_vloops)
                  80010500    00000020                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_param_block_update_vloops)
                  80010520    00000008                           : vcop_bin_image_to_list_kernel.obj (.text:vcop_bin_image_to_list_param_count)
                  80010528    00000004                           : vcop_binary_masking_kernel.obj (.text:vcop_binary_masking_param_count)
                  8001052c    00000004                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_param_block_update_param_count)
                  80010530    00000004                           : vcop_select_list_elements_kernel.obj (.text:vcop_select_list_elements_param_count)
                  80010534    0000052c     libeveBinImageToList.eve.lib : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_process)
                  80010a60    000001c4                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_graphCreate)
                  80010c24    0000015c                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_graphCreate)
                  80010d80    0000014c                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_alloc)
                  80010ecc    00000128                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_IN_updateDDRptr)
                  80010ff4    00000100                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_dmaControl)
                  800110f4    000000c4                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_init)
                  800111b8    000000b8                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_frameInitChannel)
                  80011270    000000b8                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_frameInitChannel)
                  80011328    000000a4                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_IN_updateDDRptr)
                  800113cc    00000088                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_IN_setMemRecFunc)
                  80011454    00000084                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_IN_getMemRecFunc)
                  800114d8    00000078                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_wait)
                  80011550    00000074                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_trigger)
                  800115c4    00000074                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_kernelControl)
                  80011638    00000070                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_activate)
                  800116a8    00000070                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_deactivate)
                  80011718    0000006c                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_wait)
                  80011784    00000068                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_IN_setMemRecFunc)
                  800117ec    00000068                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_trigger)
                  80011854    00000068                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_dmaControl)
                  800118bc    00000058                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_setMemRecFunc)
                  80011914    00000058                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_setMemRecFunc)
                  8001196c    00000054                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_IN_getMemRecFunc)
                  800119c0    00000050                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_IN_frameInitChannel)
                  80011a10    0000003c                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_updateOutDDRptr)
                  80011a4c    0000003c                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_updateOutDDRptr)
                  80011a88    00000038                                  : bam_dma_custom_bin_to_list_node.obj (.text:BAM_DMA_CUSTOM_BIN_TO_LIST_OUT_getMemRecFunc)
                  80011ac0    00000038                                  : bam_dma_custom_select_list_elem_node.obj (.text:BAM_DMA_CUSTOM_SELECT_LIST_ELEM_OUT_getMemRecFunc)
                  80011af8    00000024                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_kernelControl)
                  80011b1c    00000020                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_execute)
                  80011b3c    00000020                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_execute)
                  80011b5c    00000020                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_initKernelsArgs)
                  80011b7c    00000018                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_getGraphMemReq)
                  80011b94    00000018                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_free)
                  80011bac    00000018                                  : bin_image_to_list_with_masking_graph.obj (.text:BIN_IMAGE_TO_LIST_WITH_MASKING_TI_getGraphMemReq)
                  80011bc4    00000010                                  : bin_image_to_list_select_list_elems_graph.obj (.text:BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_initKernelsArgs)
                  80011bd4    00000004                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_control)
                  80011bd8    00000004                                  : bin_image_to_list_alg.obj (.text:BIN_IMAGE_TO_LIST_TI_numAlloc)

.starterware_text 
*          0    80011bdc    00000110     
                  80011bdc    00000048     libevestarterware_eve.lib : sctm.obj (.text:EVE_SCTM_CounterConfig)
                  80011c24    0000002c                               : sctm.obj (.text:EVE_SCTM_CounterTimerEnable)
                  80011c50    0000002c                               : sctm.obj (.text:EVE_SCTM_InpEvtSelect)
                  80011c7c    0000002c                               : sctm.obj (.text:EVE_SCTM_SamplingSelect)
                  80011ca8    00000018                               : sctm.obj (.text:EVE_SCTM_CounterRead)
                  80011cc0    00000018                               : sctm.obj (.text:EVE_SCTM_OverflowCheck)
                  80011cd8    00000014                               : sctm.obj (.text:EVE_SCTM_Enable)

.starterware_neardata 
*          1    40020000    00000000     UNINITIALIZED

.dmemSect 
*          1    40020000    00004000     UNINITIALIZED
                  40020000    00004000     bin_image_to_list_tb.obj (.dmemSect)

.stack     1    40024000    00001c00     UNINITIALIZED
                  40024000    00000004     rtsarp32_v200.lib : boot.obj (.stack)
                  40024004    00001bfc     --HOLE--

.algo_neardata 
*          1    40025c00    00000aac     
                  40025c00    00000004     libeveBinImageToList.eve.lib : bam_dma_custom_bin_to_list_node.obj (.rodata)
                  40025c04    00000004                                  : bam_dma_custom_select_list_elem_node.obj (.rodata)
                  40025c08    000002b2                                  : bam_dma_custom_select_list_elem_node.obj (.const:.string)
                  40025eba    00000234                                  : bam_dma_custom_bin_to_list_node.obj (.const:.string)
                  400260ee    00000192                                  : bin_image_to_list_alg.obj (.const:.string)
                  40026280    00000188                                  : bin_image_to_list_with_masking_graph.obj (.const:.string)
                  40026408    00000175                                  : bin_image_to_list_select_list_elems_graph.obj (.const:.string)
                  4002657d    00000003     --HOLE-- [fill = 0]
                  40026580    00000054                                  : bin_image_to_list_alg.obj (.const)
                  400265d4    0000003c                                  : bin_image_to_list_with_masking_graph.obj (.const:$P$T0$1)
                  40026610    00000030                                  : bin_image_to_list_select_list_elems_graph.obj (.const:$P$T0$1)
                  40026640    00000030                                  : bin_image_to_list_with_masking_graph.obj (.const:$P$T2$3)
                  40026670    00000018                                  : bin_image_to_list_with_masking_graph.obj (.const:$P$T1$2)
                  40026688    00000010                                  : bin_image_to_list_select_list_elems_graph.obj (.const:$P$T1$2)
                  40026698    00000010                                  : bin_image_to_list_with_masking_graph.obj (.const:$P$T3$4)
                  400266a8    00000004     libevekernels.eve.lib : bam_select_list_elements_exec_funcs.obj (.rodata)

.bam_neardata 
*          1    400266ac    000003d9     
                  400266ac    00000014     algframework.lib : bam_memory.obj (.bss) [fill = 0]
                  400266c0    00000005                      : bam_memory.obj (.data)
                  400266c5    00000003     --HOLE-- [fill = 0]
                  400266c8    00000008                      : bam_construct_int.obj (.rodata)
                  400266d0    00000004                      : bam_execute.obj (.rodata)
                  400266d4    00000004                      : bam_memory.obj (.rodata)
                  400266d8    000001f8                      : bam_dma_autoincrement_node.obj (.const:.string)
                  400268d0    00000121                      : bam_construct_int.obj (.const:.string)
                  400269f1    00000090                      : bam_execute.obj (.const:.string)
                  40026a81    00000001     --HOLE-- [fill = 0]
                  40026a82    00000003                      : bam_construct_int.obj (.const:.string:$P$T0$1)

.rts_neardata 
*          1    40026a88    00000270     
                  40026a88    00000101     rtsarp32_v200.lib : ctype.obj (.const:.string:_ctypes_)
                  40026b89    00000001     --HOLE-- [fill = 0]
                  40026b8a    00000008                       : divf.obj (.const:.string:initial_approx$1)
                  40026b92    00000007                       : _scanfi.obj (.const:.string:flit$1)
                  40026b99    00000001     --HOLE-- [fill = 0]
                  40026b9a    00000006                       : _scanfi.obj (.const:.string:barr$2)
                  40026ba0    00000003                       : assert.obj (.const:.string)
                  40026ba3    00000023                       : _printfi.obj (.const:.string)
                  40026bc6    00000002     --HOLE-- [fill = 0]
                  40026bc8    00000050                       : strtod.obj (.const:digits)
                  40026c18    00000048                       : strtod.obj (.const:powerof10)
                  40026c60    00000050                       : strtold.obj (.const:digits)
                  40026cb0    00000048                       : strtold.obj (.const:powerof10)

.bss       1    40026cf8    00000150     UNINITIALIZED
                  40026cf8    000000a8     dmautils.lib : dma_resource_allocator.obj (.bss)
                  40026da0    00000060                  : edma_utils_state.obj (.bss)
                  40026e00    00000048     eve_profile.obj (.bss)

.data      1    40026e48    00000028     
                  40026e48    00000020     boot_arp32.obj (.data)
                  40026e68    00000004     dmautils.lib : dma_resource_allocator.obj (.data)
                  40026e6c    00000004     eve_profile.obj (.data)

.rodata    1    40026e70    00000048     
                  40026e70    00000028     ti_stats_collector.obj (.rodata)
                  40026e98    00000008     bin_image_to_list_tb.obj (.rodata)
                  40026ea0    00000008     dmautils.lib : edma_utils_autoincrement.obj (.rodata)
                  40026ea8    00000008     eve_profile.obj (.rodata)
                  40026eb0    00000004     dmautils.lib : edma_utils_memcpy.obj (.rodata)
                  40026eb4    00000004                  : edma_utils_scatterGather.obj (.rodata)

.cio       1    40026eb8    00000120     UNINITIALIZED
                  40026eb8    00000120     rtsarp32_v200.lib : trgmsg.obj (.cio)

.edma_utils_lib_fardata 
*          1    40026fd8    00000004     
                  40026fd8    00000004     dmautils.lib : edma_utils.obj (.const:edmaBase)

.wmem      1    40040000    00007e00     UNINITIALIZED
                  40040000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.wmem)
                  40040008    00007df8     --HOLE--

.imemla    1    40050000    00004000     UNINITIALIZED
                  40050000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemla)
                  40050008    00003ff8     --HOLE--

.imemha    1    40054000    00004000     UNINITIALIZED
                  40054000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemha)
                  40054008    00003ff8     --HOLE--

.imemlb    1    40070000    00004000     UNINITIALIZED
                  40070000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemlb)
                  40070008    00003ff8     --HOLE--

.imemhb    1    40074000    00004000     UNINITIALIZED
                  40074000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemhb)
                  40074008    00003ff8     --HOLE--

.sysmem    1    80030000    01800000     UNINITIALIZED
                  80030000    00000008     rtsarp32_v200.lib : memory.obj (.sysmem)
                  80030008    017ffff8     --HOLE--

.far       1    81830000    000066d8     UNINITIALIZED
                  81830000    00006680     bin_image_to_list_config.obj (.far)
                  81836680    00000028     ti_stats_collector.obj (.far)
                  818366a8    00000020     eve_profile.obj (.far)
                  818366c8    00000010     bin_image_to_list_tb.obj (.far)

.fardata   1    818366d8    00001800     
                  818366d8    00001800     bin_image_to_list_config.obj (.fardata:gsTokenMap_binImageToList)

.const     1    81837ed8    00000d4a     
                  81837ed8    000003d2     eve_profile.obj (.const:.string)
                  818382aa    000002f5     bin_image_to_list_tb.obj (.const:.string)
                  8183859f    00000256     configparser.obj (.const:.string)
                  818387f5    00000003     --HOLE-- [fill = 0]
                  818387f8    00000128     ti_stats_collector.obj (.const:.switchtab)
                  81838920    0000011a     bin_image_to_list_config.obj (.const:.string)
                  81838a3a    000000fd     report_utils.obj (.const:.string)
                  81838b37    00000056     ti_mem_manager.obj (.const:.string)
                  81838b8d    00000043     ti_stats_collector.obj (.const:.string)
                  81838bd0    00000020     bin_image_to_list_tb.obj (.const:.string:__FUNCTION__$1)
                  81838bf0    00000015     bin_image_to_list_tb.obj (.const:.string:__FUNCTION__$2)
                  81838c05    00000001     --HOLE-- [fill = 0]
                  81838c06    00000013     bin_image_to_list_tb.obj (.const:.string:__FUNCTION__$3)
                  81838c19    00000001     --HOLE-- [fill = 0]
                  81838c1a    00000008     configparser.obj (.const:.string:$P$T0$1)

.bam_fardata 
*          1    81838c24    000004f0     
                  81838c24    00000078     algframework.lib : bam_memory.obj (.far) [fill = 0]
                  81838c9c    0000000c                      : bam_execute.obj (.far) [fill = 0]
                  81838ca8    00000008                      : bam_construct.obj (.far) [fill = 0]
                  81838cb0    00000400                      : bam_utils.obj (.fardata:gBAM_memPrintfArr)
                  818390b0    00000064                      : bam_memory.obj (.fardata:vcop_mem)

.rts_fardata 
*          1    81839114    00000300     
                  81839114    000000a0     rtsarp32_v200.lib : defs.obj (.far) [fill = 0]
                  818391b4    0000000c                       : memory.obj (.far) [fill = 0]
                  818391c0    00000008                       : boot.obj (.far) [fill = 0]
                  818391c8    00000008                       : trgdrv.obj (.far) [fill = 0]
                  818391d0    000000f0                       : defs.obj (.fardata:_ftable)
                  818392c0    00000078                       : lowlev.obj (.fardata:_device)
                  81839338    00000064                       : vcop_memory.obj (.fardata:vcop_mem)
                  8183939c    00000050                       : lowlev.obj (.fardata:_stream)
                  818393ec    00000008                       : _lock.obj (.fardata)
                  818393f4    00000005                       : vcop_memory.obj (.fardata)
                  818393f9    00000003     --HOLE-- [fill = 0]
                  818393fc    00000004                       : defs.obj (.fardata)
                  81839400    00000004                       : errno.obj (.fardata)
                  81839404    00000004                       : fopen.obj (.fardata)
                  81839408    00000004                       : lowlev.obj (.fardata)
                  8183940c    00000004                       : memory.obj (.fardata)
                  81839410    00000004                       : rand.obj (.fardata)

.algo_fardata 
*          1    81839414    00000264     
                  81839414    00000068     libeveBinImageToList.eve.lib : bam_dma_custom_bin_to_list_node.obj (.fardata)
                  8183947c    00000068                                  : bam_dma_custom_select_list_elem_node.obj (.fardata)
                  818394e4    00000040                                  : bin_image_to_list_with_masking_graph.obj (.fardata:bamBinToListKernelExecFuncDB)
                  81839524    00000040                                  : bin_image_to_list_with_masking_graph.obj (.fardata:bamBinToListKernelHostDB)
                  81839564    00000030                                  : bin_image_to_list_select_list_elems_graph.obj (.fardata:bamSelectListElemKernelExecFuncDB)
                  81839594    00000030                                  : bin_image_to_list_select_list_elems_graph.obj (.fardata:bamSelectListElemKernelHostDB)
                  818395c4    0000000c                                  : bin_image_to_list_select_list_elems_graph.obj (.fardata)
                  818395d0    0000000c                                  : bin_image_to_list_with_masking_graph.obj (.fardata)
                  818395dc    0000001c     libevekernels.eve.lib : bam_bin_image_to_list_helper_funcs.obj (.fardata)
                  818395f8    0000001c                           : bam_binary_masking_helper_funcs.obj (.fardata)
                  81839614    0000001c                           : bam_select_list_elements_helper_funcs.obj (.fardata)
                  81839630    00000018                           : bam_bin_image_to_list_exec_funcs.obj (.fardata)
                  81839648    00000018                           : bam_binary_masking_exec_funcs.obj (.fardata)
                  81839660    00000018                           : bam_select_list_elements_exec_funcs.obj (.fardata)

.starterware_fardata 
*          1    81839678    000001f4     
                  81839678    000001f4     libevestarterware_eve.lib : cred.obj (.fardata:CRED_instVirtAddr)


SEGMENT ATTRIBUTES

    id tag      seg value
    -- ---      --- -----
     0 PHA_PAGE 3   1    
     1 PHA_PAGE 4   1    
     2 PHA_PAGE 5   1    
     3 PHA_PAGE 6   1    
     4 PHA_PAGE 7   1    
     5 PHA_PAGE 8   1    
     6 PHA_PAGE 9   1    
     7 PHA_PAGE 10  1    
     8 PHA_PAGE 11  1    
     9 PHA_PAGE 12  1    
    10 PHA_PAGE 13  1    
    11 PHA_PAGE 14  1    
    12 PHA_PAGE 15  1    
    13 PHA_PAGE 16  1    
    14 PHA_PAGE 17  1    
    15 PHA_PAGE 18  1    


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
8000f950   BAM_ARP32_computeWrapper
8000fc98   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000fc44   BAM_controlNode
8000f804   BAM_copyIntMemRec2ExtMem
8000fa78   BAM_copyNodeList
8000ece4   BAM_createGraph
8000fdac   BAM_dummyKernelFunc
8000f51c   BAM_fillKernelInfo
8000f62c   BAM_getGraphMemSize
8000fd30   BAM_getMemPacket
8000cbd8   BAM_initGraph
8000fb04   BAM_initGraphInstance
8000fce4   BAM_initKernelDB
8000e558   BAM_optimizeGraph
8000fd68   BAM_printf
8000f18c   BAM_process
8000f034   BAM_updateNodes
80011854   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_dmaControl
80011b1c   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_execute
80011b7c   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_getGraphMemReq
80010c24   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_graphCreate
80011af8   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_kernelControl
400265ac   BIN_IMAGE_TO_LIST_TI_IRES
40026580   BIN_IMAGE_TO_LIST_TI_VISION_FXNS
80011638   BIN_IMAGE_TO_LIST_TI_activate
80010d80   BIN_IMAGE_TO_LIST_TI_alloc
80011bd4   BIN_IMAGE_TO_LIST_TI_control
800116a8   BIN_IMAGE_TO_LIST_TI_deactivate
80011b94   BIN_IMAGE_TO_LIST_TI_free
800110f4   BIN_IMAGE_TO_LIST_TI_init
80011bd8   BIN_IMAGE_TO_LIST_TI_numAlloc
80010534   BIN_IMAGE_TO_LIST_TI_process
80010ff4   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_dmaControl
80011b3c   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_execute
80011bac   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_getGraphMemReq
80010a60   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_graphCreate
800115c4   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_kernelControl
80008020   C$$EXIT
80007bc0   C$$IO$$
81839678   CRED_instVirtAddr
8000b51c   DMA_funcs_hardwareRegSetup
8000c710   DMA_funcs_writeTransferParams
8000b870   DMA_resourceAllocator_allocateResources
8000cad4   DMA_resourceAllocator_initResources
8000cbbc   DMA_resourceAllocator_setEdma3RmHandle
8000cb24   DMA_utils_resetStateStruct
8000c218   DMA_utils_updateStateStruct
40020000   DMEM_SCRATCH
8000cbd4   EDMA3LLD_SUPPORT_requestResources
80009f64   EDMA_UTILS_autoIncrement1D_configure
8000c468   EDMA_UTILS_autoIncrement1D_init
8000cb44   EDMA_UTILS_autoIncrement1D_triggerInChannel
8000b9e8   EDMA_UTILS_autoIncrement1D_update
8000ca34   EDMA_UTILS_autoIncrement1D_waitInChannel
80009924   EDMA_UTILS_autoIncrement_configure
8000c058   EDMA_UTILS_autoIncrement_init
8000bb54   EDMA_UTILS_autoIncrement_triggerInChannel
8000ae2c   EDMA_UTILS_autoIncrement_update
8000c8b8   EDMA_UTILS_autoIncrement_waitInChannel
8000c95c   EDMA_UTILS_globalReset
8000c678   EDMA_UTILS_memcpy2D
8000cb9c   EDMA_UTILS_scattherGather_configure
8000b6e0   EDMA_UTILS_scattherGather_init
8000c5d8   EDMA_UTILS_scattherGather_updateNtrigger
8000cb64   EDMA_UTILS_scattherGather_wait
80011bdc   EVE_SCTM_CounterConfig
80011ca8   EVE_SCTM_CounterRead
80011c24   EVE_SCTM_CounterTimerEnable
80011cd8   EVE_SCTM_Enable
80011c50   EVE_SCTM_InpEvtSelect
80011cc0   EVE_SCTM_OverflowCheck
80011c7c   EVE_SCTM_SamplingSelect
80007140   HOSTclose
80005f00   HOSTlseek
8000643c   HOSTopen
800065fc   HOSTread
80006068   HOSTrename
80006f60   HOSTunlink
8000695c   HOSTwrite
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
8000cb00   TEST_PRINTF
8000cbc8   TI_CreateMemoryHandle
8000c860   TI_GetMemoryChunk
8000bcb8   TestApp_AllocateBufs
8000a808   TestApp_BinImageToListReference
00007e00   WMEM_SIZE
40026eb8   __CIOBUF_
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit
40025c00   __TI_STACK_END
00001c00   __TI_STACK_SIZE
40025c00   __TI_STATIC_BASE
01800000   __TI_SYSMEM_SIZE
00000001   __TI_args_main
00000001   __TI_exit
80007cf8   __arp32abi_abort_msg
80004594   __arp32abi_addd
80007f18   __arp32abi_addll
80005bf8   __arp32abi_cmpd
80007eb0   __arp32abi_cmplls
80007ed4   __arp32abi_cmpllu
8000668c   __arp32abi_cvtdf
80006af4   __arp32abi_cvtfd
80003c88   __arp32abi_divd
80001d34   __arp32abi_divf
80003e6c   __arp32abi_divull
80006cf4   __arp32abi_fixdi
80007374   __arp32abi_fltid
80007818   __arp32abi_fltif
80006b74   __arp32abi_fltulld
80006d70   __arp32abi_fltullf
80007aa8   __arp32abi_frcmpyf_div
80007704   __arp32abi_isinf
80007644   __arp32abi_llshl
80007da0   __arp32abi_llshru
80004204   __arp32abi_mpyd
80004ea4   __arp32abi_mpyll
80007e60   __arp32abi_negd
80007f90   __arp32abi_negll
80007d30   __arp32abi_remull
80007c44   __arp32abi_strasgi
80007e34   __arp32abi_subd
80007f68   __arp32abi_subll
ffffffff   __binit__
ffffffff   __c_args__
00000264   _algo_fardata_size
00000aac   _algo_neardata_size
00001e2c   _algo_text_size
80007bc8   _args_main
80007228   _auto_init
000004f0   _bam_fardata_size
000003d9   _bam_neardata_size
000031d8   _bam_text_size
80006304   _buff_read
800073dc   _c_int00
8000796c   _cleanup
818391c0   _cleanup_ptr
80006dec   _closefile
40026a88   _ctypes_
800076a4   _doflush
818391c4   _dtors_ptr
80000120   _dummy_handler
80004be8   _frcaddd
80003a88   _frcdivd
80005140   _frcmpyd
818393fc   _ft_end
818391d0   _ftable
40054000   _imemha_memory
40074000   _imemhb_memory
40050000   _imemla_memory
40070000   _imemlb_memory
818393ec   _lock
80007e88   _mpyl
40026e48   _my_stack
80008028   _nop
80003434   _printfi
80007308   _rd_ok
800078c4   _renormd
80000100   _reset_handler
00000300   _rts_fardata_size
00000270   _rts_neardata_size
00006f30   _rts_text_size
80001100   _scanfi
40024000   _stack
000001f4   _starterware_fardata_size
00000000   _starterware_neardata_size
00000110   _starterware_text_size
80030000   _sys_memory
8000802c   _system_pre_init
00004ba8   _text_size
81839114   _tmpnams
818393f0   _unlock
80000000   _vec_table
40040000   _wmem_memory
800067ac   _wrt_ok
80008020   abort
80006e68   atoi
8000f2c4   bam_getMemPacket
8000fb78   bam_mcheck
8000eeb0   bam_mem_alloc
8000f738   bam_mem_free
8000f8b0   bam_minit
8000f9e8   bam_releaseMemPacket
400266b4   bam_stat_num_packets
80008dbc   binImageToListTest
ffffffff   binit
800069e8   close
40026fd8   edmaBase
81839400   errno
80007918   exit
80007dd4   fclose
80006ee4   fflush
80007f50   fgets
80007c80   fopen
800071b4   fprintf
80005a34   fputc
80004a78   fputs
80004ffc   fread
80007f7c   free
8000683c   fseek
800068cc   ftell
81839630   gBAM_TI_binImageToListExecFunc
818395f0   gBAM_TI_binImageToListHelperFunc
818395dc   gBAM_TI_binImageToListKernel
81839648   gBAM_TI_binaryMaskingExecFunc
8183960c   gBAM_TI_binaryMaskingHelperFunc
818395f8   gBAM_TI_binaryMaskingKernel
81839414   gBAM_TI_dmaCustomBinToListNodeReadKernel
81839430   gBAM_TI_dmaCustomBinToListNodeReadKernelExecFunc
81839428   gBAM_TI_dmaCustomBinToListNodeReadKernelHelperFunc
81839448   gBAM_TI_dmaCustomBinToListNodeWriteKernel
81839464   gBAM_TI_dmaCustomBinToListNodeWriteKernelExecFunc
8183945c   gBAM_TI_dmaCustomBinToListNodeWriteKernelHelperFunc
8183947c   gBAM_TI_dmaCustomSelectListElemNodeReadKernel
81839498   gBAM_TI_dmaCustomSelectListElemNodeReadKernelExecFunc
81839490   gBAM_TI_dmaCustomSelectListElemNodeReadKernelHelperFunc
818394b0   gBAM_TI_dmaCustomSelectListElemNodeWriteKernel
818394cc   gBAM_TI_dmaCustomSelectListElemNodeWriteKernelExecFunc
818394c4   gBAM_TI_dmaCustomSelectListElemNodeWriteKernelHelperFunc
81839660   gBAM_TI_selecListElementsExecFunc
81839628   gBAM_TI_selecListElementsHelperFunc
81839614   gBAM_TI_selecListElementsKernel
81838cb0   gBAM_memPrintfArr
818395d0   gBinToList_BAM_TI_kernelDBdef
81830000   gConfig_binImageToList
40026da0   gDmaUtilsStateStruct
818395c4   gSelectListElem_BAM_TI_kernelDBdef
818366b8   gTest_TI_profileSctm
40026e2c   gTest_TI_profileTsc
818366d8   gsTokenMap_binImageToList
80007444   lseek
800075e0   ltoa
8000b0b4   main
80007a5c   malloc
818366c8   memObj_DMEM
80005cc4   mem_alloc
80006568   mem_free
80007ef8   memccpy
80005b1c   memcpy
800061bc   memset
800070c8   minit
80005948   open
80006c74   printf
8000ab24   printparams
8000b2e8   profiler_end
8000cbac   profiler_end_print
8000cb84   profiler_getSP
8000c7f4   profiler_getStackDepth
8000c2e4   profiler_init
8000caa4   profiler_initStack
8000ca6c   profiler_printStatus
8000c9a8   profiler_start
8000c90c   profiler_testCaseInfo
80007a0c   rand
800074ac   read
80007af0   readmsg
8000c140   readparamfile
80008014   remove
8000be14   report_printAppletInfo
80005628   setvbuf
80007e04   srand
80007d68   sscanf
80008030   statCollectorControl
8000c784   statCollectorInit
800015f8   strtod
80004038   strtol
80001998   strtold
80002098   strtoll
8000474c   strtoul
800031e8   strtoull
40026e08   test_module_cyles
80007b38   unlink
8000bf68   vcop_bin_image_to_list_cn
8000fdb0   vcop_bin_image_to_list_init
80010520   vcop_bin_image_to_list_param_count
800101e0   vcop_bin_image_to_list_vloops
8000c3a8   vcop_binary_masking_cn
80010164   vcop_binary_masking_init
80010528   vcop_binary_masking_param_count
800104d0   vcop_binary_masking_vloops
800077bc   vcop_minit
8000c520   vcop_select_list_elements_cn
8001008c   vcop_select_list_elements_init
800102f8   vcop_select_list_elements_param_block_update_init
8001052c   vcop_select_list_elements_param_block_update_param_count
80010500   vcop_select_list_elements_param_block_update_vloops
80010530   vcop_select_list_elements_param_count
80010340   vcop_select_list_elements_vloops
80007298   vfprintf
80007cbc   vsprintf
80007514   write
80007b80   writemsg


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000000   _starterware_neardata_size
00000001   __TI_args_main
00000001   __TI_exit
00000110   _starterware_text_size
000001f4   _starterware_fardata_size
00000264   _algo_fardata_size
00000270   _rts_neardata_size
00000300   _rts_fardata_size
000003d9   _bam_neardata_size
000004f0   _bam_fardata_size
00000aac   _algo_neardata_size
00001c00   __TI_STACK_SIZE
00001e2c   _algo_text_size
000031d8   _bam_text_size
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
00004ba8   _text_size
00006f30   _rts_text_size
00007e00   WMEM_SIZE
01800000   __TI_SYSMEM_SIZE
40020000   DMEM_SCRATCH
40024000   _stack
40025c00   __TI_STACK_END
40025c00   __TI_STATIC_BASE
40026580   BIN_IMAGE_TO_LIST_TI_VISION_FXNS
400265ac   BIN_IMAGE_TO_LIST_TI_IRES
400266b4   bam_stat_num_packets
40026a88   _ctypes_
40026da0   gDmaUtilsStateStruct
40026e08   test_module_cyles
40026e2c   gTest_TI_profileTsc
40026e48   _my_stack
40026eb8   __CIOBUF_
40026fd8   edmaBase
40040000   _wmem_memory
40050000   _imemla_memory
40054000   _imemha_memory
40070000   _imemlb_memory
40074000   _imemhb_memory
80000000   _vec_table
80000100   _reset_handler
80000120   _dummy_handler
80001100   _scanfi
800015f8   strtod
80001998   strtold
80001d34   __arp32abi_divf
80002098   strtoll
800031e8   strtoull
80003434   _printfi
80003a88   _frcdivd
80003c88   __arp32abi_divd
80003e6c   __arp32abi_divull
80004038   strtol
80004204   __arp32abi_mpyd
80004594   __arp32abi_addd
8000474c   strtoul
80004a78   fputs
80004be8   _frcaddd
80004ea4   __arp32abi_mpyll
80004ffc   fread
80005140   _frcmpyd
80005628   setvbuf
80005948   open
80005a34   fputc
80005b1c   memcpy
80005bf8   __arp32abi_cmpd
80005cc4   mem_alloc
80005f00   HOSTlseek
80006068   HOSTrename
800061bc   memset
80006304   _buff_read
8000643c   HOSTopen
80006568   mem_free
800065fc   HOSTread
8000668c   __arp32abi_cvtdf
800067ac   _wrt_ok
8000683c   fseek
800068cc   ftell
8000695c   HOSTwrite
800069e8   close
80006af4   __arp32abi_cvtfd
80006b74   __arp32abi_fltulld
80006c74   printf
80006cf4   __arp32abi_fixdi
80006d70   __arp32abi_fltullf
80006dec   _closefile
80006e68   atoi
80006ee4   fflush
80006f60   HOSTunlink
800070c8   minit
80007140   HOSTclose
800071b4   fprintf
80007228   _auto_init
80007298   vfprintf
80007308   _rd_ok
80007374   __arp32abi_fltid
800073dc   _c_int00
80007444   lseek
800074ac   read
80007514   write
800075e0   ltoa
80007644   __arp32abi_llshl
800076a4   _doflush
80007704   __arp32abi_isinf
800077bc   vcop_minit
80007818   __arp32abi_fltif
800078c4   _renormd
80007918   exit
8000796c   _cleanup
80007a0c   rand
80007a5c   malloc
80007aa8   __arp32abi_frcmpyf_div
80007af0   readmsg
80007b38   unlink
80007b80   writemsg
80007bc0   C$$IO$$
80007bc8   _args_main
80007c44   __arp32abi_strasgi
80007c80   fopen
80007cbc   vsprintf
80007cf8   __arp32abi_abort_msg
80007d30   __arp32abi_remull
80007d68   sscanf
80007da0   __arp32abi_llshru
80007dd4   fclose
80007e04   srand
80007e34   __arp32abi_subd
80007e60   __arp32abi_negd
80007e88   _mpyl
80007eb0   __arp32abi_cmplls
80007ed4   __arp32abi_cmpllu
80007ef8   memccpy
80007f18   __arp32abi_addll
80007f50   fgets
80007f68   __arp32abi_subll
80007f7c   free
80007f90   __arp32abi_negll
80008014   remove
80008020   C$$EXIT
80008020   abort
80008028   _nop
8000802c   _system_pre_init
80008030   statCollectorControl
80008dbc   binImageToListTest
80009924   EDMA_UTILS_autoIncrement_configure
80009f64   EDMA_UTILS_autoIncrement1D_configure
8000a808   TestApp_BinImageToListReference
8000ab24   printparams
8000ae2c   EDMA_UTILS_autoIncrement_update
8000b0b4   main
8000b2e8   profiler_end
8000b51c   DMA_funcs_hardwareRegSetup
8000b6e0   EDMA_UTILS_scattherGather_init
8000b870   DMA_resourceAllocator_allocateResources
8000b9e8   EDMA_UTILS_autoIncrement1D_update
8000bb54   EDMA_UTILS_autoIncrement_triggerInChannel
8000bcb8   TestApp_AllocateBufs
8000be14   report_printAppletInfo
8000bf68   vcop_bin_image_to_list_cn
8000c058   EDMA_UTILS_autoIncrement_init
8000c140   readparamfile
8000c218   DMA_utils_updateStateStruct
8000c2e4   profiler_init
8000c3a8   vcop_binary_masking_cn
8000c468   EDMA_UTILS_autoIncrement1D_init
8000c520   vcop_select_list_elements_cn
8000c5d8   EDMA_UTILS_scattherGather_updateNtrigger
8000c678   EDMA_UTILS_memcpy2D
8000c710   DMA_funcs_writeTransferParams
8000c784   statCollectorInit
8000c7f4   profiler_getStackDepth
8000c860   TI_GetMemoryChunk
8000c8b8   EDMA_UTILS_autoIncrement_waitInChannel
8000c90c   profiler_testCaseInfo
8000c95c   EDMA_UTILS_globalReset
8000c9a8   profiler_start
8000ca34   EDMA_UTILS_autoIncrement1D_waitInChannel
8000ca6c   profiler_printStatus
8000caa4   profiler_initStack
8000cad4   DMA_resourceAllocator_initResources
8000cb00   TEST_PRINTF
8000cb24   DMA_utils_resetStateStruct
8000cb44   EDMA_UTILS_autoIncrement1D_triggerInChannel
8000cb64   EDMA_UTILS_scattherGather_wait
8000cb84   profiler_getSP
8000cb9c   EDMA_UTILS_scattherGather_configure
8000cbac   profiler_end_print
8000cbbc   DMA_resourceAllocator_setEdma3RmHandle
8000cbc8   TI_CreateMemoryHandle
8000cbd4   EDMA3LLD_SUPPORT_requestResources
8000cbd8   BAM_initGraph
8000e558   BAM_optimizeGraph
8000ece4   BAM_createGraph
8000eeb0   bam_mem_alloc
8000f034   BAM_updateNodes
8000f18c   BAM_process
8000f2c4   bam_getMemPacket
8000f51c   BAM_fillKernelInfo
8000f62c   BAM_getGraphMemSize
8000f738   bam_mem_free
8000f804   BAM_copyIntMemRec2ExtMem
8000f8b0   bam_minit
8000f950   BAM_ARP32_computeWrapper
8000f9e8   bam_releaseMemPacket
8000fa78   BAM_copyNodeList
8000fb04   BAM_initGraphInstance
8000fb78   bam_mcheck
8000fc44   BAM_controlNode
8000fc98   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000fce4   BAM_initKernelDB
8000fd30   BAM_getMemPacket
8000fd68   BAM_printf
8000fdac   BAM_dummyKernelFunc
8000fdb0   vcop_bin_image_to_list_init
8001008c   vcop_select_list_elements_init
80010164   vcop_binary_masking_init
800101e0   vcop_bin_image_to_list_vloops
800102f8   vcop_select_list_elements_param_block_update_init
80010340   vcop_select_list_elements_vloops
800104d0   vcop_binary_masking_vloops
80010500   vcop_select_list_elements_param_block_update_vloops
80010520   vcop_bin_image_to_list_param_count
80010528   vcop_binary_masking_param_count
8001052c   vcop_select_list_elements_param_block_update_param_count
80010530   vcop_select_list_elements_param_count
80010534   BIN_IMAGE_TO_LIST_TI_process
80010a60   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_graphCreate
80010c24   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_graphCreate
80010d80   BIN_IMAGE_TO_LIST_TI_alloc
80010ff4   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_dmaControl
800110f4   BIN_IMAGE_TO_LIST_TI_init
800115c4   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_kernelControl
80011638   BIN_IMAGE_TO_LIST_TI_activate
800116a8   BIN_IMAGE_TO_LIST_TI_deactivate
80011854   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_dmaControl
80011af8   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_kernelControl
80011b1c   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_execute
80011b3c   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_execute
80011b7c   BIN_IMAGE_TO_LIST_SELECT_LIST_ELEMENTS_TI_getGraphMemReq
80011b94   BIN_IMAGE_TO_LIST_TI_free
80011bac   BIN_IMAGE_TO_LIST_WITH_MASKING_TI_getGraphMemReq
80011bd4   BIN_IMAGE_TO_LIST_TI_control
80011bd8   BIN_IMAGE_TO_LIST_TI_numAlloc
80011bdc   EVE_SCTM_CounterConfig
80011c24   EVE_SCTM_CounterTimerEnable
80011c50   EVE_SCTM_InpEvtSelect
80011c7c   EVE_SCTM_SamplingSelect
80011ca8   EVE_SCTM_CounterRead
80011cc0   EVE_SCTM_OverflowCheck
80011cd8   EVE_SCTM_Enable
80030000   _sys_memory
81830000   gConfig_binImageToList
818366b8   gTest_TI_profileSctm
818366c8   memObj_DMEM
818366d8   gsTokenMap_binImageToList
81838cb0   gBAM_memPrintfArr
81839114   _tmpnams
818391c0   _cleanup_ptr
818391c4   _dtors_ptr
818391d0   _ftable
818393ec   _lock
818393f0   _unlock
818393fc   _ft_end
81839400   errno
81839414   gBAM_TI_dmaCustomBinToListNodeReadKernel
81839428   gBAM_TI_dmaCustomBinToListNodeReadKernelHelperFunc
81839430   gBAM_TI_dmaCustomBinToListNodeReadKernelExecFunc
81839448   gBAM_TI_dmaCustomBinToListNodeWriteKernel
8183945c   gBAM_TI_dmaCustomBinToListNodeWriteKernelHelperFunc
81839464   gBAM_TI_dmaCustomBinToListNodeWriteKernelExecFunc
8183947c   gBAM_TI_dmaCustomSelectListElemNodeReadKernel
81839490   gBAM_TI_dmaCustomSelectListElemNodeReadKernelHelperFunc
81839498   gBAM_TI_dmaCustomSelectListElemNodeReadKernelExecFunc
818394b0   gBAM_TI_dmaCustomSelectListElemNodeWriteKernel
818394c4   gBAM_TI_dmaCustomSelectListElemNodeWriteKernelHelperFunc
818394cc   gBAM_TI_dmaCustomSelectListElemNodeWriteKernelExecFunc
818395c4   gSelectListElem_BAM_TI_kernelDBdef
818395d0   gBinToList_BAM_TI_kernelDBdef
818395dc   gBAM_TI_binImageToListKernel
818395f0   gBAM_TI_binImageToListHelperFunc
818395f8   gBAM_TI_binaryMaskingKernel
8183960c   gBAM_TI_binaryMaskingHelperFunc
81839614   gBAM_TI_selecListElementsKernel
81839628   gBAM_TI_selecListElementsHelperFunc
81839630   gBAM_TI_binImageToListExecFunc
81839648   gBAM_TI_binaryMaskingExecFunc
81839660   gBAM_TI_selecListElementsExecFunc
81839678   CRED_instVirtAddr
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit

[297 symbols]
