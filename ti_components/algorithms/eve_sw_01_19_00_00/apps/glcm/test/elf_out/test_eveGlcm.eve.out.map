******************************************************************************
                   ARP32 Linker PC v1.0.7                      
******************************************************************************
>> Linked Mon Jun 25 22:15:37 2018

OUTPUT FILE NAME:   <.\elf_out\test_eveGlcm.eve.out>
ENTRY POINT SYMBOL: "_reset_handler"  address: 80000100


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  VECMEM                80000000   00000100  00000028  000000d8  RWIX
  CMDMEM                80000100   00001000  00000028  00000fd8  RWIX
  EXTMEM                80001100   00020000  0000fb4c  000104b4  RWIX

PAGE 1:
  DATMEM                40020000   00008000  00007c8d  00000373  RWIX
  WMEM                  40040000   00007fe0  00007774  0000086c  RWIX
  IMEMLA                40050000   00004000  00004000  00000000  RWIX
  IMEMHA                40054000   00004000  00004000  00000000  RWIX
  IMEMLB                40070000   00004000  00004000  00000000  RWIX
  IMEMHB                40074000   00004000  00004000  00000000  RWIX
  L3MEM                 40300000   00100000  00000000  00100000  RWIX
  GEM0_L2_MEM           40800000   00008000  00000000  00008000  RWIX
  EXTDMEM               80030000   02000000  00803786  017fc87a  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.cinit     1    40020000    00000000     UNINITIALIZED

.init_array 
*          1    40020000    00000000     UNINITIALIZED

.intvecs   0    80000000    00000028     
                  80000000    00000028     boot_arp32.obj (.intvecs)

.inthandler 
*          0    80000100    00000028     
                  80000100    00000028     boot_arp32.obj (.inthandler)

.rts_text 
*          0    80001100    00006f48     
                  80001100    000004f8     rtsarp32_v200.lib : _scanfi.obj (.text:_scanfi)
                  800015f8    000003a0                       : strtod.obj (.text:strtod)
                  80001998    0000039c                       : strtold.obj (.text:strtold)
                  80001d34    000002d8                       : strtoll.obj (.text:strtoll)
                  8000200c    000002a0                       : _printfi.obj (.text:_setfield)
                  800022ac    00000268                       : _scanfi.obj (.text:_sproc_int)
                  80002514    00000260                       : _scanfi.obj (.text:_sset_arg)
                  80002774    0000025c                       : _printfi.obj (.text:_pproc_fge)
                  800029d0    0000025c                       : _printfi.obj (.text:ecvt)
                  80002c2c    00000258                       : _printfi.obj (.text:fcvt)
                  80002e84    0000024c                       : strtoull.obj (.text:strtoull)
                  800030d0    0000022c                       : _printfi.obj (.text:_printfi)
                  800032fc    00000220                       : _printfi.obj (.text:_pconv_e)
                  8000351c    0000021c                       : fwrite.obj (.text:fwrite)
                  80003738    00000208                       : _printfi.obj (.text:_getarg_diouxp)
                  80003940    00000200                       : frcdivd.obj (.text:_frcdivd)
                  80003b40    000001e4                       : divd.obj (.text:__arp32abi_divd)
                  80003d24    000001cc                       : imath64.obj (.text:__arp32abi_divull)
                  80003ef0    000001cc                       : strtol.obj (.text:strtol)
                  800040bc    000001c8                       : mpyd.obj (.text:__arp32abi_mpyd)
                  80004284    000001c8                       : fgets.obj (.text:_dofgets)
                  8000444c    000001b8                       : addd.obj (.text:__arp32abi_addd)
                  80004604    000001a0                       : strtoul.obj (.text:strtoul)
                  800047a4    0000018c                       : _printfi.obj (.text:_pproc_diouxp)
                  80004930    00000170                       : fputs.obj (.text:fputs)
                  80004aa0    00000168                       : vcop_memory.obj (.text:vcop_memalign)
                  80004c08    00000160                       : frcaddd.obj (.text:_frcaddd)
                  80004d68    0000015c                       : _scanfi.obj (.text:_sproc_float)
                  80004ec4    00000158                       : llmpy.obj (.text:__arp32abi_mpyll)
                  8000501c    00000144                       : fread.obj (.text:fread)
                  80005160    00000140                       : frcmpyd.obj (.text:_frcmpyd)
                  800052a0    00000140                       : _scanfi.obj (.text:_sget_conv)
                  800053e0    0000013c                       : _printfi.obj (.text:_pproc_fwp)
                  8000551c    0000012c                       : fopen.obj (.text:_openfile)
                  80005648    00000118                       : setvbuf.obj (.text:setvbuf)
                  80005760    00000114                       : _printfi.obj (.text:_pconv_g)
                  80005874    000000f4                       : _printfi.obj (.text:_pproc_str)
                  80005968    000000ec                       : lowlev.obj (.text:open)
                  80005a54    000000e8                       : fputc.obj (.text:fputc)
                  80005b3c    000000dc                       : memcpy.obj (.text:memcpy)
                  80005c18    000000cc                       : cmpd.obj (.text:__arp32abi_cmpd)
                  80005ce4    000000c4                       : memory.obj (.text:mem_alloc)
                  80005da8    000000bc                       : _printfi.obj (.text:_ltostr)
                  80005e64    000000bc                       : _scanfi.obj (.text:_sproc_str)
                  80005f20    000000b4                       : trgdrv.obj (.text:HOSTlseek)
                  80005fd4    000000b4                       : _scanfi.obj (.text:_sproc_lb)
                  80006088    000000ac                       : trgdrv.obj (.text:HOSTrename)
                  80006134    000000a8                       : fopen.obj (.text:_search_fp)
                  800061dc    000000a8                       : memset.obj (.text:memset)
                  80006284    000000a0                       : lowlev.obj (.text:getdevice)
                  80006324    0000009c                       : _bufread.obj (.text:_buff_read)
                  800063c0    0000009c                       : _printfi.obj (.text:_mcpy)
                  8000645c    00000098                       : trgdrv.obj (.text:HOSTopen)
                  800064f4    00000098                       : vcop_memory.obj (.text:vcop_free)
                  8000658c    00000094                       : sscanf.obj (.text:_chkmbc)
                  80006620    00000094                       : memory.obj (.text:mem_free)
                  800066b4    00000090                       : trgdrv.obj (.text:HOSTread)
                  80006744    00000090                       : cvtdf.obj (.text:__arp32abi_cvtdf)
                  800067d4    00000090                       : _printfi.obj (.text:_pproc_fflags)
                  80006864    00000090                       : _io_perm.obj (.text:_wrt_ok)
                  800068f4    00000090                       : fseek.obj (.text:fseek)
                  80006984    00000090                       : ftell.obj (.text:ftell)
                  80006a14    0000008c                       : trgdrv.obj (.text:HOSTwrite)
                  80006aa0    00000088                       : lowlev.obj (.text:close)
                  80006b28    00000084                       : _printfi.obj (.text:_ecpy)
                  80006bac    00000080                       : cvtfd.obj (.text:__arp32abi_cvtfd)
                  80006c2c    00000080                       : fltulld.obj (.text:__arp32abi_fltulld)
                  80006cac    00000080                       : _scanfi.obj (.text:_sget_scanset)
                  80006d2c    00000080                       : printf.obj (.text:printf)
                  80006dac    0000007c                       : fixdi.obj (.text:__arp32abi_fixdi)
                  80006e28    0000007c                       : fclose.obj (.text:_closefile)
                  80006ea4    0000007c                       : atoi.obj (.text:atoi)
                  80006f20    0000007c                       : fflush.obj (.text:fflush)
                  80006f9c    00000078                       : trgdrv.obj (.text:HOSTunlink)
                  80007014    00000078                       : _printfi.obj (.text:_div)
                  8000708c    00000078                       : _printfi.obj (.text:_pconv_f)
                  80007104    00000078                       : memory.obj (.text:minit)
                  8000717c    00000074                       : trgdrv.obj (.text:HOSTclose)
                  800071f0    00000074                       : fprintf.obj (.text:fprintf)
                  80007264    00000070                       : autoinit.obj (.text:_auto_init)
                  800072d4    00000070                       : vfprintf.obj (.text:vfprintf)
                  80007344    0000006c                       : _io_perm.obj (.text:_rd_ok)
                  800073b0    00000068                       : fltid.obj (.text:__arp32abi_fltid)
                  80007418    00000068                       : boot.obj (.text:_c_int00)
                  80007480    00000068                       : lowlev.obj (.text:lseek)
                  800074e8    00000068                       : lowlev.obj (.text:read)
                  80007550    00000068                       : lowlev.obj (.text:write)
                  800075b8    00000064                       : imath64.obj (.text:_subcull)
                  8000761c    00000064                       : ltoa.obj (.text:ltoa)
                  80007680    00000060                       : llshift.obj (.text:__arp32abi_llshl)
                  800076e0    00000060                       : fflush.obj (.text:_doflush)
                  80007740    0000005c                       : isinf.obj (.text:__arp32abi_isinf)
                  8000779c    0000005c                       : lowlev.obj (.text:tabinit)
                  800077f8    0000005c                       : vcop_memory.obj (.text:vcop_minit)
                  80007854    00000054                       : _printfi.obj (.text:_fcpy)
                  800078a8    00000054                       : renormd.obj (.text:_renormd)
                  800078fc    00000054                       : exit.obj (.text:exit)
                  80007950    00000050                       : fopen.obj (.text:_cleanup)
                  800079a0    00000050                       : lowlev.obj (.text:finddevice)
                  800079f0    00000050                       : rand.obj (.text:rand)
                  80007a40    0000004c                       : memory.obj (.text:malloc)
                  80007a8c    00000048                       : trgmsg.obj (.text:readmsg)
                  80007ad4    00000048                       : lowlev.obj (.text:unlink)
                  80007b1c    00000048                       : trgmsg.obj (.text:writemsg)
                  80007b64    00000040                       : args_main.obj (.text:_args_main)
                  80007ba4    00000040                       : sprintf.obj (.text:sprintf)
                  80007be4    0000003c                       : _printfi.obj (.text:__arp32abi_isnan)
                  80007c20    0000003c                       : strasgi_c.obj (.text:__arp32abi_strasgi)
                  80007c5c    0000003c                       : fopen.obj (.text:fopen)
                  80007c98    0000003c                       : vsprintf.obj (.text:vsprintf)
                  80007cd4    00000038                       : assert.obj (.text:__arp32abi_abort_msg)
                  80007d0c    00000038                       : imath64.obj (.text:__arp32abi_remull)
                  80007d44    00000038                       : sscanf.obj (.text:sscanf)
                  80007d7c    00000034                       : llshift.obj (.text:__arp32abi_llshru)
                  80007db0    00000030                       : fclose.obj (.text:fclose)
                  80007de0    00000030                       : rand.obj (.text:srand)
                  80007e10    0000002c                       : subd.obj (.text:__arp32abi_subd)
                  80007e3c    00000028                       : negd.obj (.text:__arp32abi_negd)
                  80007e64    00000028                       : mult.obj (.text:_mpyl)
                  80007e8c    00000024                       : llcmp.obj (.text:__arp32abi_cmplls)
                  80007eb0    00000024                       : llcmp.obj (.text:__arp32abi_cmpllu)
                  80007ed4    00000020                       : memccpy.obj (.text:memccpy)
                  80007ef4    0000001c                       : lladdsub.obj (.text:__arp32abi_addll)
                  80007f10    0000001c                       : sprintf.obj (.text:_outs)
                  80007f2c    0000001c                       : vsprintf.obj (.text:_outs)
                  80007f48    00000018                       : fgets.obj (.text:fgets)
                  80007f60    00000014                       : lladdsub.obj (.text:__arp32abi_subll)
                  80007f74    00000014                       : memory.obj (.text:free)
                  80007f88    00000010                       : lladdsub.obj (.text:__arp32abi_negll)
                  80007f98    00000010                       : sscanf.obj (.text:_inpchar)
                  80007fa8    00000010                       : sprintf.obj (.text:_outc)
                  80007fb8    00000010                       : vsprintf.obj (.text:_outc)
                  80007fc8    00000010                       : vcop_memory.obj (.text:vcop_malloc)
                  80007fd8    0000000c                       : fprintf.obj (.text:_outc)
                  80007fe4    0000000c                       : printf.obj (.text:_outc)
                  80007ff0    0000000c                       : vfprintf.obj (.text:_outc)
                  80007ffc    0000000c                       : fprintf.obj (.text:_outs)
                  80008008    0000000c                       : printf.obj (.text:_outs)
                  80008014    0000000c                       : vfprintf.obj (.text:_outs)
                  80008020    0000000c                       : sscanf.obj (.text:_uninpchar)
                  8000802c    0000000c                       : remove.obj (.text:remove)
                  80008038    00000008                       : exit.obj (.text:abort)
                  80008040    00000004                       : _lock.obj (.text:_nop)
                  80008044    00000004                       : pre_init.obj (.text:_system_pre_init)

.text      0    80008048    00003ff0     
                  80008048    00000d8c     ti_stats_collector.obj (.text:statCollectorControl)
                  80008dd4    00000b3c     glcm_tb.obj (.text:glcmTest)
                  80009910    00000640     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_configure)
                  80009f50    00000424     glcm_tb.obj (.text:main)
                  8000a374    000003e8     configparser.obj (.text:ParseContent)
                  8000a75c    00000308     configparser.obj (.text:printparams)
                  8000aa64    00000288     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_update)
                  8000acec    00000234     eve_profile.obj (.text:profiler_end)
                  8000af20    000001c4     dmautils.lib : dma_funcs.obj (.text:DMA_funcs_hardwareRegSetup)
                  8000b0e4    00000194     libevenatckernels.eve.lib : vcop_glcm_cn.obj (.text:vcop_glcm_cn)
                  8000b278    00000178     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_allocateResources)
                  8000b3f0    00000164                  : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerInChannel)
                  8000b554    00000154     report_utils.obj (.text:report_printAppletInfo)
                  8000b6a8    00000104     glcm_ref_cn.obj (.text:glcm_ref_cn)
                  8000b7ac    000000e8     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_init)
                  8000b894    000000d8     configparser.obj (.text:readparamfile)
                  8000b96c    000000cc     dmautils.lib : edma_utils_state.obj (.text:DMA_utils_updateStateStruct)
                  8000ba38    000000c4     eve_profile.obj (.text:profiler_init)
                  8000bafc    00000098     dmautils.lib : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D)
                  8000bb94    00000074                  : dma_funcs.obj (.text:DMA_funcs_writeTransferParams)
                  8000bc08    00000070     ti_stats_collector.obj (.text:statCollectorInit)
                  8000bc78    0000006c     eve_profile.obj (.text:profiler_getStackDepth)
                  8000bce4    00000064     libevenatckernels.eve.lib : vcop_intensity_scaling_cn.obj (.text:vcop_intensity_scaling_cn)
                  8000bd48    00000058     ti_mem_manager.obj (.text:TI_GetMemoryChunk)
                  8000bda0    00000054     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitInChannel)
                  8000bdf4    00000050     eve_profile.obj (.text:profiler_testCaseInfo)
                  8000be44    0000004c     dmautils.lib : edma_utils.obj (.text:EDMA_UTILS_globalReset)
                  8000be90    00000048     eve_profile.obj (.text:profiler_start)
                  8000bed8    00000044     dmautils.lib : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D_init)
                  8000bf1c    00000038     eve_profile.obj (.text:profiler_printStatus)
                  8000bf54    00000030     eve_profile.obj (.text:profiler_initStack)
                  8000bf84    0000002c     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_initResources)
                  8000bfb0    00000024     eve_profile.obj (.text:TEST_PRINTF)
                  8000bfd4    00000020     dmautils.lib : edma_utils_state.obj (.text:DMA_utils_resetStateStruct)
                  8000bff4    00000018     eve_profile.obj (.text:profiler_getSP)
                  8000c00c    00000010     eve_profile.obj (.text:profiler_end_print)
                  8000c01c    0000000c     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_setEdma3RmHandle)
                  8000c028    0000000c     ti_mem_manager.obj (.text:TI_CreateMemoryHandle)
                  8000c034    00000004     dmautils.lib : edma3lld_support.obj (.text:EDMA3LLD_SUPPORT_requestResources)

.bam_text 
*          0    8000c038    0000318c     
                  8000c038    00000820     algframework.lib : bam_construct_int.obj (.text:BAM_initGraph)
                  8000c858    00000770                      : bam_construct_int.obj (.text:BAM_autoAllocMemRec)
                  8000cfc8    00000574                      : bam_execute.obj (.text:BAM_execute)
                  8000d53c    0000047c                      : bam_construct_int.obj (.text:BAM_finaliseGraph)
                  8000d9b8    00000414                      : bam_construct_int.obj (.text:BAM_optimizeGraph)
                  8000ddcc    00000378                      : bam_construct_int.obj (.text:BAM_getMemRec)
                  8000e144    000001cc                      : bam_construct.obj (.text:BAM_createGraph)
                  8000e310    00000184                      : bam_memory.obj (.text:bam_mem_alloc)
                  8000e494    00000158                      : bam_construct_int.obj (.text:BAM_updateNodes)
                  8000e5ec    00000138                      : bam_execute.obj (.text:BAM_process)
                  8000e724    00000138                      : bam_memory.obj (.text:bam_getMemPacket)
                  8000e85c    00000120                      : bam_construct_int.obj (.text:BAM_setNodeMemRec)
                  8000e97c    00000110                      : bam_construct_int.obj (.text:BAM_fillKernelInfo)
                  8000ea8c    0000010c                      : bam_construct_int.obj (.text:BAM_getGraphMemSize)
                  8000eb98    000000cc                      : bam_memory.obj (.text:bam_mem_free)
                  8000ec64    000000ac                      : bam_construct_int.obj (.text:BAM_copyIntMemRec2ExtMem)
                  8000ed10    000000a0                      : bam_memory.obj (.text:bam_minit)
                  8000edb0    00000098                      : bam_execute.obj (.text:BAM_ARP32_computeWrapper)
                  8000ee48    00000090                      : bam_memory.obj (.text:bam_releaseMemPacket)
                  8000eed8    0000008c                      : bam_construct_int.obj (.text:BAM_copyNodeList)
                  8000ef64    00000074                      : bam_execute.obj (.text:BAM_initGraphInstance)
                  8000efd8    00000068                      : bam_memory.obj (.text:bam_mcheck)
                  8000f040    00000064                      : bam_execute.obj (.text:BAM_DSP_computeWrapper)
                  8000f0a4    00000054                      : bam_execute.obj (.text:BAM_controlNode)
                  8000f0f8    0000004c                      : bam_construct.obj (.text:BAM_initKernelDB)
                  8000f144    00000038                      : bam_construct_int.obj (.text:BAM_getMemPacket)
                  8000f17c    0000002c                      : bam_utils.obj (.text:BAM_printf)
                  8000f1a8    00000018                      : bam_execute.obj (.text:VCOP_SET_MEM_VIEW)
                  8000f1c0    00000004                      : bam_execute.obj (.text:BAM_dummyKernelFunc)

.algo_text 
*          0    8000f1c4    00001978     
                  8000f1c4    00000324     libevekernels.eve.lib : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_8c_init)
                  8000f4e8    00000294                           : bam_glcm_exec_funcs.obj (.text:Bam_Glcm_initFrame)
                  8000f77c    00000230                           : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_1c_init)
                  8000f9ac    000001a0                           : vcop_glcm_kernel.obj (.text:vcop_accumulate_8c_glcm_init)
                  8000fb4c    00000130                           : bam_glcm_helper_funcs.obj (.text:BAM_Glcm_getMemRecFunc)
                  8000fc7c    000000e8                           : vcop_intensity_scaling.obj (.text:prepare_lut)
                  8000fd64    000000a4                           : vcop_glcm_kernel.obj (.text:vcop_accumulate_8c_glcm)
                  8000fe08    00000094                           : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_8c_vloops)
                  8000fe9c    0000006c                           : vcop_glcm_kernel.obj (.text:vcop_initialize_glcm)
                  8000ff08    00000068                           : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_1c_vloops)
                  8000ff70    00000068                           : vcop_intensity_scaling_kernel.obj (.text:vcop_intensity_scaling_init)
                  8000ffd8    00000054                           : bam_intensity_scaling_exec_funcs.obj (.text:Bam_Intensity_scaling_initFrame)
                  8001002c    00000048                           : bam_intensity_scaling_helper_funcs.obj (.text:BAM_Intensity_scaling_getMemRecFunc)
                  80010074    00000024                           : vcop_intensity_scaling_kernel.obj (.text:vcop_intensity_scaling_vloops)
                  80010098    00000008                           : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_1c_param_count)
                  800100a0    00000008                           : vcop_glcm_kernel.obj (.text:vcop_glcm_compute_8c_param_count)
                  800100a8    00000004                           : vcop_intensity_scaling_kernel.obj (.text:vcop_intensity_scaling_param_count)
                  800100ac    000001c8     libeveGlcm.eve.lib : glcm_alg.obj (.text:GLCM_TI_process)
                  80010274    0000015c                        : glcm_alg.obj (.text:GLCM_TI_init)
                  800103d0    00000154                        : glcm_graph.obj (.text:GLCM_TI_initKernelsArgs)
                  80010524    00000148                        : glcm_graph.obj (.text:GLCM_TI_graphCreate)
                  8001066c    000000bc                        : glcm_alg.obj (.text:GLCM_TI_alloc)
                  80010728    000000b0                        : glcm_bam_dma_node.obj (.text:BAM_DMA_IN_CUSTOM_GLCM_getMemRecFunc)
                  800107d8    00000088                        : glcm_bam_dma_node.obj (.text:BAM_DMA_IN_CUSTOM_GLCM_setMemRecFunc)
                  80010860    0000005c                        : glcm_bam_dma_node.obj (.text:BAM_DMA_IN_CUSTOM_GLCM_updateDDRptr)
                  800108bc    0000005c                        : glcm_alg.obj (.text:GLCM_TI_activate)
                  80010918    0000005c                        : glcm_alg.obj (.text:GLCM_TI_deactivate)
                  80010974    00000054                        : glcm_graph.obj (.text:GLCM_TI_dmaControl)
                  800109c8    0000004c                        : glcm_bam_dma_node.obj (.text:BAM_DMA_IN_CUSTOM_GLCM_frameInitChannel)
                  80010a14    00000038                        : glcm_bam_dma_node.obj (.text:BAM_DMA_OUT_GLCM_DUMMY_getMemRecFunc)
                  80010a4c    00000038                        : glcm_bam_dma_node.obj (.text:BAM_DMA_OUT_GLCM_DUMMY_trigger)
                  80010a84    00000034                        : glcm_bam_dma_node.obj (.text:BAM_DMA_OUT_GLCM_DUMMY_updateDDRptr)
                  80010ab8    00000024                        : glcm_bam_dma_node.obj (.text:BAM_DMA_OUT_GLCM_DUMMY_setMemRecFunc)
                  80010adc    00000020                        : glcm_graph.obj (.text:GLCM_TI_execute)
                  80010afc    0000001c                        : glcm_graph.obj (.text:GLCM_TI_getGraphMemReq)
                  80010b18    00000018                        : glcm_alg.obj (.text:GLCM_TI_free)
                  80010b30    00000004                        : glcm_bam_dma_node.obj (.text:BAM_DMA_OUT_GLCM_DUMMY_wait)
                  80010b34    00000004                        : glcm_alg.obj (.text:GLCM_TI_control)
                  80010b38    00000004                        : glcm_alg.obj (.text:GLCM_TI_numAlloc)

.starterware_text 
*          0    80010b3c    00000110     
                  80010b3c    00000048     libevestarterware_eve.lib : sctm.obj (.text:EVE_SCTM_CounterConfig)
                  80010b84    0000002c                               : sctm.obj (.text:EVE_SCTM_CounterTimerEnable)
                  80010bb0    0000002c                               : sctm.obj (.text:EVE_SCTM_InpEvtSelect)
                  80010bdc    0000002c                               : sctm.obj (.text:EVE_SCTM_SamplingSelect)
                  80010c08    00000018                               : sctm.obj (.text:EVE_SCTM_CounterRead)
                  80010c20    00000018                               : sctm.obj (.text:EVE_SCTM_OverflowCheck)
                  80010c38    00000014                               : sctm.obj (.text:EVE_SCTM_Enable)

.starterware_neardata 
*          1    40020000    00000000     UNINITIALIZED

.dmemSect 
*          1    40020000    00004000     UNINITIALIZED
                  40020000    00004000     glcm_tb.obj (.dmemSect)

.stack     1    40024000    00003000     UNINITIALIZED
                  40024000    00000004     rtsarp32_v200.lib : boot.obj (.stack)
                  40024004    00002ffc     --HOLE--

.algo_neardata 
*          1    40027000    00000568     
                  40027000    0000000c     libevekernels.eve.lib : vcop_glcm_kernel.obj (.rodata)
                  4002700c    00000004                           : bam_glcm_exec_funcs.obj (.rodata)
                  40027010    00000008     libeveGlcm.eve.lib : glcm_alg.obj (.rodata)
                  40027018    000002b9                        : glcm_bam_dma_node.obj (.const:.string)
                  400272d1    0000013d                        : glcm_graph.obj (.const:.string)
                  4002740e    000000b2                        : glcm_alg.obj (.const:.string)
                  400274c0    00000054                        : glcm_alg.obj (.const)
                  40027514    0000003c                        : glcm_graph.obj (.const:$P$T0$1)
                  40027550    00000010                        : glcm_graph.obj (.const:$P$T1$2)
                  40027560    00000008                        : glcm_graph.obj (.const:.string:GLCM_TI_gMaxBlkSize)

.rts_neardata 
*          1    40027568    00000268     
                  40027568    00000003     rtsarp32_v200.lib : assert.obj (.const:.string)
                  4002756b    00000001     --HOLE-- [fill = 0]
                  4002756c    00000101                       : ctype.obj (.const:.string:_ctypes_)
                  4002766d    00000001     --HOLE-- [fill = 0]
                  4002766e    00000007                       : _scanfi.obj (.const:.string:flit$1)
                  40027675    00000001     --HOLE-- [fill = 0]
                  40027676    00000006                       : _scanfi.obj (.const:.string:barr$2)
                  4002767c    00000023                       : _printfi.obj (.const:.string)
                  4002769f    00000001     --HOLE-- [fill = 0]
                  400276a0    00000050                       : strtod.obj (.const:digits)
                  400276f0    00000048                       : strtod.obj (.const:powerof10)
                  40027738    00000050                       : strtold.obj (.const:digits)
                  40027788    00000048                       : strtold.obj (.const:powerof10)

.bam_neardata 
*          1    400277d0    000001e1     
                  400277d0    00000014     algframework.lib : bam_memory.obj (.bss) [fill = 0]
                  400277e4    00000005                      : bam_memory.obj (.data)
                  400277e9    00000003     --HOLE-- [fill = 0]
                  400277ec    00000008                      : bam_construct_int.obj (.rodata)
                  400277f4    00000004                      : bam_execute.obj (.rodata)
                  400277f8    00000004                      : bam_memory.obj (.rodata)
                  400277fc    00000121                      : bam_construct_int.obj (.const:.string)
                  4002791d    00000090                      : bam_execute.obj (.const:.string)
                  400279ad    00000001     --HOLE-- [fill = 0]
                  400279ae    00000003                      : bam_construct_int.obj (.const:.string:$P$T0$1)

.bss       1    400279b4    00000150     UNINITIALIZED
                  400279b4    000000a8     dmautils.lib : dma_resource_allocator.obj (.bss)
                  40027a5c    00000060                  : edma_utils_state.obj (.bss)
                  40027abc    00000048     eve_profile.obj (.bss)

.data      1    40027b04    00000028     
                  40027b04    00000020     boot_arp32.obj (.data)
                  40027b24    00000004     dmautils.lib : dma_resource_allocator.obj (.data)
                  40027b28    00000004     eve_profile.obj (.data)

.rodata    1    40027b2c    00000040     
                  40027b2c    00000028     ti_stats_collector.obj (.rodata)
                  40027b54    00000008     dmautils.lib : edma_utils_autoincrement.obj (.rodata)
                  40027b5c    00000008     eve_profile.obj (.rodata)
                  40027b64    00000004     dmautils.lib : edma_utils_memcpy.obj (.rodata)
                  40027b68    00000004     glcm_tb.obj (.rodata)

.cio       1    40027b6c    00000120     UNINITIALIZED
                  40027b6c    00000120     rtsarp32_v200.lib : trgmsg.obj (.cio)

.edma_utils_lib_fardata 
*          1    40027c8c    00000004     
                  40027c8c    00000004     dmautils.lib : edma_utils.obj (.const:edmaBase)

.wmem      1    40040000    00007000     UNINITIALIZED
                  40040000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.wmem)
                  40040008    00006ff8     --HOLE--

.vcop_parameter_block 
*          1    40047000    00000774     UNINITIALIZED
                  40047000    00000774     libevekernels.eve.lib : vcop_glcm_kernel.obj (.vcop_parameter_block)

.imemla    1    40050000    00004000     UNINITIALIZED
                  40050000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemla)
                  40050008    00003ff8     --HOLE--

.imemha    1    40054000    00004000     UNINITIALIZED
                  40054000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemha)
                  40054008    00003ff8     --HOLE--

.imemlb    1    40070000    00004000     UNINITIALIZED
                  40070000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemlb)
                  40070008    00003ff8     --HOLE--

.imemhb    1    40074000    00004000     UNINITIALIZED
                  40074000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemhb)
                  40074008    00003ff8     --HOLE--

.sysmem    1    80030000    00800000     UNINITIALIZED
                  80030000    00000008     rtsarp32_v200.lib : memory.obj (.sysmem)
                  80030008    007ffff8     --HOLE--

.fardata   1    80830000    00001800     
                  80830000    00001800     glcm_config.obj (.fardata:gsTokenMap_glcm)

.const     1    80831800    00000e62     
                  80831800    000003d2     eve_profile.obj (.const:.string)
                  80831bd2    000003b7     glcm_tb.obj (.const:.string)
                  80831f89    00000256     configparser.obj (.const:.string)
                  808321df    00000148     glcm_config.obj (.const:.string)
                  80832327    00000001     --HOLE-- [fill = 0]
                  80832328    00000128     ti_stats_collector.obj (.const:.switchtab)
                  80832450    000000fd     report_utils.obj (.const:.string)
                  8083254d    00000069     glcm_ref_cn.obj (.const:.string)
                  808325b6    00000056     ti_mem_manager.obj (.const:.string)
                  8083260c    00000043     ti_stats_collector.obj (.const:.string)
                  8083264f    00000001     --HOLE-- [fill = 0]
                  80832650    00000009     glcm_tb.obj (.const:.string:__FUNCTION__$1)
                  80832659    00000001     --HOLE-- [fill = 0]
                  8083265a    00000008     configparser.obj (.const:.string:$P$T0$1)

.far       1    80832664    000005c4     UNINITIALIZED
                  80832664    0000056c     glcm_config.obj (.far)
                  80832bd0    00000028     ti_stats_collector.obj (.far)
                  80832bf8    00000020     eve_profile.obj (.far)
                  80832c18    00000010     glcm_tb.obj (.far)

.bam_fardata 
*          1    80832c28    000004f0     
                  80832c28    00000078     algframework.lib : bam_memory.obj (.far) [fill = 0]
                  80832ca0    0000000c                      : bam_execute.obj (.far) [fill = 0]
                  80832cac    00000008                      : bam_construct.obj (.far) [fill = 0]
                  80832cb4    00000400                      : bam_utils.obj (.fardata:gBAM_memPrintfArr)
                  808330b4    00000064                      : bam_memory.obj (.fardata:vcop_mem)

.rts_fardata 
*          1    80833118    00000300     
                  80833118    000000a0     rtsarp32_v200.lib : defs.obj (.far) [fill = 0]
                  808331b8    0000000c                       : memory.obj (.far) [fill = 0]
                  808331c4    00000008                       : boot.obj (.far) [fill = 0]
                  808331cc    00000008                       : trgdrv.obj (.far) [fill = 0]
                  808331d4    000000f0                       : defs.obj (.fardata:_ftable)
                  808332c4    00000078                       : lowlev.obj (.fardata:_device)
                  8083333c    00000064                       : vcop_memory.obj (.fardata:vcop_mem)
                  808333a0    00000050                       : lowlev.obj (.fardata:_stream)
                  808333f0    00000008                       : _lock.obj (.fardata)
                  808333f8    00000005                       : vcop_memory.obj (.fardata)
                  808333fd    00000003     --HOLE-- [fill = 0]
                  80833400    00000004                       : defs.obj (.fardata)
                  80833404    00000004                       : errno.obj (.fardata)
                  80833408    00000004                       : fopen.obj (.fardata)
                  8083340c    00000004                       : lowlev.obj (.fardata)
                  80833410    00000004                       : memory.obj (.fardata)
                  80833414    00000004                       : rand.obj (.fardata)

.starterware_fardata 
*          1    80833418    000001f4     
                  80833418    000001f4     libevestarterware_eve.lib : cred.obj (.fardata:CRED_instVirtAddr)

.algo_fardata 
*          1    8083360c    0000017c     
                  8083360c    00000010     libevekernels.eve.lib : vcop_glcm_kernel.obj (.far) [fill = 0]
                  8083361c    0000001c                           : bam_glcm_helper_funcs.obj (.fardata)
                  80833638    0000001c                           : bam_intensity_scaling_helper_funcs.obj (.fardata)
                  80833654    00000018                           : bam_glcm_exec_funcs.obj (.fardata)
                  8083366c    00000018                           : bam_intensity_scaling_exec_funcs.obj (.fardata)
                  80833684    00000008                           : bam_glcm_helper_funcs.obj (.fardata:GLCM_TI_maxGLCMLevels_1c)
                  8083368c    00000008                           : bam_glcm_helper_funcs.obj (.fardata:GLCM_TI_maxGLCMLevels_8c)
                  80833694    00000068     libeveGlcm.eve.lib : glcm_bam_dma_node.obj (.fardata)
                  808336fc    00000040                        : glcm_graph.obj (.fardata:bamGlcmKernelExecFuncDB)
                  8083373c    00000040                        : glcm_graph.obj (.fardata:bamGlcmKernelHostDB)
                  8083377c    0000000c                        : glcm_graph.obj (.fardata)


SEGMENT ATTRIBUTES

    id tag      seg value
    -- ---      --- -----
     0 PHA_PAGE 3   1    
     1 PHA_PAGE 4   1    
     2 PHA_PAGE 5   1    
     3 PHA_PAGE 6   1    
     4 PHA_PAGE 7   1    
     5 PHA_PAGE 8   1    
     6 PHA_PAGE 9   1    
     7 PHA_PAGE 10  1    
     8 PHA_PAGE 11  1    
     9 PHA_PAGE 12  1    
    10 PHA_PAGE 13  1    
    11 PHA_PAGE 14  1    
    12 PHA_PAGE 15  1    
    13 PHA_PAGE 16  1    
    14 PHA_PAGE 17  1    
    15 PHA_PAGE 18  1    


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
8000edb0   BAM_ARP32_computeWrapper
8000f0a4   BAM_controlNode
8000ec64   BAM_copyIntMemRec2ExtMem
8000eed8   BAM_copyNodeList
8000e144   BAM_createGraph
8000f1c0   BAM_dummyKernelFunc
8000e97c   BAM_fillKernelInfo
8000ea8c   BAM_getGraphMemSize
8000f144   BAM_getMemPacket
8000c038   BAM_initGraph
8000ef64   BAM_initGraphInstance
8000f0f8   BAM_initKernelDB
8000d9b8   BAM_optimizeGraph
8000f17c   BAM_printf
8000e5ec   BAM_process
8000e494   BAM_updateNodes
80008038   C$$EXIT
80007b5c   C$$IO$$
80833418   CRED_instVirtAddr
8000af20   DMA_funcs_hardwareRegSetup
8000bb94   DMA_funcs_writeTransferParams
8000b278   DMA_resourceAllocator_allocateResources
8000bf84   DMA_resourceAllocator_initResources
8000c01c   DMA_resourceAllocator_setEdma3RmHandle
8000bfd4   DMA_utils_resetStateStruct
8000b96c   DMA_utils_updateStateStruct
40020000   DMEM_SCRATCH
8000c034   EDMA3LLD_SUPPORT_requestResources
80009910   EDMA_UTILS_autoIncrement_configure
8000b7ac   EDMA_UTILS_autoIncrement_init
8000b3f0   EDMA_UTILS_autoIncrement_triggerInChannel
8000aa64   EDMA_UTILS_autoIncrement_update
8000bda0   EDMA_UTILS_autoIncrement_waitInChannel
8000be44   EDMA_UTILS_globalReset
8000bafc   EDMA_UTILS_memcpy2D
80010b3c   EVE_SCTM_CounterConfig
80010c08   EVE_SCTM_CounterRead
80010b84   EVE_SCTM_CounterTimerEnable
80010c38   EVE_SCTM_Enable
80010bb0   EVE_SCTM_InpEvtSelect
80010c20   EVE_SCTM_OverflowCheck
80010bdc   EVE_SCTM_SamplingSelect
400274ec   GLCM_TI_IRES
400274c0   GLCM_TI_VISION_FXNS
800108bc   GLCM_TI_activate
8001066c   GLCM_TI_alloc
80010b34   GLCM_TI_control
80010918   GLCM_TI_deactivate
80010974   GLCM_TI_dmaControl
80010adc   GLCM_TI_execute
80010b18   GLCM_TI_free
80010afc   GLCM_TI_getGraphMemReq
80010524   GLCM_TI_graphCreate
80010274   GLCM_TI_init
80833684   GLCM_TI_maxGLCMLevels_1c
8083368c   GLCM_TI_maxGLCMLevels_8c
80010b38   GLCM_TI_numAlloc
800100ac   GLCM_TI_process
8000717c   HOSTclose
80005f20   HOSTlseek
8000645c   HOSTopen
800066b4   HOSTread
80006088   HOSTrename
80006f9c   HOSTunlink
80006a14   HOSTwrite
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
8000bfb0   TEST_PRINTF
8000c028   TI_CreateMemoryHandle
8000bd48   TI_GetMemoryChunk
00007000   WMEM_SIZE
40027b6c   __CIOBUF_
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit
40027000   __TI_STACK_END
00003000   __TI_STACK_SIZE
40027000   __TI_STATIC_BASE
00800000   __TI_SYSMEM_SIZE
00000001   __TI_args_main
00000001   __TI_exit
80007cd4   __arp32abi_abort_msg
8000444c   __arp32abi_addd
80007ef4   __arp32abi_addll
80005c18   __arp32abi_cmpd
80007e8c   __arp32abi_cmplls
80007eb0   __arp32abi_cmpllu
80006744   __arp32abi_cvtdf
80006bac   __arp32abi_cvtfd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80006dac   __arp32abi_fixdi
800073b0   __arp32abi_fltid
80006c2c   __arp32abi_fltulld
80007740   __arp32abi_isinf
80007680   __arp32abi_llshl
80007d7c   __arp32abi_llshru
800040bc   __arp32abi_mpyd
80004ec4   __arp32abi_mpyll
80007e3c   __arp32abi_negd
80007f88   __arp32abi_negll
80007d0c   __arp32abi_remull
80007c20   __arp32abi_strasgi
80007e10   __arp32abi_subd
80007f60   __arp32abi_subll
ffffffff   __binit__
ffffffff   __c_args__
80833618   __ctrl_vcop_accumulate_8c_glcm
8083360c   __ctrl_vcop_glcm_compute_1c
80833610   __ctrl_vcop_glcm_compute_8c
40047554   __pblock_vcop_accumulate_8c_glcm
40047014   __pblock_vcop_glcm_compute_1c
40047234   __pblock_vcop_glcm_compute_8c
40047000   __pblock_vcop_initialize_glcm
0000017c   _algo_fardata_size
00000568   _algo_neardata_size
00001978   _algo_text_size
80007b64   _args_main
80007264   _auto_init
000004f0   _bam_fardata_size
000001e1   _bam_neardata_size
0000318c   _bam_text_size
80006324   _buff_read
80007418   _c_int00
80007950   _cleanup
808331c4   _cleanup_ptr
80006e28   _closefile
4002756c   _ctypes_
800076e0   _doflush
808331c8   _dtors_ptr
80000120   _dummy_handler
80004c08   _frcaddd
80003940   _frcdivd
80005160   _frcmpyd
80833400   _ft_end
808331d4   _ftable
40054000   _imemha_memory
40074000   _imemhb_memory
40050000   _imemla_memory
40070000   _imemlb_memory
808333f0   _lock
80007e64   _mpyl
40027b04   _my_stack
80008040   _nop
800030d0   _printfi
80007344   _rd_ok
800078a8   _renormd
80000100   _reset_handler
00000300   _rts_fardata_size
00000268   _rts_neardata_size
00006f48   _rts_text_size
80001100   _scanfi
40024000   _stack
000001f4   _starterware_fardata_size
00000000   _starterware_neardata_size
00000110   _starterware_text_size
80030000   _sys_memory
80008044   _system_pre_init
00003ff0   _text_size
80833118   _tmpnams
808333f4   _unlock
80000000   _vec_table
40040000   _wmem_memory
80006864   _wrt_ok
80008038   abort
80006ea4   atoi
8000e724   bam_getMemPacket
8000efd8   bam_mcheck
8000e310   bam_mem_alloc
8000eb98   bam_mem_free
8000ed10   bam_minit
8000ee48   bam_releaseMemPacket
400277d8   bam_stat_num_packets
ffffffff   binit
80006aa0   close
40027c8c   edmaBase
80833404   errno
800078fc   exit
80007db0   fclose
80006f20   fflush
80007f48   fgets
80007c5c   fopen
800071f0   fprintf
80005a54   fputc
80004930   fputs
8000501c   fread
80007f74   free
800068f4   fseek
80006984   ftell
8000351c   fwrite
80833694   gBAM_TI_glcmDmaNodeReadKernel
808336b0   gBAM_TI_glcmDmaNodeReadKernelExecFunc
808336a8   gBAM_TI_glcmDmaNodeReadKernelHelperFunc
808336c8   gBAM_TI_glcmDmaNodeWriteKernel
808336e4   gBAM_TI_glcmDmaNodeWriteKernelExecFunc
808336dc   gBAM_TI_glcmDmaNodeWriteKernelHelperFunc
80833654   gBAM_TI_glcmExecFunc
80833630   gBAM_TI_glcmHelperFunc
8083361c   gBAM_TI_glcmKernel
8083366c   gBAM_TI_intensityScalingExecFunc
8083364c   gBAM_TI_intensityScalingHelperFunc
80833638   gBAM_TI_intensityScalingKernel
80832cb4   gBAM_memPrintfArr
80832664   gConfig_glcm
40027a5c   gDmaUtilsStateStruct
8083377c   gGlcm_TI_BAM_kernelDBdef
80832c08   gTest_TI_profileSctm
40027ae8   gTest_TI_profileTsc
80008dd4   glcmTest
8000b6a8   glcm_ref_cn
80830000   gsTokenMap_glcm
80007480   lseek
8000761c   ltoa
80009f50   main
80007a40   malloc
80832c18   memObj_DMEM
80005ce4   mem_alloc
80006620   mem_free
80007ed4   memccpy
80005b3c   memcpy
800061dc   memset
80007104   minit
80005968   open
8000fc7c   prepare_lut
80006d2c   printf
8000a75c   printparams
8000acec   profiler_end
8000c00c   profiler_end_print
8000bff4   profiler_getSP
8000bc78   profiler_getStackDepth
8000ba38   profiler_init
8000bf54   profiler_initStack
8000bf1c   profiler_printStatus
8000be90   profiler_start
8000bdf4   profiler_testCaseInfo
800079f0   rand
800074e8   read
80007a8c   readmsg
8000b894   readparamfile
8000802c   remove
8000b554   report_printAppletInfo
80005648   setvbuf
80007ba4   sprintf
80007de0   srand
80007d44   sscanf
80008048   statCollectorControl
8000bc08   statCollectorInit
800015f8   strtod
80003ef0   strtol
80001998   strtold
80001d34   strtoll
80004604   strtoul
80002e84   strtoull
40027ac4   test_module_cyles
80007ad4   unlink
8000fd64   vcop_accumulate_8c_glcm
8000f9ac   vcop_accumulate_8c_glcm_init
800064f4   vcop_free
8000b0e4   vcop_glcm_cn
8000f77c   vcop_glcm_compute_1c_init
80010098   vcop_glcm_compute_1c_param_count
8000ff08   vcop_glcm_compute_1c_vloops
8000f1c4   vcop_glcm_compute_8c_init
800100a0   vcop_glcm_compute_8c_param_count
8000fe08   vcop_glcm_compute_8c_vloops
8000fe9c   vcop_initialize_glcm
8000bce4   vcop_intensity_scaling_cn
8000ff70   vcop_intensity_scaling_init
800100a8   vcop_intensity_scaling_param_count
80010074   vcop_intensity_scaling_vloops
80007fc8   vcop_malloc
80004aa0   vcop_memalign
800077f8   vcop_minit
800072d4   vfprintf
80007c98   vsprintf
80007550   write
80007b1c   writemsg


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000000   _starterware_neardata_size
00000001   __TI_args_main
00000001   __TI_exit
00000110   _starterware_text_size
0000017c   _algo_fardata_size
000001e1   _bam_neardata_size
000001f4   _starterware_fardata_size
00000268   _rts_neardata_size
00000300   _rts_fardata_size
000004f0   _bam_fardata_size
00000568   _algo_neardata_size
00001978   _algo_text_size
00003000   __TI_STACK_SIZE
0000318c   _bam_text_size
00003ff0   _text_size
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
00006f48   _rts_text_size
00007000   WMEM_SIZE
00800000   __TI_SYSMEM_SIZE
40020000   DMEM_SCRATCH
40024000   _stack
40027000   __TI_STACK_END
40027000   __TI_STATIC_BASE
400274c0   GLCM_TI_VISION_FXNS
400274ec   GLCM_TI_IRES
4002756c   _ctypes_
400277d8   bam_stat_num_packets
40027a5c   gDmaUtilsStateStruct
40027ac4   test_module_cyles
40027ae8   gTest_TI_profileTsc
40027b04   _my_stack
40027b6c   __CIOBUF_
40027c8c   edmaBase
40040000   _wmem_memory
40047000   __pblock_vcop_initialize_glcm
40047014   __pblock_vcop_glcm_compute_1c
40047234   __pblock_vcop_glcm_compute_8c
40047554   __pblock_vcop_accumulate_8c_glcm
40050000   _imemla_memory
40054000   _imemha_memory
40070000   _imemlb_memory
40074000   _imemhb_memory
80000000   _vec_table
80000100   _reset_handler
80000120   _dummy_handler
80001100   _scanfi
800015f8   strtod
80001998   strtold
80001d34   strtoll
80002e84   strtoull
800030d0   _printfi
8000351c   fwrite
80003940   _frcdivd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80003ef0   strtol
800040bc   __arp32abi_mpyd
8000444c   __arp32abi_addd
80004604   strtoul
80004930   fputs
80004aa0   vcop_memalign
80004c08   _frcaddd
80004ec4   __arp32abi_mpyll
8000501c   fread
80005160   _frcmpyd
80005648   setvbuf
80005968   open
80005a54   fputc
80005b3c   memcpy
80005c18   __arp32abi_cmpd
80005ce4   mem_alloc
80005f20   HOSTlseek
80006088   HOSTrename
800061dc   memset
80006324   _buff_read
8000645c   HOSTopen
800064f4   vcop_free
80006620   mem_free
800066b4   HOSTread
80006744   __arp32abi_cvtdf
80006864   _wrt_ok
800068f4   fseek
80006984   ftell
80006a14   HOSTwrite
80006aa0   close
80006bac   __arp32abi_cvtfd
80006c2c   __arp32abi_fltulld
80006d2c   printf
80006dac   __arp32abi_fixdi
80006e28   _closefile
80006ea4   atoi
80006f20   fflush
80006f9c   HOSTunlink
80007104   minit
8000717c   HOSTclose
800071f0   fprintf
80007264   _auto_init
800072d4   vfprintf
80007344   _rd_ok
800073b0   __arp32abi_fltid
80007418   _c_int00
80007480   lseek
800074e8   read
80007550   write
8000761c   ltoa
80007680   __arp32abi_llshl
800076e0   _doflush
80007740   __arp32abi_isinf
800077f8   vcop_minit
800078a8   _renormd
800078fc   exit
80007950   _cleanup
800079f0   rand
80007a40   malloc
80007a8c   readmsg
80007ad4   unlink
80007b1c   writemsg
80007b5c   C$$IO$$
80007b64   _args_main
80007ba4   sprintf
80007c20   __arp32abi_strasgi
80007c5c   fopen
80007c98   vsprintf
80007cd4   __arp32abi_abort_msg
80007d0c   __arp32abi_remull
80007d44   sscanf
80007d7c   __arp32abi_llshru
80007db0   fclose
80007de0   srand
80007e10   __arp32abi_subd
80007e3c   __arp32abi_negd
80007e64   _mpyl
80007e8c   __arp32abi_cmplls
80007eb0   __arp32abi_cmpllu
80007ed4   memccpy
80007ef4   __arp32abi_addll
80007f48   fgets
80007f60   __arp32abi_subll
80007f74   free
80007f88   __arp32abi_negll
80007fc8   vcop_malloc
8000802c   remove
80008038   C$$EXIT
80008038   abort
80008040   _nop
80008044   _system_pre_init
80008048   statCollectorControl
80008dd4   glcmTest
80009910   EDMA_UTILS_autoIncrement_configure
80009f50   main
8000a75c   printparams
8000aa64   EDMA_UTILS_autoIncrement_update
8000acec   profiler_end
8000af20   DMA_funcs_hardwareRegSetup
8000b0e4   vcop_glcm_cn
8000b278   DMA_resourceAllocator_allocateResources
8000b3f0   EDMA_UTILS_autoIncrement_triggerInChannel
8000b554   report_printAppletInfo
8000b6a8   glcm_ref_cn
8000b7ac   EDMA_UTILS_autoIncrement_init
8000b894   readparamfile
8000b96c   DMA_utils_updateStateStruct
8000ba38   profiler_init
8000bafc   EDMA_UTILS_memcpy2D
8000bb94   DMA_funcs_writeTransferParams
8000bc08   statCollectorInit
8000bc78   profiler_getStackDepth
8000bce4   vcop_intensity_scaling_cn
8000bd48   TI_GetMemoryChunk
8000bda0   EDMA_UTILS_autoIncrement_waitInChannel
8000bdf4   profiler_testCaseInfo
8000be44   EDMA_UTILS_globalReset
8000be90   profiler_start
8000bf1c   profiler_printStatus
8000bf54   profiler_initStack
8000bf84   DMA_resourceAllocator_initResources
8000bfb0   TEST_PRINTF
8000bfd4   DMA_utils_resetStateStruct
8000bff4   profiler_getSP
8000c00c   profiler_end_print
8000c01c   DMA_resourceAllocator_setEdma3RmHandle
8000c028   TI_CreateMemoryHandle
8000c034   EDMA3LLD_SUPPORT_requestResources
8000c038   BAM_initGraph
8000d9b8   BAM_optimizeGraph
8000e144   BAM_createGraph
8000e310   bam_mem_alloc
8000e494   BAM_updateNodes
8000e5ec   BAM_process
8000e724   bam_getMemPacket
8000e97c   BAM_fillKernelInfo
8000ea8c   BAM_getGraphMemSize
8000eb98   bam_mem_free
8000ec64   BAM_copyIntMemRec2ExtMem
8000ed10   bam_minit
8000edb0   BAM_ARP32_computeWrapper
8000ee48   bam_releaseMemPacket
8000eed8   BAM_copyNodeList
8000ef64   BAM_initGraphInstance
8000efd8   bam_mcheck
8000f0a4   BAM_controlNode
8000f0f8   BAM_initKernelDB
8000f144   BAM_getMemPacket
8000f17c   BAM_printf
8000f1c0   BAM_dummyKernelFunc
8000f1c4   vcop_glcm_compute_8c_init
8000f77c   vcop_glcm_compute_1c_init
8000f9ac   vcop_accumulate_8c_glcm_init
8000fc7c   prepare_lut
8000fd64   vcop_accumulate_8c_glcm
8000fe08   vcop_glcm_compute_8c_vloops
8000fe9c   vcop_initialize_glcm
8000ff08   vcop_glcm_compute_1c_vloops
8000ff70   vcop_intensity_scaling_init
80010074   vcop_intensity_scaling_vloops
80010098   vcop_glcm_compute_1c_param_count
800100a0   vcop_glcm_compute_8c_param_count
800100a8   vcop_intensity_scaling_param_count
800100ac   GLCM_TI_process
80010274   GLCM_TI_init
80010524   GLCM_TI_graphCreate
8001066c   GLCM_TI_alloc
800108bc   GLCM_TI_activate
80010918   GLCM_TI_deactivate
80010974   GLCM_TI_dmaControl
80010adc   GLCM_TI_execute
80010afc   GLCM_TI_getGraphMemReq
80010b18   GLCM_TI_free
80010b34   GLCM_TI_control
80010b38   GLCM_TI_numAlloc
80010b3c   EVE_SCTM_CounterConfig
80010b84   EVE_SCTM_CounterTimerEnable
80010bb0   EVE_SCTM_InpEvtSelect
80010bdc   EVE_SCTM_SamplingSelect
80010c08   EVE_SCTM_CounterRead
80010c20   EVE_SCTM_OverflowCheck
80010c38   EVE_SCTM_Enable
80030000   _sys_memory
80830000   gsTokenMap_glcm
80832664   gConfig_glcm
80832c08   gTest_TI_profileSctm
80832c18   memObj_DMEM
80832cb4   gBAM_memPrintfArr
80833118   _tmpnams
808331c4   _cleanup_ptr
808331c8   _dtors_ptr
808331d4   _ftable
808333f0   _lock
808333f4   _unlock
80833400   _ft_end
80833404   errno
80833418   CRED_instVirtAddr
8083360c   __ctrl_vcop_glcm_compute_1c
80833610   __ctrl_vcop_glcm_compute_8c
80833618   __ctrl_vcop_accumulate_8c_glcm
8083361c   gBAM_TI_glcmKernel
80833630   gBAM_TI_glcmHelperFunc
80833638   gBAM_TI_intensityScalingKernel
8083364c   gBAM_TI_intensityScalingHelperFunc
80833654   gBAM_TI_glcmExecFunc
8083366c   gBAM_TI_intensityScalingExecFunc
80833684   GLCM_TI_maxGLCMLevels_1c
8083368c   GLCM_TI_maxGLCMLevels_8c
80833694   gBAM_TI_glcmDmaNodeReadKernel
808336a8   gBAM_TI_glcmDmaNodeReadKernelHelperFunc
808336b0   gBAM_TI_glcmDmaNodeReadKernelExecFunc
808336c8   gBAM_TI_glcmDmaNodeWriteKernel
808336dc   gBAM_TI_glcmDmaNodeWriteKernelHelperFunc
808336e4   gBAM_TI_glcmDmaNodeWriteKernelExecFunc
8083377c   gGlcm_TI_BAM_kernelDBdef
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit

[280 symbols]
