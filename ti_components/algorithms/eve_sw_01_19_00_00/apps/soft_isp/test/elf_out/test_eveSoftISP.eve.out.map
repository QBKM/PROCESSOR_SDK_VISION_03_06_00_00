******************************************************************************
                   ARP32 Linker PC v1.0.7                      
******************************************************************************
>> Linked Mon Jun 25 22:15:46 2018

OUTPUT FILE NAME:   <.\elf_out\test_eveSoftISP.eve.out>
ENTRY POINT SYMBOL: "_reset_handler"  address: 80000100


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  VECMEM                80000000   00000100  00000028  000000d8  RWIX
  CMDMEM                80000100   00001000  00000028  00000fd8  RWIX
  EXTMEM                80001100   00020000  0001246c  0000db94  RWIX

PAGE 1:
  DATMEM                40020000   00008000  00007c80  00000380  RWIX
  WMEM                  40040000   00008000  00007000  00001000  RWIX
  IMEMLA                40050000   00004000  00004000  00000000  RWIX
  IMEMHA                40054000   00004000  00004000  00000000  RWIX
  IMEMLB                40070000   00004000  00004000  00000000  RWIX
  IMEMHB                40074000   00004000  00004000  00000000  RWIX
  L3MEM                 40300000   00100000  00000000  00100000  RWIX
  GEM0_L2_MEM           40800000   00008000  00000000  00008000  RWIX
  EXTDMEM               80030000   02000000  010039f4  00ffc60c  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.cinit     1    40020000    00000000     UNINITIALIZED

.init_array 
*          1    40020000    00000000     UNINITIALIZED

.intvecs   0    80000000    00000028     
                  80000000    00000028     boot_arp32.obj (.intvecs)

.inthandler 
*          0    80000100    00000028     
                  80000100    00000028     boot_arp32.obj (.inthandler)

.rts_text 
*          0    80001100    00006f14     
                  80001100    000004f8     rtsarp32_v200.lib : _scanfi.obj (.text:_scanfi)
                  800015f8    000003a0                       : strtod.obj (.text:strtod)
                  80001998    0000039c                       : strtold.obj (.text:strtold)
                  80001d34    000002d8                       : strtoll.obj (.text:strtoll)
                  8000200c    000002a0                       : _printfi.obj (.text:_setfield)
                  800022ac    00000268                       : _scanfi.obj (.text:_sproc_int)
                  80002514    00000260                       : _scanfi.obj (.text:_sset_arg)
                  80002774    0000025c                       : _printfi.obj (.text:_pproc_fge)
                  800029d0    0000025c                       : _printfi.obj (.text:ecvt)
                  80002c2c    00000258                       : _printfi.obj (.text:fcvt)
                  80002e84    0000024c                       : strtoull.obj (.text:strtoull)
                  800030d0    0000022c                       : _printfi.obj (.text:_printfi)
                  800032fc    00000220                       : _printfi.obj (.text:_pconv_e)
                  8000351c    0000021c                       : fwrite.obj (.text:fwrite)
                  80003738    00000208                       : _printfi.obj (.text:_getarg_diouxp)
                  80003940    00000200                       : frcdivd.obj (.text:_frcdivd)
                  80003b40    000001e4                       : divd.obj (.text:__arp32abi_divd)
                  80003d24    000001cc                       : imath64.obj (.text:__arp32abi_divull)
                  80003ef0    000001cc                       : strtol.obj (.text:strtol)
                  800040bc    000001c8                       : mpyd.obj (.text:__arp32abi_mpyd)
                  80004284    000001c8                       : fgets.obj (.text:_dofgets)
                  8000444c    000001b8                       : addd.obj (.text:__arp32abi_addd)
                  80004604    000001a0                       : strtoul.obj (.text:strtoul)
                  800047a4    0000018c                       : _printfi.obj (.text:_pproc_diouxp)
                  80004930    00000170                       : fputs.obj (.text:fputs)
                  80004aa0    00000168                       : vcop_memory.obj (.text:vcop_memalign)
                  80004c08    00000160                       : frcaddd.obj (.text:_frcaddd)
                  80004d68    0000015c                       : _scanfi.obj (.text:_sproc_float)
                  80004ec4    00000158                       : llmpy.obj (.text:__arp32abi_mpyll)
                  8000501c    00000144                       : fread.obj (.text:fread)
                  80005160    00000140                       : frcmpyd.obj (.text:_frcmpyd)
                  800052a0    00000140                       : _scanfi.obj (.text:_sget_conv)
                  800053e0    0000013c                       : _printfi.obj (.text:_pproc_fwp)
                  8000551c    0000012c                       : fopen.obj (.text:_openfile)
                  80005648    00000118                       : setvbuf.obj (.text:setvbuf)
                  80005760    00000114                       : _printfi.obj (.text:_pconv_g)
                  80005874    000000f4                       : _printfi.obj (.text:_pproc_str)
                  80005968    000000ec                       : lowlev.obj (.text:open)
                  80005a54    000000e8                       : fputc.obj (.text:fputc)
                  80005b3c    000000dc                       : memcpy.obj (.text:memcpy)
                  80005c18    000000cc                       : cmpd.obj (.text:__arp32abi_cmpd)
                  80005ce4    000000c4                       : memory.obj (.text:mem_alloc)
                  80005da8    000000bc                       : _printfi.obj (.text:_ltostr)
                  80005e64    000000bc                       : _scanfi.obj (.text:_sproc_str)
                  80005f20    000000b4                       : trgdrv.obj (.text:HOSTlseek)
                  80005fd4    000000b4                       : _scanfi.obj (.text:_sproc_lb)
                  80006088    000000ac                       : trgdrv.obj (.text:HOSTrename)
                  80006134    000000a8                       : fopen.obj (.text:_search_fp)
                  800061dc    000000a8                       : memset.obj (.text:memset)
                  80006284    000000a0                       : lowlev.obj (.text:getdevice)
                  80006324    0000009c                       : _bufread.obj (.text:_buff_read)
                  800063c0    0000009c                       : _printfi.obj (.text:_mcpy)
                  8000645c    00000098                       : trgdrv.obj (.text:HOSTopen)
                  800064f4    00000098                       : vcop_memory.obj (.text:vcop_free)
                  8000658c    00000094                       : sscanf.obj (.text:_chkmbc)
                  80006620    00000094                       : memory.obj (.text:mem_free)
                  800066b4    00000090                       : trgdrv.obj (.text:HOSTread)
                  80006744    00000090                       : cvtdf.obj (.text:__arp32abi_cvtdf)
                  800067d4    00000090                       : _printfi.obj (.text:_pproc_fflags)
                  80006864    00000090                       : _io_perm.obj (.text:_wrt_ok)
                  800068f4    00000090                       : fseek.obj (.text:fseek)
                  80006984    00000090                       : ftell.obj (.text:ftell)
                  80006a14    0000008c                       : trgdrv.obj (.text:HOSTwrite)
                  80006aa0    00000088                       : lowlev.obj (.text:close)
                  80006b28    00000084                       : _printfi.obj (.text:_ecpy)
                  80006bac    00000080                       : cvtfd.obj (.text:__arp32abi_cvtfd)
                  80006c2c    00000080                       : _scanfi.obj (.text:_sget_scanset)
                  80006cac    00000080                       : printf.obj (.text:printf)
                  80006d2c    0000007c                       : fixdi.obj (.text:__arp32abi_fixdi)
                  80006da8    0000007c                       : fclose.obj (.text:_closefile)
                  80006e24    0000007c                       : atoi.obj (.text:atoi)
                  80006ea0    0000007c                       : fflush.obj (.text:fflush)
                  80006f1c    00000078                       : trgdrv.obj (.text:HOSTunlink)
                  80006f94    00000078                       : _printfi.obj (.text:_div)
                  8000700c    00000078                       : _printfi.obj (.text:_pconv_f)
                  80007084    00000078                       : memory.obj (.text:minit)
                  800070fc    00000074                       : trgdrv.obj (.text:HOSTclose)
                  80007170    00000074                       : fprintf.obj (.text:fprintf)
                  800071e4    00000070                       : autoinit.obj (.text:_auto_init)
                  80007254    00000070                       : vfprintf.obj (.text:vfprintf)
                  800072c4    0000006c                       : _io_perm.obj (.text:_rd_ok)
                  80007330    00000068                       : fltid.obj (.text:__arp32abi_fltid)
                  80007398    00000068                       : boot.obj (.text:_c_int00)
                  80007400    00000068                       : lowlev.obj (.text:lseek)
                  80007468    00000068                       : lowlev.obj (.text:read)
                  800074d0    00000068                       : lowlev.obj (.text:write)
                  80007538    00000064                       : imath64.obj (.text:_subcull)
                  8000759c    00000064                       : ltoa.obj (.text:ltoa)
                  80007600    00000060                       : llshift.obj (.text:__arp32abi_llshl)
                  80007660    00000060                       : fflush.obj (.text:_doflush)
                  800076c0    0000005c                       : isinf.obj (.text:__arp32abi_isinf)
                  8000771c    0000005c                       : lowlev.obj (.text:tabinit)
                  80007778    0000005c                       : vcop_memory.obj (.text:vcop_minit)
                  800077d4    00000054                       : _printfi.obj (.text:_fcpy)
                  80007828    00000054                       : renormd.obj (.text:_renormd)
                  8000787c    00000054                       : exit.obj (.text:exit)
                  800078d0    00000050                       : fopen.obj (.text:_cleanup)
                  80007920    00000050                       : lowlev.obj (.text:finddevice)
                  80007970    00000050                       : rand.obj (.text:rand)
                  800079c0    0000004c                       : fltud.obj (.text:__arp32abi_fltud)
                  80007a0c    0000004c                       : memory.obj (.text:malloc)
                  80007a58    00000048                       : trgmsg.obj (.text:readmsg)
                  80007aa0    00000048                       : lowlev.obj (.text:unlink)
                  80007ae8    00000048                       : trgmsg.obj (.text:writemsg)
                  80007b30    00000040                       : args_main.obj (.text:_args_main)
                  80007b70    00000040                       : sprintf.obj (.text:sprintf)
                  80007bb0    0000003c                       : _printfi.obj (.text:__arp32abi_isnan)
                  80007bec    0000003c                       : strasgi_c.obj (.text:__arp32abi_strasgi)
                  80007c28    0000003c                       : fopen.obj (.text:fopen)
                  80007c64    0000003c                       : vsprintf.obj (.text:vsprintf)
                  80007ca0    00000038                       : assert.obj (.text:__arp32abi_abort_msg)
                  80007cd8    00000038                       : imath64.obj (.text:__arp32abi_remull)
                  80007d10    00000038                       : sscanf.obj (.text:sscanf)
                  80007d48    00000034                       : llshift.obj (.text:__arp32abi_llshru)
                  80007d7c    00000030                       : fclose.obj (.text:fclose)
                  80007dac    00000030                       : rand.obj (.text:srand)
                  80007ddc    0000002c                       : subd.obj (.text:__arp32abi_subd)
                  80007e08    00000028                       : negd.obj (.text:__arp32abi_negd)
                  80007e30    00000028                       : mult.obj (.text:_mpyl)
                  80007e58    00000024                       : llcmp.obj (.text:__arp32abi_cmplls)
                  80007e7c    00000024                       : llcmp.obj (.text:__arp32abi_cmpllu)
                  80007ea0    00000020                       : memccpy.obj (.text:memccpy)
                  80007ec0    0000001c                       : lladdsub.obj (.text:__arp32abi_addll)
                  80007edc    0000001c                       : sprintf.obj (.text:_outs)
                  80007ef8    0000001c                       : vsprintf.obj (.text:_outs)
                  80007f14    00000018                       : fgets.obj (.text:fgets)
                  80007f2c    00000014                       : lladdsub.obj (.text:__arp32abi_subll)
                  80007f40    00000014                       : memory.obj (.text:free)
                  80007f54    00000010                       : lladdsub.obj (.text:__arp32abi_negll)
                  80007f64    00000010                       : sscanf.obj (.text:_inpchar)
                  80007f74    00000010                       : sprintf.obj (.text:_outc)
                  80007f84    00000010                       : vsprintf.obj (.text:_outc)
                  80007f94    00000010                       : vcop_memory.obj (.text:vcop_malloc)
                  80007fa4    0000000c                       : fprintf.obj (.text:_outc)
                  80007fb0    0000000c                       : printf.obj (.text:_outc)
                  80007fbc    0000000c                       : vfprintf.obj (.text:_outc)
                  80007fc8    0000000c                       : fprintf.obj (.text:_outs)
                  80007fd4    0000000c                       : printf.obj (.text:_outs)
                  80007fe0    0000000c                       : vfprintf.obj (.text:_outs)
                  80007fec    0000000c                       : sscanf.obj (.text:_uninpchar)
                  80007ff8    0000000c                       : remove.obj (.text:remove)
                  80008004    00000008                       : exit.obj (.text:abort)
                  8000800c    00000004                       : _lock.obj (.text:_nop)
                  80008010    00000004                       : pre_init.obj (.text:_system_pre_init)

.text      0    80008014    00005628     
                  80008014    000010dc     soft_isp_tb.obj (.text:softIspTest)
                  800090f0    00000d8c     ti_stats_collector.obj (.text:statCollectorControl)
                  80009e7c    00000640     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_configure)
                  8000a4bc    00000574     soft_isp_tb.obj (.text:main)
                  8000aa30    000004d8     soft_isp_ref_cn.obj (.text:soft_isp_ref_cn)
                  8000af08    000003e8     configparser.obj (.text:ParseContent)
                  8000b2f0    00000310     libevenatckernels.eve.lib : vcop_soft_isp_cn.obj (.text:vcop_rccc_to_cccc_cn)
                  8000b600    00000308     configparser.obj (.text:printparams)
                  8000b908    00000288     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_update)
                  8000bb90    0000026c     libevenatckernels.eve.lib : vcop_soft_isp_cn.obj (.text:vcop_stats_collector_dense_cn)
                  8000bdfc    00000234     eve_profile.obj (.text:profiler_end)
                  8000c030    000001c4     dmautils.lib : dma_funcs.obj (.text:DMA_funcs_hardwareRegSetup)
                  8000c1f4    000001b8                  : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerOutChannel)
                  8000c3ac    00000198     libevenatckernels.eve.lib : vcop_soft_isp_cn.obj (.text:vcop_gbce_interp_cn)
                  8000c544    00000188                               : vcop_soft_isp_cn.obj (.text:vcop_black_clamp_c_balance_cn)
                  8000c6cc    00000178     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_allocateResources)
                  8000c844    00000164                  : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerInChannel)
                  8000c9a8    00000154     report_utils.obj (.text:report_printAppletInfo)
                  8000cafc    0000011c     libevenatckernels.eve.lib : vcop_soft_isp_cn.obj (.text:vcop_decompand_piecewise_linear_cn)
                  8000cc18    0000010c                               : vcop_soft_isp_cn.obj (.text:vcop_gbce_simple_cn)
                  8000cd24    000000e8     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_init)
                  8000ce0c    000000d8     configparser.obj (.text:readparamfile)
                  8000cee4    000000cc     dmautils.lib : edma_utils_state.obj (.text:DMA_utils_updateStateStruct)
                  8000cfb0    000000c4     eve_profile.obj (.text:profiler_init)
                  8000d074    00000098     dmautils.lib : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D)
                  8000d10c    00000088     libevenatckernels.eve.lib : vcop_soft_isp_cn.obj (.text:vcop_soft_isp_extract_r_cn)
                  8000d194    00000074     dmautils.lib : dma_funcs.obj (.text:DMA_funcs_writeTransferParams)
                  8000d208    00000070     ti_stats_collector.obj (.text:statCollectorInit)
                  8000d278    0000006c     eve_profile.obj (.text:profiler_getStackDepth)
                  8000d2e4    00000068     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitOutChannel)
                  8000d34c    00000058     ti_mem_manager.obj (.text:TI_GetMemoryChunk)
                  8000d3a4    00000054     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitInChannel)
                  8000d3f8    00000050     eve_profile.obj (.text:profiler_testCaseInfo)
                  8000d448    0000004c     dmautils.lib : edma_utils.obj (.text:EDMA_UTILS_globalReset)
                  8000d494    00000048     eve_profile.obj (.text:profiler_start)
                  8000d4dc    00000044     dmautils.lib : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D_init)
                  8000d520    00000038     eve_profile.obj (.text:profiler_printStatus)
                  8000d558    00000030     eve_profile.obj (.text:profiler_initStack)
                  8000d588    0000002c     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_initResources)
                  8000d5b4    00000024     eve_profile.obj (.text:TEST_PRINTF)
                  8000d5d8    00000020     dmautils.lib : edma_utils_state.obj (.text:DMA_utils_resetStateStruct)
                  8000d5f8    00000018     eve_profile.obj (.text:profiler_getSP)
                  8000d610    00000010     eve_profile.obj (.text:profiler_end_print)
                  8000d620    0000000c     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_setEdma3RmHandle)
                  8000d62c    0000000c     ti_mem_manager.obj (.text:TI_CreateMemoryHandle)
                  8000d638    00000004     dmautils.lib : edma3lld_support.obj (.text:EDMA3LLD_SUPPORT_requestResources)

.bam_text 
*          0    8000d63c    00003418     
                  8000d63c    00000820     algframework.lib : bam_construct_int.obj (.text:BAM_initGraph)
                  8000de5c    00000770                      : bam_construct_int.obj (.text:BAM_autoAllocMemRec)
                  8000e5cc    00000574                      : bam_execute.obj (.text:BAM_execute)
                  8000eb40    0000047c                      : bam_construct_int.obj (.text:BAM_finaliseGraph)
                  8000efbc    00000414                      : bam_construct_int.obj (.text:BAM_optimizeGraph)
                  8000f3d0    00000378                      : bam_construct_int.obj (.text:BAM_getMemRec)
                  8000f748    000001cc                      : bam_construct.obj (.text:BAM_createGraph)
                  8000f914    00000184                      : bam_memory.obj (.text:bam_mem_alloc)
                  8000fa98    00000158                      : bam_construct_int.obj (.text:BAM_updateNodes)
                  8000fbf0    00000138                      : bam_execute.obj (.text:BAM_process)
                  8000fd28    00000138                      : bam_memory.obj (.text:bam_getMemPacket)
                  8000fe60    00000120                      : bam_construct_int.obj (.text:BAM_setNodeMemRec)
                  8000ff80    0000011c                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_setMemRecFunc)
                  8001009c    00000110                      : bam_construct_int.obj (.text:BAM_fillKernelInfo)
                  800101ac    0000010c                      : bam_construct_int.obj (.text:BAM_getGraphMemSize)
                  800102b8    000000cc                      : bam_memory.obj (.text:bam_mem_free)
                  80010384    000000ac                      : bam_construct_int.obj (.text:BAM_copyIntMemRec2ExtMem)
                  80010430    000000a0                      : bam_memory.obj (.text:bam_minit)
                  800104d0    00000098                      : bam_execute.obj (.text:BAM_ARP32_computeWrapper)
                  80010568    00000090                      : bam_memory.obj (.text:bam_releaseMemPacket)
                  800105f8    0000008c                      : bam_construct_int.obj (.text:BAM_copyNodeList)
                  80010684    00000074                      : bam_execute.obj (.text:BAM_initGraphInstance)
                  800106f8    00000070                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel)
                  80010768    00000070                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel)
                  800107d8    00000068                      : bam_memory.obj (.text:bam_mcheck)
                  80010840    00000064                      : bam_execute.obj (.text:BAM_DSP_computeWrapper)
                  800108a4    00000054                      : bam_execute.obj (.text:BAM_controlNode)
                  800108f8    0000004c                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitInChannel)
                  80010944    0000004c                      : bam_construct.obj (.text:BAM_initKernelDB)
                  80010990    00000044                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitOutChannel)
                  800109d4    00000038                      : bam_construct_int.obj (.text:BAM_getMemPacket)
                  80010a0c    0000002c                      : bam_utils.obj (.text:BAM_printf)
                  80010a38    00000018                      : bam_execute.obj (.text:VCOP_SET_MEM_VIEW)
                  80010a50    00000004                      : bam_execute.obj (.text:BAM_dummyKernelFunc)

.algo_text 
*          0    80010a54    00002a08     
                  80010a54    00000618     libevekernels.eve.lib : vcop_soft_isp_kernel.obj (.text:vcop_rccc_to_cccc_init)
                  8001106c    000004a8                           : bam_soft_isp_exec_funcs.obj (.text:Bam_SoftIsp_initFrame)
                  80011514    0000028c                           : vcop_soft_isp_kernel.obj (.text:vcop_stats_collector_dense_init)
                  800117a0    00000260                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_interp_init)
                  80011a00    00000258                           : bam_soft_isp_helper_funcs.obj (.text:BAM_SoftIsp_getMemRecFunc)
                  80011c58    0000020c                           : vcop_soft_isp_kernel.obj (.text:vcop_rccc_to_cccc_vloops)
                  80011e64    0000015c                           : vcop_soft_isp_kernel.obj (.text:vcop_decompand_piecewise_linear_init)
                  80011fc0    00000108                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_simple_init)
                  800120c8    000000fc                           : vcop_soft_isp_kernel.obj (.text:vcop_black_clamp_c_balance_init)
                  800121c4    000000f4                           : vcop_soft_isp_kernel.obj (.text:vcop_stats_collector_dense_vloops)
                  800122b8    000000c0                           : bam_soft_isp_helper_funcs.obj (.text:BAM_SoftIsp_setMemRecFunc)
                  80012378    000000b0                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_interp_vloops)
                  80012428    000000a8                           : vcop_soft_isp_kernel.obj (.text:vcop_decompand_piecewise_linear_vloops)
                  800124d0    00000074                           : vcop_soft_isp_kernel.obj (.text:vcop_soft_isp_extract_r_init)
                  80012544    0000006c                           : bam_soft_isp_exec_funcs.obj (.text:BAM_SoftIsp_control)
                  800125b0    00000064                           : vcop_soft_isp_kernel.obj (.text:vcop_black_clamp_c_balance_vloops)
                  80012614    00000040                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_simple_vloops)
                  80012654    00000030                           : bam_soft_isp_exec_funcs.obj (.text:Bam_SoftIsp_computeFrame)
                  80012684    0000001c                           : vcop_soft_isp_kernel.obj (.text:vcop_soft_isp_extract_r_vloops)
                  800126a0    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_black_clamp_c_balance_param_count)
                  800126a8    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_decompand_piecewise_linear_param_count)
                  800126b0    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_interp_param_count)
                  800126b8    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_gbce_simple_param_count)
                  800126c0    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_rccc_to_cccc_param_count)
                  800126c8    00000008                           : vcop_soft_isp_kernel.obj (.text:vcop_stats_collector_dense_param_count)
                  800126d0    00000004                           : vcop_soft_isp_kernel.obj (.text:vcop_soft_isp_extract_r_param_count)
                  800126d4    00000288     libeveSoftISP.eve.lib : soft_isp_graph.obj (.text:SOFT_ISP_TI_initKernelsArgs)
                  8001295c    000001b4                           : soft_isp_graph.obj (.text:SOFT_ISP_TI_graphCreate)
                  80012b10    0000018c                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_process)
                  80012c9c    00000170                           : bam_dma_custom_soft_isp_node.obj (.text:BAM_DMA_SOFT_ISP_AUTOINCREMENT_getMemRecFunc)
                  80012e0c    00000160                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_init)
                  80012f6c    00000158                           : soft_isp_graph.obj (.text:SOFT_ISP_TI_dmaControl)
                  800130c4    00000104                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_control)
                  800131c8    000000bc                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_alloc)
                  80013284    00000078                           : soft_isp_graph.obj (.text:SOFT_ISP_TI_graphControl)
                  800132fc    0000005c                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_activate)
                  80013358    0000005c                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_deactivate)
                  800133b4    00000050                           : soft_isp_graph.obj (.text:assignDMAautoIncrementParams)
                  80013404    00000020                           : soft_isp_graph.obj (.text:SOFT_ISP_TI_execute)
                  80013424    0000001c                           : soft_isp_graph.obj (.text:SOFT_ISP_TI_getGraphMemReq)
                  80013440    00000018                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_free)
                  80013458    00000004                           : soft_isp_alg.obj (.text:SOFT_ISP_TI_numAlloc)

.starterware_text 
*          0    8001345c    00000110     
                  8001345c    00000048     libevestarterware_eve.lib : sctm.obj (.text:EVE_SCTM_CounterConfig)
                  800134a4    0000002c                               : sctm.obj (.text:EVE_SCTM_CounterTimerEnable)
                  800134d0    0000002c                               : sctm.obj (.text:EVE_SCTM_InpEvtSelect)
                  800134fc    0000002c                               : sctm.obj (.text:EVE_SCTM_SamplingSelect)
                  80013528    00000018                               : sctm.obj (.text:EVE_SCTM_CounterRead)
                  80013540    00000018                               : sctm.obj (.text:EVE_SCTM_OverflowCheck)
                  80013558    00000014                               : sctm.obj (.text:EVE_SCTM_Enable)

.starterware_neardata 
*          1    40020000    00000000     UNINITIALIZED

.dmemSect 
*          1    40020000    00004000     UNINITIALIZED
                  40020000    00004000     soft_isp_tb.obj (.dmemSect)

.stack     1    40024000    00003000     UNINITIALIZED
                  40024000    00000004     rtsarp32_v200.lib : boot.obj (.stack)
                  40024004    00002ffc     --HOLE--

.bam_neardata 
*          1    40027000    000003d9     
                  40027000    00000014     algframework.lib : bam_memory.obj (.bss) [fill = 0]
                  40027014    00000005                      : bam_memory.obj (.data)
                  40027019    00000003     --HOLE-- [fill = 0]
                  4002701c    00000008                      : bam_construct_int.obj (.rodata)
                  40027024    00000004                      : bam_execute.obj (.rodata)
                  40027028    00000004                      : bam_memory.obj (.rodata)
                  4002702c    000001f8                      : bam_dma_autoincrement_node.obj (.const:.string)
                  40027224    00000121                      : bam_construct_int.obj (.const:.string)
                  40027345    00000090                      : bam_execute.obj (.const:.string)
                  400273d5    00000001     --HOLE-- [fill = 0]
                  400273d6    00000003                      : bam_construct_int.obj (.const:.string:$P$T0$1)

.algo_neardata 
*          1    400273dc    0000035f     
                  400273dc    00000054     libeveSoftISP.eve.lib : soft_isp_alg.obj (.const)
                  40027430    00000054                           : soft_isp_alg.obj (.const:.string)
                  40027484    00000030                           : soft_isp_graph.obj (.const:$P$T0$1)
                  400274b4    0000001c                           : soft_isp_graph.obj (.const:$P$T1$2)
                  400274d0    0000012f                           : soft_isp_graph.obj (.const:.string)
                  400275ff    0000013c                           : bam_dma_custom_soft_isp_node.obj (.const:.string)

.rts_neardata 
*          1    4002773c    00000268     
                  4002773c    00000003     rtsarp32_v200.lib : assert.obj (.const:.string)
                  4002773f    00000001     --HOLE-- [fill = 0]
                  40027740    00000101                       : ctype.obj (.const:.string:_ctypes_)
                  40027841    00000001     --HOLE-- [fill = 0]
                  40027842    00000007                       : _scanfi.obj (.const:.string:flit$1)
                  40027849    00000001     --HOLE-- [fill = 0]
                  4002784a    00000006                       : _scanfi.obj (.const:.string:barr$2)
                  40027850    00000023                       : _printfi.obj (.const:.string)
                  40027873    00000001     --HOLE-- [fill = 0]
                  40027874    00000050                       : strtod.obj (.const:digits)
                  400278c4    00000048                       : strtod.obj (.const:powerof10)
                  4002790c    00000050                       : strtold.obj (.const:digits)
                  4002795c    00000048                       : strtold.obj (.const:powerof10)

.bss       1    400279a4    00000150     UNINITIALIZED
                  400279a4    000000a8     dmautils.lib : dma_resource_allocator.obj (.bss)
                  40027a4c    00000060                  : edma_utils_state.obj (.bss)
                  40027aac    00000048     eve_profile.obj (.bss)

.data      1    40027af4    00000028     
                  40027af4    00000020     boot_arp32.obj (.data)
                  40027b14    00000004     dmautils.lib : dma_resource_allocator.obj (.data)
                  40027b18    00000004     eve_profile.obj (.data)

.rodata    1    40027b1c    00000044     
                  40027b1c    00000028     ti_stats_collector.obj (.rodata)
                  40027b44    00000008     dmautils.lib : edma_utils_autoincrement.obj (.rodata)
                  40027b4c    00000008     eve_profile.obj (.rodata)
                  40027b54    00000008     soft_isp_tb.obj (.rodata)
                  40027b5c    00000004     dmautils.lib : edma_utils_memcpy.obj (.rodata)

.cio       1    40027b60    00000120     UNINITIALIZED
                  40027b60    00000120     rtsarp32_v200.lib : trgmsg.obj (.cio)

.edma_utils_lib_fardata 
*          1    40027c80    00000004     
                  40027c80    00000004     dmautils.lib : edma_utils.obj (.const:edmaBase)

.wmem      1    40040000    00007000     UNINITIALIZED
                  40040000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.wmem)
                  40040008    00006ff8     --HOLE--

.imemla    1    40050000    00004000     UNINITIALIZED
                  40050000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemla)
                  40050008    00003ff8     --HOLE--

.imemha    1    40054000    00004000     UNINITIALIZED
                  40054000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemha)
                  40054008    00003ff8     --HOLE--

.imemlb    1    40070000    00004000     UNINITIALIZED
                  40070000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemlb)
                  40070008    00003ff8     --HOLE--

.imemhb    1    40074000    00004000     UNINITIALIZED
                  40074000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemhb)
                  40074008    00003ff8     --HOLE--

.sysmem    1    80030000    01000000     UNINITIALIZED
                  80030000    00000008     rtsarp32_v200.lib : memory.obj (.sysmem)
                  80030008    00fffff8     --HOLE--

.fardata   1    81030000    00001800     
                  81030000    00001800     soft_isp_config.obj (.fardata:gsTokenMap_soft_isp)

.const     1    81031800    00001030     
                  81031800    000004bd     soft_isp_tb.obj (.const:.string)
                  81031cbd    000003d2     eve_profile.obj (.const:.string)
                  8103208f    00000256     configparser.obj (.const:.string)
                  810322e5    0000018a     soft_isp_config.obj (.const:.string)
                  8103246f    00000001     --HOLE-- [fill = 0]
                  81032470    00000128     ti_stats_collector.obj (.const:.switchtab)
                  81032598    000000fd     report_utils.obj (.const:.string)
                  81032695    000000ee     soft_isp_ref_cn.obj (.const:.string)
                  81032783    00000056     ti_mem_manager.obj (.const:.string)
                  810327d9    00000043     ti_stats_collector.obj (.const:.string)
                  8103281c    0000000c     soft_isp_tb.obj (.const:.string:__FUNCTION__$1)
                  81032828    00000008     configparser.obj (.const:.string:$P$T0$1)

.far       1    81032830    000006d8     UNINITIALIZED
                  81032830    00000680     soft_isp_config.obj (.far)
                  81032eb0    00000028     ti_stats_collector.obj (.far)
                  81032ed8    00000020     eve_profile.obj (.far)
                  81032ef8    00000010     soft_isp_tb.obj (.far)

.bam_fardata 
*          1    81032f08    000004f0     
                  81032f08    00000078     algframework.lib : bam_memory.obj (.far) [fill = 0]
                  81032f80    0000000c                      : bam_execute.obj (.far) [fill = 0]
                  81032f8c    00000008                      : bam_construct.obj (.far) [fill = 0]
                  81032f94    00000400                      : bam_utils.obj (.fardata:gBAM_memPrintfArr)
                  81033394    00000064                      : bam_memory.obj (.fardata:vcop_mem)

.rts_fardata 
*          1    810333f8    00000300     
                  810333f8    000000a0     rtsarp32_v200.lib : defs.obj (.far) [fill = 0]
                  81033498    0000000c                       : memory.obj (.far) [fill = 0]
                  810334a4    00000008                       : boot.obj (.far) [fill = 0]
                  810334ac    00000008                       : trgdrv.obj (.far) [fill = 0]
                  810334b4    000000f0                       : defs.obj (.fardata:_ftable)
                  810335a4    00000078                       : lowlev.obj (.fardata:_device)
                  8103361c    00000064                       : vcop_memory.obj (.fardata:vcop_mem)
                  81033680    00000050                       : lowlev.obj (.fardata:_stream)
                  810336d0    00000008                       : _lock.obj (.fardata)
                  810336d8    00000005                       : vcop_memory.obj (.fardata)
                  810336dd    00000003     --HOLE-- [fill = 0]
                  810336e0    00000004                       : defs.obj (.fardata)
                  810336e4    00000004                       : errno.obj (.fardata)
                  810336e8    00000004                       : fopen.obj (.fardata)
                  810336ec    00000004                       : lowlev.obj (.fardata)
                  810336f0    00000004                       : memory.obj (.fardata)
                  810336f4    00000004                       : rand.obj (.fardata)

.starterware_fardata 
*          1    810336f8    000001f4     
                  810336f8    000001f4     libevestarterware_eve.lib : cred.obj (.fardata:CRED_instVirtAddr)

.algo_fardata 
*          1    810338ec    00000108     
                  810338ec    0000001c     libevekernels.eve.lib : bam_soft_isp_helper_funcs.obj (.fardata)
                  81033908    00000018                           : bam_soft_isp_exec_funcs.obj (.fardata)
                  81033920    00000068     libeveSoftISP.eve.lib : bam_dma_custom_soft_isp_node.obj (.fardata)
                  81033988    00000030                           : soft_isp_graph.obj (.fardata:bamSoftIspKernelExecFuncDB)
                  810339b8    00000030                           : soft_isp_graph.obj (.fardata:bamSoftIspKernelHostDB)
                  810339e8    0000000c                           : soft_isp_graph.obj (.fardata)


SEGMENT ATTRIBUTES

    id tag      seg value
    -- ---      --- -----
     0 PHA_PAGE 3   1    
     1 PHA_PAGE 4   1    
     2 PHA_PAGE 5   1    
     3 PHA_PAGE 6   1    
     4 PHA_PAGE 7   1    
     5 PHA_PAGE 8   1    
     6 PHA_PAGE 9   1    
     7 PHA_PAGE 10  1    
     8 PHA_PAGE 11  1    
     9 PHA_PAGE 12  1    
    10 PHA_PAGE 13  1    
    11 PHA_PAGE 14  1    
    12 PHA_PAGE 15  1    
    13 PHA_PAGE 16  1    
    14 PHA_PAGE 17  1    
    15 PHA_PAGE 18  1    
    16 PHA_PAGE 19  1    


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
800104d0   BAM_ARP32_computeWrapper
800108f8   BAM_DMA_AUTOINCREMENT_frameInitInChannel
80010990   BAM_DMA_AUTOINCREMENT_frameInitOutChannel
8000ff80   BAM_DMA_AUTOINCREMENT_setMemRecFunc
800106f8   BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel
80010768   BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel
80012c9c   BAM_DMA_SOFT_ISP_AUTOINCREMENT_getMemRecFunc
800108a4   BAM_controlNode
80010384   BAM_copyIntMemRec2ExtMem
800105f8   BAM_copyNodeList
8000f748   BAM_createGraph
80010a50   BAM_dummyKernelFunc
8001009c   BAM_fillKernelInfo
800101ac   BAM_getGraphMemSize
800109d4   BAM_getMemPacket
8000d63c   BAM_initGraph
80010684   BAM_initGraphInstance
80010944   BAM_initKernelDB
8000efbc   BAM_optimizeGraph
80010a0c   BAM_printf
8000fbf0   BAM_process
8000fa98   BAM_updateNodes
80008004   C$$EXIT
80007b28   C$$IO$$
810336f8   CRED_instVirtAddr
8000c030   DMA_funcs_hardwareRegSetup
8000d194   DMA_funcs_writeTransferParams
8000c6cc   DMA_resourceAllocator_allocateResources
8000d588   DMA_resourceAllocator_initResources
8000d620   DMA_resourceAllocator_setEdma3RmHandle
8000d5d8   DMA_utils_resetStateStruct
8000cee4   DMA_utils_updateStateStruct
40020000   DMEM_SCRATCH
8000d638   EDMA3LLD_SUPPORT_requestResources
80009e7c   EDMA_UTILS_autoIncrement_configure
8000cd24   EDMA_UTILS_autoIncrement_init
8000c844   EDMA_UTILS_autoIncrement_triggerInChannel
8000c1f4   EDMA_UTILS_autoIncrement_triggerOutChannel
8000b908   EDMA_UTILS_autoIncrement_update
8000d3a4   EDMA_UTILS_autoIncrement_waitInChannel
8000d2e4   EDMA_UTILS_autoIncrement_waitOutChannel
8000d448   EDMA_UTILS_globalReset
8000d074   EDMA_UTILS_memcpy2D
8001345c   EVE_SCTM_CounterConfig
80013528   EVE_SCTM_CounterRead
800134a4   EVE_SCTM_CounterTimerEnable
80013558   EVE_SCTM_Enable
800134d0   EVE_SCTM_InpEvtSelect
80013540   EVE_SCTM_OverflowCheck
800134fc   EVE_SCTM_SamplingSelect
800070fc   HOSTclose
80005f20   HOSTlseek
8000645c   HOSTopen
800066b4   HOSTread
80006088   HOSTrename
80006f1c   HOSTunlink
80006a14   HOSTwrite
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
40027408   SOFT_ISP_TI_IRES
400273dc   SOFT_ISP_TI_VISION_FXNS
800132fc   SOFT_ISP_TI_activate
800131c8   SOFT_ISP_TI_alloc
800130c4   SOFT_ISP_TI_control
80013358   SOFT_ISP_TI_deactivate
80012f6c   SOFT_ISP_TI_dmaControl
80013404   SOFT_ISP_TI_execute
80013440   SOFT_ISP_TI_free
80013424   SOFT_ISP_TI_getGraphMemReq
80013284   SOFT_ISP_TI_graphControl
8001295c   SOFT_ISP_TI_graphCreate
80012e0c   SOFT_ISP_TI_init
80013458   SOFT_ISP_TI_numAlloc
80012b10   SOFT_ISP_TI_process
8000d5b4   TEST_PRINTF
8000d62c   TI_CreateMemoryHandle
8000d34c   TI_GetMemoryChunk
00007000   WMEM_SIZE
40027b60   __CIOBUF_
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit
40027000   __TI_STACK_END
00003000   __TI_STACK_SIZE
40027000   __TI_STATIC_BASE
01000000   __TI_SYSMEM_SIZE
00000001   __TI_args_main
00000001   __TI_exit
80007ca0   __arp32abi_abort_msg
8000444c   __arp32abi_addd
80007ec0   __arp32abi_addll
80005c18   __arp32abi_cmpd
80007e58   __arp32abi_cmplls
80007e7c   __arp32abi_cmpllu
80006744   __arp32abi_cvtdf
80006bac   __arp32abi_cvtfd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80006d2c   __arp32abi_fixdi
80007330   __arp32abi_fltid
800079c0   __arp32abi_fltud
800076c0   __arp32abi_isinf
80007600   __arp32abi_llshl
80007d48   __arp32abi_llshru
800040bc   __arp32abi_mpyd
80004ec4   __arp32abi_mpyll
80007e08   __arp32abi_negd
80007f54   __arp32abi_negll
80007cd8   __arp32abi_remull
80007bec   __arp32abi_strasgi
80007ddc   __arp32abi_subd
80007f2c   __arp32abi_subll
ffffffff   __binit__
ffffffff   __c_args__
00000108   _algo_fardata_size
0000035f   _algo_neardata_size
00002a08   _algo_text_size
80007b30   _args_main
800071e4   _auto_init
000004f0   _bam_fardata_size
000003d9   _bam_neardata_size
00003418   _bam_text_size
80006324   _buff_read
80007398   _c_int00
800078d0   _cleanup
810334a4   _cleanup_ptr
80006da8   _closefile
40027740   _ctypes_
80007660   _doflush
810334a8   _dtors_ptr
80000120   _dummy_handler
80004c08   _frcaddd
80003940   _frcdivd
80005160   _frcmpyd
810336e0   _ft_end
810334b4   _ftable
40054000   _imemha_memory
40074000   _imemhb_memory
40050000   _imemla_memory
40070000   _imemlb_memory
810336d0   _lock
80007e30   _mpyl
40027af4   _my_stack
8000800c   _nop
800030d0   _printfi
800072c4   _rd_ok
80007828   _renormd
80000100   _reset_handler
00000300   _rts_fardata_size
00000268   _rts_neardata_size
00006f14   _rts_text_size
80001100   _scanfi
40024000   _stack
000001f4   _starterware_fardata_size
00000000   _starterware_neardata_size
00000110   _starterware_text_size
80030000   _sys_memory
80008010   _system_pre_init
00005628   _text_size
810333f8   _tmpnams
810336d4   _unlock
80000000   _vec_table
40040000   _wmem_memory
80006864   _wrt_ok
80008004   abort
80006e24   atoi
8000fd28   bam_getMemPacket
800107d8   bam_mcheck
8000f914   bam_mem_alloc
800102b8   bam_mem_free
80010430   bam_minit
80010568   bam_releaseMemPacket
40027008   bam_stat_num_packets
ffffffff   binit
80006aa0   close
40027c80   edmaBase
810336e4   errno
8000787c   exit
80007d7c   fclose
80006ea0   fflush
80007f14   fgets
80007c28   fopen
80007170   fprintf
80005a54   fputc
80004930   fputs
8000501c   fread
80007f40   free
800068f4   fseek
80006984   ftell
8000351c   fwrite
81033920   gBAM_TI_dmaSoftIspAutoIncrementReadKernel
81033934   gBAM_TI_dmaSoftIspAutoIncrementWriteKernel
81033958   gBAM_TI_dmaSoftIspReadAutoIncrementKernelExecFunc
81033948   gBAM_TI_dmaSoftIspReadAutoIncrementKernelHelperFunc
81033970   gBAM_TI_dmaSoftIspWriteAutoIncrementKernelExecFunc
81033950   gBAM_TI_dmaSoftIspWriteAutoIncrementKernelHelperFunc
81033908   gBAM_TI_softIspExecFunc
81033900   gBAM_TI_softIspHelperFunc
810338ec   gBAM_TI_softIspKernel
81032f94   gBAM_memPrintfArr
81032830   gConfig_soft_isp
40027a4c   gDmaUtilsStateStruct
810339e8   gSoftIsp_TI_BAM_kernelDBdef
81032ee8   gTest_TI_profileSctm
40027ad8   gTest_TI_profileTsc
81030000   gsTokenMap_soft_isp
80007400   lseek
8000759c   ltoa
8000a4bc   main
80007a0c   malloc
81032ef8   memObj_DMEM
80005ce4   mem_alloc
80006620   mem_free
80007ea0   memccpy
80005b3c   memcpy
800061dc   memset
80007084   minit
80005968   open
80006cac   printf
8000b600   printparams
8000bdfc   profiler_end
8000d610   profiler_end_print
8000d5f8   profiler_getSP
8000d278   profiler_getStackDepth
8000cfb0   profiler_init
8000d558   profiler_initStack
8000d520   profiler_printStatus
8000d494   profiler_start
8000d3f8   profiler_testCaseInfo
80007970   rand
80007468   read
80007a58   readmsg
8000ce0c   readparamfile
80007ff8   remove
8000c9a8   report_printAppletInfo
80005648   setvbuf
80008014   softIspTest
8000aa30   soft_isp_ref_cn
80007b70   sprintf
80007dac   srand
80007d10   sscanf
800090f0   statCollectorControl
8000d208   statCollectorInit
800015f8   strtod
80003ef0   strtol
80001998   strtold
80001d34   strtoll
80004604   strtoul
80002e84   strtoull
40027ab4   test_module_cyles
80007aa0   unlink
8000c544   vcop_black_clamp_c_balance_cn
800120c8   vcop_black_clamp_c_balance_init
800126a0   vcop_black_clamp_c_balance_param_count
800125b0   vcop_black_clamp_c_balance_vloops
8000cafc   vcop_decompand_piecewise_linear_cn
80011e64   vcop_decompand_piecewise_linear_init
800126a8   vcop_decompand_piecewise_linear_param_count
80012428   vcop_decompand_piecewise_linear_vloops
800064f4   vcop_free
8000c3ac   vcop_gbce_interp_cn
800117a0   vcop_gbce_interp_init
800126b0   vcop_gbce_interp_param_count
80012378   vcop_gbce_interp_vloops
8000cc18   vcop_gbce_simple_cn
80011fc0   vcop_gbce_simple_init
800126b8   vcop_gbce_simple_param_count
80012614   vcop_gbce_simple_vloops
80007f94   vcop_malloc
80004aa0   vcop_memalign
80007778   vcop_minit
8000b2f0   vcop_rccc_to_cccc_cn
80010a54   vcop_rccc_to_cccc_init
800126c0   vcop_rccc_to_cccc_param_count
80011c58   vcop_rccc_to_cccc_vloops
8000d10c   vcop_soft_isp_extract_r_cn
800124d0   vcop_soft_isp_extract_r_init
800126d0   vcop_soft_isp_extract_r_param_count
80012684   vcop_soft_isp_extract_r_vloops
8000bb90   vcop_stats_collector_dense_cn
80011514   vcop_stats_collector_dense_init
800126c8   vcop_stats_collector_dense_param_count
800121c4   vcop_stats_collector_dense_vloops
80007254   vfprintf
80007c64   vsprintf
800074d0   write
80007ae8   writemsg


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000000   _starterware_neardata_size
00000001   __TI_args_main
00000001   __TI_exit
00000108   _algo_fardata_size
00000110   _starterware_text_size
000001f4   _starterware_fardata_size
00000268   _rts_neardata_size
00000300   _rts_fardata_size
0000035f   _algo_neardata_size
000003d9   _bam_neardata_size
000004f0   _bam_fardata_size
00002a08   _algo_text_size
00003000   __TI_STACK_SIZE
00003418   _bam_text_size
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
00005628   _text_size
00006f14   _rts_text_size
00007000   WMEM_SIZE
01000000   __TI_SYSMEM_SIZE
40020000   DMEM_SCRATCH
40024000   _stack
40027000   __TI_STACK_END
40027000   __TI_STATIC_BASE
40027008   bam_stat_num_packets
400273dc   SOFT_ISP_TI_VISION_FXNS
40027408   SOFT_ISP_TI_IRES
40027740   _ctypes_
40027a4c   gDmaUtilsStateStruct
40027ab4   test_module_cyles
40027ad8   gTest_TI_profileTsc
40027af4   _my_stack
40027b60   __CIOBUF_
40027c80   edmaBase
40040000   _wmem_memory
40050000   _imemla_memory
40054000   _imemha_memory
40070000   _imemlb_memory
40074000   _imemhb_memory
80000000   _vec_table
80000100   _reset_handler
80000120   _dummy_handler
80001100   _scanfi
800015f8   strtod
80001998   strtold
80001d34   strtoll
80002e84   strtoull
800030d0   _printfi
8000351c   fwrite
80003940   _frcdivd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80003ef0   strtol
800040bc   __arp32abi_mpyd
8000444c   __arp32abi_addd
80004604   strtoul
80004930   fputs
80004aa0   vcop_memalign
80004c08   _frcaddd
80004ec4   __arp32abi_mpyll
8000501c   fread
80005160   _frcmpyd
80005648   setvbuf
80005968   open
80005a54   fputc
80005b3c   memcpy
80005c18   __arp32abi_cmpd
80005ce4   mem_alloc
80005f20   HOSTlseek
80006088   HOSTrename
800061dc   memset
80006324   _buff_read
8000645c   HOSTopen
800064f4   vcop_free
80006620   mem_free
800066b4   HOSTread
80006744   __arp32abi_cvtdf
80006864   _wrt_ok
800068f4   fseek
80006984   ftell
80006a14   HOSTwrite
80006aa0   close
80006bac   __arp32abi_cvtfd
80006cac   printf
80006d2c   __arp32abi_fixdi
80006da8   _closefile
80006e24   atoi
80006ea0   fflush
80006f1c   HOSTunlink
80007084   minit
800070fc   HOSTclose
80007170   fprintf
800071e4   _auto_init
80007254   vfprintf
800072c4   _rd_ok
80007330   __arp32abi_fltid
80007398   _c_int00
80007400   lseek
80007468   read
800074d0   write
8000759c   ltoa
80007600   __arp32abi_llshl
80007660   _doflush
800076c0   __arp32abi_isinf
80007778   vcop_minit
80007828   _renormd
8000787c   exit
800078d0   _cleanup
80007970   rand
800079c0   __arp32abi_fltud
80007a0c   malloc
80007a58   readmsg
80007aa0   unlink
80007ae8   writemsg
80007b28   C$$IO$$
80007b30   _args_main
80007b70   sprintf
80007bec   __arp32abi_strasgi
80007c28   fopen
80007c64   vsprintf
80007ca0   __arp32abi_abort_msg
80007cd8   __arp32abi_remull
80007d10   sscanf
80007d48   __arp32abi_llshru
80007d7c   fclose
80007dac   srand
80007ddc   __arp32abi_subd
80007e08   __arp32abi_negd
80007e30   _mpyl
80007e58   __arp32abi_cmplls
80007e7c   __arp32abi_cmpllu
80007ea0   memccpy
80007ec0   __arp32abi_addll
80007f14   fgets
80007f2c   __arp32abi_subll
80007f40   free
80007f54   __arp32abi_negll
80007f94   vcop_malloc
80007ff8   remove
80008004   C$$EXIT
80008004   abort
8000800c   _nop
80008010   _system_pre_init
80008014   softIspTest
800090f0   statCollectorControl
80009e7c   EDMA_UTILS_autoIncrement_configure
8000a4bc   main
8000aa30   soft_isp_ref_cn
8000b2f0   vcop_rccc_to_cccc_cn
8000b600   printparams
8000b908   EDMA_UTILS_autoIncrement_update
8000bb90   vcop_stats_collector_dense_cn
8000bdfc   profiler_end
8000c030   DMA_funcs_hardwareRegSetup
8000c1f4   EDMA_UTILS_autoIncrement_triggerOutChannel
8000c3ac   vcop_gbce_interp_cn
8000c544   vcop_black_clamp_c_balance_cn
8000c6cc   DMA_resourceAllocator_allocateResources
8000c844   EDMA_UTILS_autoIncrement_triggerInChannel
8000c9a8   report_printAppletInfo
8000cafc   vcop_decompand_piecewise_linear_cn
8000cc18   vcop_gbce_simple_cn
8000cd24   EDMA_UTILS_autoIncrement_init
8000ce0c   readparamfile
8000cee4   DMA_utils_updateStateStruct
8000cfb0   profiler_init
8000d074   EDMA_UTILS_memcpy2D
8000d10c   vcop_soft_isp_extract_r_cn
8000d194   DMA_funcs_writeTransferParams
8000d208   statCollectorInit
8000d278   profiler_getStackDepth
8000d2e4   EDMA_UTILS_autoIncrement_waitOutChannel
8000d34c   TI_GetMemoryChunk
8000d3a4   EDMA_UTILS_autoIncrement_waitInChannel
8000d3f8   profiler_testCaseInfo
8000d448   EDMA_UTILS_globalReset
8000d494   profiler_start
8000d520   profiler_printStatus
8000d558   profiler_initStack
8000d588   DMA_resourceAllocator_initResources
8000d5b4   TEST_PRINTF
8000d5d8   DMA_utils_resetStateStruct
8000d5f8   profiler_getSP
8000d610   profiler_end_print
8000d620   DMA_resourceAllocator_setEdma3RmHandle
8000d62c   TI_CreateMemoryHandle
8000d638   EDMA3LLD_SUPPORT_requestResources
8000d63c   BAM_initGraph
8000efbc   BAM_optimizeGraph
8000f748   BAM_createGraph
8000f914   bam_mem_alloc
8000fa98   BAM_updateNodes
8000fbf0   BAM_process
8000fd28   bam_getMemPacket
8000ff80   BAM_DMA_AUTOINCREMENT_setMemRecFunc
8001009c   BAM_fillKernelInfo
800101ac   BAM_getGraphMemSize
800102b8   bam_mem_free
80010384   BAM_copyIntMemRec2ExtMem
80010430   bam_minit
800104d0   BAM_ARP32_computeWrapper
80010568   bam_releaseMemPacket
800105f8   BAM_copyNodeList
80010684   BAM_initGraphInstance
800106f8   BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel
80010768   BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel
800107d8   bam_mcheck
800108a4   BAM_controlNode
800108f8   BAM_DMA_AUTOINCREMENT_frameInitInChannel
80010944   BAM_initKernelDB
80010990   BAM_DMA_AUTOINCREMENT_frameInitOutChannel
800109d4   BAM_getMemPacket
80010a0c   BAM_printf
80010a50   BAM_dummyKernelFunc
80010a54   vcop_rccc_to_cccc_init
80011514   vcop_stats_collector_dense_init
800117a0   vcop_gbce_interp_init
80011c58   vcop_rccc_to_cccc_vloops
80011e64   vcop_decompand_piecewise_linear_init
80011fc0   vcop_gbce_simple_init
800120c8   vcop_black_clamp_c_balance_init
800121c4   vcop_stats_collector_dense_vloops
80012378   vcop_gbce_interp_vloops
80012428   vcop_decompand_piecewise_linear_vloops
800124d0   vcop_soft_isp_extract_r_init
800125b0   vcop_black_clamp_c_balance_vloops
80012614   vcop_gbce_simple_vloops
80012684   vcop_soft_isp_extract_r_vloops
800126a0   vcop_black_clamp_c_balance_param_count
800126a8   vcop_decompand_piecewise_linear_param_count
800126b0   vcop_gbce_interp_param_count
800126b8   vcop_gbce_simple_param_count
800126c0   vcop_rccc_to_cccc_param_count
800126c8   vcop_stats_collector_dense_param_count
800126d0   vcop_soft_isp_extract_r_param_count
8001295c   SOFT_ISP_TI_graphCreate
80012b10   SOFT_ISP_TI_process
80012c9c   BAM_DMA_SOFT_ISP_AUTOINCREMENT_getMemRecFunc
80012e0c   SOFT_ISP_TI_init
80012f6c   SOFT_ISP_TI_dmaControl
800130c4   SOFT_ISP_TI_control
800131c8   SOFT_ISP_TI_alloc
80013284   SOFT_ISP_TI_graphControl
800132fc   SOFT_ISP_TI_activate
80013358   SOFT_ISP_TI_deactivate
80013404   SOFT_ISP_TI_execute
80013424   SOFT_ISP_TI_getGraphMemReq
80013440   SOFT_ISP_TI_free
80013458   SOFT_ISP_TI_numAlloc
8001345c   EVE_SCTM_CounterConfig
800134a4   EVE_SCTM_CounterTimerEnable
800134d0   EVE_SCTM_InpEvtSelect
800134fc   EVE_SCTM_SamplingSelect
80013528   EVE_SCTM_CounterRead
80013540   EVE_SCTM_OverflowCheck
80013558   EVE_SCTM_Enable
80030000   _sys_memory
81030000   gsTokenMap_soft_isp
81032830   gConfig_soft_isp
81032ee8   gTest_TI_profileSctm
81032ef8   memObj_DMEM
81032f94   gBAM_memPrintfArr
810333f8   _tmpnams
810334a4   _cleanup_ptr
810334a8   _dtors_ptr
810334b4   _ftable
810336d0   _lock
810336d4   _unlock
810336e0   _ft_end
810336e4   errno
810336f8   CRED_instVirtAddr
810338ec   gBAM_TI_softIspKernel
81033900   gBAM_TI_softIspHelperFunc
81033908   gBAM_TI_softIspExecFunc
81033920   gBAM_TI_dmaSoftIspAutoIncrementReadKernel
81033934   gBAM_TI_dmaSoftIspAutoIncrementWriteKernel
81033948   gBAM_TI_dmaSoftIspReadAutoIncrementKernelHelperFunc
81033950   gBAM_TI_dmaSoftIspWriteAutoIncrementKernelHelperFunc
81033958   gBAM_TI_dmaSoftIspReadAutoIncrementKernelExecFunc
81033970   gBAM_TI_dmaSoftIspWriteAutoIncrementKernelExecFunc
810339e8   gSoftIsp_TI_BAM_kernelDBdef
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit

[290 symbols]
