******************************************************************************
                   ARP32 Linker PC v1.0.7                      
******************************************************************************
>> Linked Mon Jun 25 22:15:53 2018

OUTPUT FILE NAME:   <.\elf_out\test_census.eve.out>
ENTRY POINT SYMBOL: "_reset_handler"  address: 80000100


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  VECMEM                80000000   00000100  00000028  000000d8  RWIX
  CMDMEM                80000100   00001000  00000028  00000fd8  RWIX
  EXTMEM                80001100   00020000  000105f4  0000fa0c  RWIX

PAGE 1:
  DATMEM                40020000   00008000  00006923  000016dd  RWIX
  WMEM                  40040000   00007fe0  00007d00  000002e0  RWIX
  IMEMLA                40050000   00004000  00004000  00000000  RWIX
  IMEMHA                40054000   00004000  00004000  00000000  RWIX
  IMEMLB                40070000   00004000  00004000  00000000  RWIX
  IMEMHB                40074000   00004000  00004000  00000000  RWIX
  L3MEM                 40300000   00100000  00000000  00100000  RWIX
  GEM0_L2_MEM           40800000   00008000  00000000  00008000  RWIX
  EXTDMEM               80030000   02000000  00805192  017fae6e  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.cinit     1    40020000    00000000     UNINITIALIZED

.init_array 
*          1    40020000    00000000     UNINITIALIZED

.intvecs   0    80000000    00000028     
                  80000000    00000028     boot_arp32.obj (.intvecs)

.inthandler 
*          0    80000100    00000028     
                  80000100    00000028     boot_arp32.obj (.inthandler)

.rts_text 
*          0    80001100    00006f14     
                  80001100    000004f8     rtsarp32_v200.lib : _scanfi.obj (.text:_scanfi)
                  800015f8    000003a0                       : strtod.obj (.text:strtod)
                  80001998    0000039c                       : strtold.obj (.text:strtold)
                  80001d34    000002d8                       : strtoll.obj (.text:strtoll)
                  8000200c    000002a0                       : _printfi.obj (.text:_setfield)
                  800022ac    00000268                       : _scanfi.obj (.text:_sproc_int)
                  80002514    00000260                       : _scanfi.obj (.text:_sset_arg)
                  80002774    0000025c                       : _printfi.obj (.text:_pproc_fge)
                  800029d0    0000025c                       : _printfi.obj (.text:ecvt)
                  80002c2c    00000258                       : _printfi.obj (.text:fcvt)
                  80002e84    0000024c                       : strtoull.obj (.text:strtoull)
                  800030d0    0000022c                       : _printfi.obj (.text:_printfi)
                  800032fc    00000220                       : _printfi.obj (.text:_pconv_e)
                  8000351c    0000021c                       : fwrite.obj (.text:fwrite)
                  80003738    00000208                       : _printfi.obj (.text:_getarg_diouxp)
                  80003940    00000200                       : frcdivd.obj (.text:_frcdivd)
                  80003b40    000001e4                       : divd.obj (.text:__arp32abi_divd)
                  80003d24    000001cc                       : imath64.obj (.text:__arp32abi_divull)
                  80003ef0    000001cc                       : strtol.obj (.text:strtol)
                  800040bc    000001c8                       : mpyd.obj (.text:__arp32abi_mpyd)
                  80004284    000001c8                       : fgets.obj (.text:_dofgets)
                  8000444c    000001b8                       : addd.obj (.text:__arp32abi_addd)
                  80004604    000001a0                       : strtoul.obj (.text:strtoul)
                  800047a4    0000018c                       : _printfi.obj (.text:_pproc_diouxp)
                  80004930    00000170                       : fputs.obj (.text:fputs)
                  80004aa0    00000168                       : vcop_memory.obj (.text:vcop_memalign)
                  80004c08    00000160                       : frcaddd.obj (.text:_frcaddd)
                  80004d68    0000015c                       : _scanfi.obj (.text:_sproc_float)
                  80004ec4    00000158                       : llmpy.obj (.text:__arp32abi_mpyll)
                  8000501c    00000144                       : fread.obj (.text:fread)
                  80005160    00000140                       : frcmpyd.obj (.text:_frcmpyd)
                  800052a0    00000140                       : _scanfi.obj (.text:_sget_conv)
                  800053e0    0000013c                       : _printfi.obj (.text:_pproc_fwp)
                  8000551c    0000012c                       : fopen.obj (.text:_openfile)
                  80005648    00000118                       : setvbuf.obj (.text:setvbuf)
                  80005760    00000114                       : _printfi.obj (.text:_pconv_g)
                  80005874    000000f4                       : _printfi.obj (.text:_pproc_str)
                  80005968    000000ec                       : lowlev.obj (.text:open)
                  80005a54    000000e8                       : fputc.obj (.text:fputc)
                  80005b3c    000000dc                       : memcpy.obj (.text:memcpy)
                  80005c18    000000cc                       : cmpd.obj (.text:__arp32abi_cmpd)
                  80005ce4    000000c4                       : memory.obj (.text:mem_alloc)
                  80005da8    000000bc                       : _printfi.obj (.text:_ltostr)
                  80005e64    000000bc                       : _scanfi.obj (.text:_sproc_str)
                  80005f20    000000b4                       : trgdrv.obj (.text:HOSTlseek)
                  80005fd4    000000b4                       : _scanfi.obj (.text:_sproc_lb)
                  80006088    000000ac                       : trgdrv.obj (.text:HOSTrename)
                  80006134    000000a8                       : fopen.obj (.text:_search_fp)
                  800061dc    000000a8                       : memset.obj (.text:memset)
                  80006284    000000a0                       : lowlev.obj (.text:getdevice)
                  80006324    0000009c                       : _bufread.obj (.text:_buff_read)
                  800063c0    0000009c                       : _printfi.obj (.text:_mcpy)
                  8000645c    00000098                       : trgdrv.obj (.text:HOSTopen)
                  800064f4    00000098                       : vcop_memory.obj (.text:vcop_free)
                  8000658c    00000094                       : sscanf.obj (.text:_chkmbc)
                  80006620    00000094                       : memory.obj (.text:mem_free)
                  800066b4    00000090                       : trgdrv.obj (.text:HOSTread)
                  80006744    00000090                       : cvtdf.obj (.text:__arp32abi_cvtdf)
                  800067d4    00000090                       : _printfi.obj (.text:_pproc_fflags)
                  80006864    00000090                       : _io_perm.obj (.text:_wrt_ok)
                  800068f4    00000090                       : fseek.obj (.text:fseek)
                  80006984    00000090                       : ftell.obj (.text:ftell)
                  80006a14    0000008c                       : trgdrv.obj (.text:HOSTwrite)
                  80006aa0    00000088                       : lowlev.obj (.text:close)
                  80006b28    00000084                       : _printfi.obj (.text:_ecpy)
                  80006bac    00000080                       : cvtfd.obj (.text:__arp32abi_cvtfd)
                  80006c2c    00000080                       : _scanfi.obj (.text:_sget_scanset)
                  80006cac    00000080                       : printf.obj (.text:printf)
                  80006d2c    0000007c                       : fixdi.obj (.text:__arp32abi_fixdi)
                  80006da8    0000007c                       : fclose.obj (.text:_closefile)
                  80006e24    0000007c                       : atoi.obj (.text:atoi)
                  80006ea0    0000007c                       : fflush.obj (.text:fflush)
                  80006f1c    00000078                       : trgdrv.obj (.text:HOSTunlink)
                  80006f94    00000078                       : _printfi.obj (.text:_div)
                  8000700c    00000078                       : _printfi.obj (.text:_pconv_f)
                  80007084    00000078                       : memory.obj (.text:minit)
                  800070fc    00000074                       : trgdrv.obj (.text:HOSTclose)
                  80007170    00000074                       : fprintf.obj (.text:fprintf)
                  800071e4    00000070                       : autoinit.obj (.text:_auto_init)
                  80007254    00000070                       : vfprintf.obj (.text:vfprintf)
                  800072c4    0000006c                       : _io_perm.obj (.text:_rd_ok)
                  80007330    00000068                       : fltid.obj (.text:__arp32abi_fltid)
                  80007398    00000068                       : boot.obj (.text:_c_int00)
                  80007400    00000068                       : lowlev.obj (.text:lseek)
                  80007468    00000068                       : lowlev.obj (.text:read)
                  800074d0    00000068                       : lowlev.obj (.text:write)
                  80007538    00000064                       : imath64.obj (.text:_subcull)
                  8000759c    00000064                       : ltoa.obj (.text:ltoa)
                  80007600    00000060                       : llshift.obj (.text:__arp32abi_llshl)
                  80007660    00000060                       : fflush.obj (.text:_doflush)
                  800076c0    0000005c                       : isinf.obj (.text:__arp32abi_isinf)
                  8000771c    0000005c                       : lowlev.obj (.text:tabinit)
                  80007778    0000005c                       : vcop_memory.obj (.text:vcop_minit)
                  800077d4    00000054                       : _printfi.obj (.text:_fcpy)
                  80007828    00000054                       : renormd.obj (.text:_renormd)
                  8000787c    00000054                       : exit.obj (.text:exit)
                  800078d0    00000050                       : fopen.obj (.text:_cleanup)
                  80007920    00000050                       : lowlev.obj (.text:finddevice)
                  80007970    00000050                       : rand.obj (.text:rand)
                  800079c0    0000004c                       : fltud.obj (.text:__arp32abi_fltud)
                  80007a0c    0000004c                       : memory.obj (.text:malloc)
                  80007a58    00000048                       : trgmsg.obj (.text:readmsg)
                  80007aa0    00000048                       : lowlev.obj (.text:unlink)
                  80007ae8    00000048                       : trgmsg.obj (.text:writemsg)
                  80007b30    00000040                       : args_main.obj (.text:_args_main)
                  80007b70    00000040                       : sprintf.obj (.text:sprintf)
                  80007bb0    0000003c                       : _printfi.obj (.text:__arp32abi_isnan)
                  80007bec    0000003c                       : strasgi_c.obj (.text:__arp32abi_strasgi)
                  80007c28    0000003c                       : fopen.obj (.text:fopen)
                  80007c64    0000003c                       : vsprintf.obj (.text:vsprintf)
                  80007ca0    00000038                       : assert.obj (.text:__arp32abi_abort_msg)
                  80007cd8    00000038                       : imath64.obj (.text:__arp32abi_remull)
                  80007d10    00000038                       : sscanf.obj (.text:sscanf)
                  80007d48    00000034                       : llshift.obj (.text:__arp32abi_llshru)
                  80007d7c    00000030                       : fclose.obj (.text:fclose)
                  80007dac    00000030                       : rand.obj (.text:srand)
                  80007ddc    0000002c                       : subd.obj (.text:__arp32abi_subd)
                  80007e08    00000028                       : negd.obj (.text:__arp32abi_negd)
                  80007e30    00000028                       : mult.obj (.text:_mpyl)
                  80007e58    00000024                       : llcmp.obj (.text:__arp32abi_cmplls)
                  80007e7c    00000024                       : llcmp.obj (.text:__arp32abi_cmpllu)
                  80007ea0    00000020                       : memccpy.obj (.text:memccpy)
                  80007ec0    0000001c                       : lladdsub.obj (.text:__arp32abi_addll)
                  80007edc    0000001c                       : sprintf.obj (.text:_outs)
                  80007ef8    0000001c                       : vsprintf.obj (.text:_outs)
                  80007f14    00000018                       : fgets.obj (.text:fgets)
                  80007f2c    00000014                       : lladdsub.obj (.text:__arp32abi_subll)
                  80007f40    00000014                       : memory.obj (.text:free)
                  80007f54    00000010                       : lladdsub.obj (.text:__arp32abi_negll)
                  80007f64    00000010                       : sscanf.obj (.text:_inpchar)
                  80007f74    00000010                       : sprintf.obj (.text:_outc)
                  80007f84    00000010                       : vsprintf.obj (.text:_outc)
                  80007f94    00000010                       : vcop_memory.obj (.text:vcop_malloc)
                  80007fa4    0000000c                       : fprintf.obj (.text:_outc)
                  80007fb0    0000000c                       : printf.obj (.text:_outc)
                  80007fbc    0000000c                       : vfprintf.obj (.text:_outc)
                  80007fc8    0000000c                       : fprintf.obj (.text:_outs)
                  80007fd4    0000000c                       : printf.obj (.text:_outs)
                  80007fe0    0000000c                       : vfprintf.obj (.text:_outs)
                  80007fec    0000000c                       : sscanf.obj (.text:_uninpchar)
                  80007ff8    0000000c                       : remove.obj (.text:remove)
                  80008004    00000008                       : exit.obj (.text:abort)
                  8000800c    00000004                       : _lock.obj (.text:_nop)
                  80008010    00000004                       : pre_init.obj (.text:_system_pre_init)

.text      0    80008014    000043b0     
                  80008014    00000d8c     ti_stats_collector.obj (.text:statCollectorControl)
                  80008da0    00000b50     census_tb.obj (.text:test_census)
                  800098f0    00000640     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_configure)
                  80009f30    000003e8     configparser.obj (.text:ParseContent)
                  8000a318    00000308     configparser.obj (.text:printparams)
                  8000a620    00000288     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_update)
                  8000a8a8    00000270     census_tb.obj (.text:main)
                  8000ab18    00000234     eve_profile.obj (.text:profiler_end)
                  8000ad4c    000001c4     dmautils.lib : dma_funcs.obj (.text:DMA_funcs_hardwareRegSetup)
                  8000af10    000001b8                  : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerOutChannel)
                  8000b0c8    0000017c     libevenatckernels.eve.lib : vcop_census_16bits_cn.obj (.text:vcop_census_16bits_cn)
                  8000b244    00000178     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_allocateResources)
                  8000b3bc    00000164                  : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_triggerInChannel)
                  8000b520    00000164     libevenatckernels.eve.lib : vcop_census_8bits_cn.obj (.text:vcop_census_8bits_cn)
                  8000b684    00000160     libevekernels.eve.lib : bam_natcCensus_16bits_helper_funcs.obj (.text:BAM_natcCensus_16bits_getMemRecFunc)
                  8000b7e4    0000015c                           : bam_natcCensus_8bits_helper_funcs.obj (.text:BAM_natcCensus_8bits_getMemRecFunc)
                  8000b940    00000154     report_utils.obj (.text:report_printAppletInfo)
                  8000ba94    000000e8     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_init)
                  8000bb7c    000000d8     configparser.obj (.text:readparamfile)
                  8000bc54    000000cc     dmautils.lib : edma_utils_state.obj (.text:DMA_utils_updateStateStruct)
                  8000bd20    000000c4     eve_profile.obj (.text:profiler_init)
                  8000bde4    00000098     dmautils.lib : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D)
                  8000be7c    00000074                  : dma_funcs.obj (.text:DMA_funcs_writeTransferParams)
                  8000bef0    00000070     ti_stats_collector.obj (.text:statCollectorInit)
                  8000bf60    0000006c     eve_profile.obj (.text:profiler_getStackDepth)
                  8000bfcc    00000068     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitOutChannel)
                  8000c034    00000058     ti_mem_manager.obj (.text:TI_GetMemoryChunk)
                  8000c08c    00000054     dmautils.lib : edma_utils_autoincrement.obj (.text:EDMA_UTILS_autoIncrement_waitInChannel)
                  8000c0e0    00000050     eve_profile.obj (.text:profiler_testCaseInfo)
                  8000c130    0000004c     dmautils.lib : edma_utils.obj (.text:EDMA_UTILS_globalReset)
                  8000c17c    00000048     eve_profile.obj (.text:profiler_start)
                  8000c1c4    00000044     libevekernels.eve.lib : bam_natcCensus_16bits_exec_funcs.obj (.text:BAM_natcCensus_16bits_compute)
                  8000c208    00000044                           : bam_natcCensus_8bits_exec_funcs.obj (.text:BAM_natcCensus_8bits_compute)
                  8000c24c    00000044     dmautils.lib : edma_utils_memcpy.obj (.text:EDMA_UTILS_memcpy2D_init)
                  8000c290    00000038     eve_profile.obj (.text:profiler_printStatus)
                  8000c2c8    00000030     eve_profile.obj (.text:profiler_initStack)
                  8000c2f8    0000002c     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_initResources)
                  8000c324    00000024     eve_profile.obj (.text:TEST_PRINTF)
                  8000c348    00000020     dmautils.lib : edma_utils_state.obj (.text:DMA_utils_resetStateStruct)
                  8000c368    00000018     eve_profile.obj (.text:profiler_getSP)
                  8000c380    00000010     eve_profile.obj (.text:profiler_end_print)
                  8000c390    0000000c     dmautils.lib : dma_resource_allocator.obj (.text:DMA_resourceAllocator_setEdma3RmHandle)
                  8000c39c    0000000c                  : edma_utils.obj (.text:EDMA_UTILS_setEdma3RmHandle)
                  8000c3a8    0000000c     ti_mem_manager.obj (.text:TI_CreateMemoryHandle)
                  8000c3b4    0000000c     ti_mem_manager.obj (.text:TI_ResetMemoryHandle)
                  8000c3c0    00000004     dmautils.lib : edma3lld_support.obj (.text:EDMA3LLD_SUPPORT_requestResources)

.bam_text 
*          0    8000c3c4    00003624     
                  8000c3c4    00000820     algframework.lib : bam_construct_int.obj (.text:BAM_initGraph)
                  8000cbe4    00000770                      : bam_construct_int.obj (.text:BAM_autoAllocMemRec)
                  8000d354    00000574                      : bam_execute.obj (.text:BAM_execute)
                  8000d8c8    0000047c                      : bam_construct_int.obj (.text:BAM_finaliseGraph)
                  8000dd44    00000414                      : bam_construct_int.obj (.text:BAM_optimizeGraph)
                  8000e158    00000378                      : bam_construct_int.obj (.text:BAM_getMemRec)
                  8000e4d0    000001cc                      : bam_construct.obj (.text:BAM_createGraph)
                  8000e69c    00000184                      : bam_memory.obj (.text:bam_mem_alloc)
                  8000e820    00000158                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_getMemRecFunc)
                  8000e978    00000158                      : bam_construct_int.obj (.text:BAM_updateNodes)
                  8000ead0    00000138                      : bam_execute.obj (.text:BAM_process)
                  8000ec08    00000138                      : bam_memory.obj (.text:bam_getMemPacket)
                  8000ed40    00000120                      : bam_construct_int.obj (.text:BAM_setNodeMemRec)
                  8000ee60    0000011c                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_setMemRecFunc)
                  8000ef7c    00000110                      : bam_construct_int.obj (.text:BAM_fillKernelInfo)
                  8000f08c    0000010c                      : bam_construct_int.obj (.text:BAM_getGraphMemSize)
                  8000f198    000000cc                      : bam_memory.obj (.text:bam_mem_free)
                  8000f264    000000b4                      : bam_execute.obj (.text:BAM_activateGraph)
                  8000f318    000000ac                      : bam_construct_int.obj (.text:BAM_copyIntMemRec2ExtMem)
                  8000f3c4    000000a0                      : bam_memory.obj (.text:bam_minit)
                  8000f464    00000098                      : bam_execute.obj (.text:BAM_ARP32_computeWrapper)
                  8000f4fc    00000090                      : bam_memory.obj (.text:bam_releaseMemPacket)
                  8000f58c    0000008c                      : bam_construct_int.obj (.text:BAM_copyNodeList)
                  8000f618    00000074                      : bam_execute.obj (.text:BAM_initGraphInstance)
                  8000f68c    00000070                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel)
                  8000f6fc    00000070                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel)
                  8000f76c    00000068                      : bam_memory.obj (.text:bam_mcheck)
                  8000f7d4    00000064                      : bam_execute.obj (.text:BAM_DSP_computeWrapper)
                  8000f838    00000054                      : bam_execute.obj (.text:BAM_controlNode)
                  8000f88c    0000004c                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitInChannel)
                  8000f8d8    0000004c                      : bam_construct.obj (.text:BAM_initKernelDB)
                  8000f924    00000044                      : bam_dma_autoincrement_node.obj (.text:BAM_DMA_AUTOINCREMENT_frameInitOutChannel)
                  8000f968    00000038                      : bam_construct_int.obj (.text:BAM_getMemPacket)
                  8000f9a0    0000002c                      : bam_utils.obj (.text:BAM_printf)
                  8000f9cc    00000018                      : bam_execute.obj (.text:VCOP_SET_MEM_VIEW)
                  8000f9e4    00000004                      : bam_execute.obj (.text:BAM_dummyKernelFunc)

.algo_text 
*          0    8000f9e8    00001bfc     
                  8000f9e8    0000047c     libevekernels.eve.lib : vcop_census_8bits_kernel.obj (.text:vcop_census_8bits_init)
                  8000fe64    00000200                           : init_census_8bits_params.obj (.text:init_census_8bits_params)
                  80010064    0000015c                           : bam_census_8bits_helper_funcs.obj (.text:BAM_Census_8bits_getMemRecFunc)
                  800101c0    0000010c                           : bam_census_8bits_exec_funcs.obj (.text:Bam_Census_8bits_initFrame)
                  800102cc    000000b4                           : vcop_census_8bits_kernel.obj (.text:vcop_census_8bits_vloops)
                  80010380    00000008                           : vcop_census_8bits_kernel.obj (.text:vcop_census_8bits_param_count)
                  80010388    000004c8                           : vcop_census_16bits_kernel.obj (.text:vcop_census_16bits_init)
                  80010850    00000200                           : init_census_16bits_params.obj (.text:init_census_16bits_params)
                  80010a50    00000160                           : bam_census_16bits_helper_funcs.obj (.text:BAM_Census_16bits_getMemRecFunc)
                  80010bb0    00000108                           : bam_census_16bits_exec_funcs.obj (.text:Bam_Census_16bits_initFrame)
                  80010cb8    000000c4                           : vcop_census_16bits_kernel.obj (.text:vcop_census_16bits_vloops)
                  80010d7c    00000008                           : vcop_census_16bits_kernel.obj (.text:vcop_census_16bits_param_count)
                  80010d84    000001b8     libeveCensus.eve.lib : census_graph.obj (.text:CENSUS_TI_initArgs)
                  80010f3c    00000190                          : census_graph.obj (.text:CENSUS_TI_graphCreate)
                  800110cc    00000128                          : census_graph.obj (.text:CENSUS_TI_dmaControl)
                  800111f4    0000010c                          : census_alg.obj (.text:CENSUS_TI_process)
                  80011300    00000104                          : census_alg.obj (.text:CENSUS_TI_init)
                  80011404    000000bc                          : census_alg.obj (.text:CENSUS_TI_alloc)
                  800114c0    0000005c                          : census_alg.obj (.text:CENSUS_TI_activate)
                  8001151c    00000050                          : census_alg.obj (.text:CENSUS_TI_deactivate)
                  8001156c    00000020                          : census_alg.obj (.text:CENSUS_TI_control)
                  8001158c    00000020                          : census_graph.obj (.text:CENSUS_TI_execute)
                  800115ac    0000001c                          : census_graph.obj (.text:CENSUS_TI_getGraphMemReq)
                  800115c8    00000018                          : census_alg.obj (.text:CENSUS_TI_free)
                  800115e0    00000004                          : census_alg.obj (.text:CENSUS_TI_numAlloc)

.starterware_text 
*          0    800115e4    00000110     
                  800115e4    00000048     libevestarterware_eve.lib : sctm.obj (.text:EVE_SCTM_CounterConfig)
                  8001162c    0000002c                               : sctm.obj (.text:EVE_SCTM_CounterTimerEnable)
                  80011658    0000002c                               : sctm.obj (.text:EVE_SCTM_InpEvtSelect)
                  80011684    0000002c                               : sctm.obj (.text:EVE_SCTM_SamplingSelect)
                  800116b0    00000018                               : sctm.obj (.text:EVE_SCTM_CounterRead)
                  800116c8    00000018                               : sctm.obj (.text:EVE_SCTM_OverflowCheck)
                  800116e0    00000014                               : sctm.obj (.text:EVE_SCTM_Enable)

.algo_neardata 
*          1    40020000    00000000     UNINITIALIZED

.starterware_neardata 
*          1    40020000    00000000     UNINITIALIZED

.stack     1    40020000    00004000     UNINITIALIZED
                  40020000    00000004     rtsarp32_v200.lib : boot.obj (.stack)
                  40020004    00003ffc     --HOLE--

.dmemSect 
*          1    40024000    00002000     UNINITIALIZED
                  40024000    00002000     census_tb.obj (.dmemSect)

.bam_neardata 
*          1    40026000    000003bd     
                  40026000    00000008     algframework.lib : bam_construct_int.obj (.rodata)
                  40026008    00000004                      : bam_execute.obj (.rodata)
                  4002600c    00000004                      : bam_memory.obj (.rodata)
                  40026010    000001f8                      : bam_dma_autoincrement_node.obj (.const:.string)
                  40026208    00000121                      : bam_construct_int.obj (.const:.string)
                  40026329    00000090                      : bam_execute.obj (.const:.string)
                  400263b9    00000001     --HOLE-- [fill = 0]
                  400263ba    00000003                      : bam_construct_int.obj (.const:.string:$P$T0$1)

.rts_neardata 
*          1    400263c0    00000266     
                  400263c0    00000101     rtsarp32_v200.lib : ctype.obj (.const:.string:_ctypes_)
                  400264c1    00000003                       : assert.obj (.const:.string)
                  400264c4    00000050                       : strtod.obj (.const:digits)
                  40026514    00000050                       : strtold.obj (.const:digits)
                  40026564    00000048                       : strtod.obj (.const:powerof10)
                  400265ac    00000048                       : strtold.obj (.const:powerof10)
                  400265f4    00000023                       : _printfi.obj (.const:.string)
                  40026617    00000001     --HOLE-- [fill = 0]
                  40026618    00000007                       : _scanfi.obj (.const:.string:flit$1)
                  4002661f    00000001     --HOLE-- [fill = 0]
                  40026620    00000006                       : _scanfi.obj (.const:.string:barr$2)

.bss       1    40026628    00000168     UNINITIALIZED
                  40026628    000000a8     dmautils.lib : dma_resource_allocator.obj (.bss)
                  400266d0    00000060                  : edma_utils_state.obj (.bss)
                  40026730    00000048     eve_profile.obj (.bss)
                  40026778    00000014     algframework.lib : bam_memory.obj (.bss)
                  4002678c    00000004     census_config.obj (.bss)

.data      1    40026790    00000030     
                  40026790    00000020     boot_arp32.obj (.data)
                  400267b0    00000005     algframework.lib : bam_memory.obj (.data)
                  400267b5    00000003     --HOLE-- [fill = 0]
                  400267b8    00000004     dmautils.lib : dma_resource_allocator.obj (.data)
                  400267bc    00000004     eve_profile.obj (.data)

.rodata    1    400267c0    00000044     
                  400267c0    00000028     ti_stats_collector.obj (.rodata)
                  400267e8    00000008     census_tb.obj (.rodata)
                  400267f0    00000008     dmautils.lib : edma_utils_autoincrement.obj (.rodata)
                  400267f8    00000008     eve_profile.obj (.rodata)
                  40026800    00000004     dmautils.lib : edma_utils_memcpy.obj (.rodata)

.cio       1    40026804    00000120     UNINITIALIZED
                  40026804    00000120     rtsarp32_v200.lib : trgmsg.obj (.cio)

.edma_utils_lib_fardata 
*          1    40026924    00000004     
                  40026924    00000004     dmautils.lib : edma_utils.obj (.const:edmaBase)

.wmem      1    40040000    00007d00     UNINITIALIZED
                  40040000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.wmem)
                  40040008    00007cf8     --HOLE--

.imemla    1    40050000    00004000     UNINITIALIZED
                  40050000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemla)
                  40050008    00003ff8     --HOLE--

.imemha    1    40054000    00004000     UNINITIALIZED
                  40054000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemha)
                  40054008    00003ff8     --HOLE--

.imemlb    1    40070000    00004000     UNINITIALIZED
                  40070000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemlb)
                  40070008    00003ff8     --HOLE--

.imemhb    1    40074000    00004000     UNINITIALIZED
                  40074000    00000008     rtsarp32_v200.lib : vcop_memory.obj (.imemhb)
                  40074008    00003ff8     --HOLE--

.sysmem    1    80030000    00800000     UNINITIALIZED
                  80030000    00000008     rtsarp32_v200.lib : memory.obj (.sysmem)
                  80030008    007ffff8     --HOLE--

.far       1    80830000    00001d38     UNINITIALIZED
                  80830000    00001ce0     census_config.obj (.far)
                  80831ce0    00000028     ti_stats_collector.obj (.far)
                  80831d08    00000020     eve_profile.obj (.far)
                  80831d28    00000010     census_tb.obj (.far)

.fardata   1    80831d38    00001934     
                  80831d38    00001800     census_config.obj (.fardata:gsTokenMap_census)
                  80833538    00000060     libeveCensus.eve.lib : census_graph.obj (.fardata:bamKernelExecFuncDB)
                  80833598    00000060                          : census_graph.obj (.fardata:bamKernelHostDB)
                  808335f8    0000001c     libevekernels.eve.lib : bam_natcCensus_16bits_helper_funcs.obj (.fardata)
                  80833614    0000001c                           : bam_natcCensus_8bits_helper_funcs.obj (.fardata)
                  80833630    00000018                           : bam_natcCensus_16bits_exec_funcs.obj (.fardata)
                  80833648    00000018                           : bam_natcCensus_8bits_exec_funcs.obj (.fardata)
                  80833660    0000000c     libeveCensus.eve.lib : census_graph.obj (.fardata)

.const     1    8083366c    00001072     
                  8083366c    0000041b     census_tb.obj (.const:.string)
                  80833a87    000003d2     eve_profile.obj (.const:.string)
                  80833e59    00000256     configparser.obj (.const:.string)
                  808340af    000001df     libeveCensus.eve.lib : census_graph.obj (.const:.string)
                  8083428e    00000002     --HOLE-- [fill = 0]
                  80834290    00000128     ti_stats_collector.obj (.const:.switchtab)
                  808343b8    000000fd     report_utils.obj (.const:.string)
                  808344b5    000000be     census_config.obj (.const:.string)
                  80834573    00000056     ti_mem_manager.obj (.const:.string)
                  808345c9    00000003     --HOLE-- [fill = 0]
                  808345cc    00000054     libeveCensus.eve.lib : census_alg.obj (.const)
                  80834620    00000043     ti_stats_collector.obj (.const:.string)
                  80834663    00000001     --HOLE-- [fill = 0]
                  80834664    00000030     libeveCensus.eve.lib : census_graph.obj (.const:$P$T0$1)
                  80834694    0000002a                          : census_alg.obj (.const:.string)
                  808346be    0000000c                          : census_graph.obj (.const:$P$T1$2)
                  808346ca    0000000c     census_tb.obj (.const:.string:__FUNCTION__$1)
                  808346d6    00000008     configparser.obj (.const:.string:$P$T0$1)

.bam_fardata 
*          1    808346e0    00000558     
                  808346e0    00000078     algframework.lib : bam_memory.obj (.far) [fill = 0]
                  80834758    0000000c                      : bam_execute.obj (.far) [fill = 0]
                  80834764    00000008                      : bam_construct.obj (.far) [fill = 0]
                  8083476c    00000400                      : bam_utils.obj (.fardata:gBAM_memPrintfArr)
                  80834b6c    00000068                      : bam_dma_autoincrement_node.obj (.fardata)
                  80834bd4    00000064                      : bam_memory.obj (.fardata:vcop_mem)

.rts_fardata 
*          1    80834c38    00000300     
                  80834c38    000000a0     rtsarp32_v200.lib : defs.obj (.far) [fill = 0]
                  80834cd8    0000000c                       : memory.obj (.far) [fill = 0]
                  80834ce4    00000008                       : boot.obj (.far) [fill = 0]
                  80834cec    00000008                       : trgdrv.obj (.far) [fill = 0]
                  80834cf4    000000f0                       : defs.obj (.fardata:_ftable)
                  80834de4    00000078                       : lowlev.obj (.fardata:_device)
                  80834e5c    00000064                       : vcop_memory.obj (.fardata:vcop_mem)
                  80834ec0    00000050                       : lowlev.obj (.fardata:_stream)
                  80834f10    00000008                       : _lock.obj (.fardata)
                  80834f18    00000005                       : vcop_memory.obj (.fardata)
                  80834f1d    00000003     --HOLE-- [fill = 0]
                  80834f20    00000004                       : defs.obj (.fardata)
                  80834f24    00000004                       : errno.obj (.fardata)
                  80834f28    00000004                       : fopen.obj (.fardata)
                  80834f2c    00000004                       : lowlev.obj (.fardata)
                  80834f30    00000004                       : memory.obj (.fardata)
                  80834f34    00000004                       : rand.obj (.fardata)

.starterware_fardata 
*          1    80834f38    000001f4     
                  80834f38    000001f4     libevestarterware_eve.lib : cred.obj (.fardata:CRED_instVirtAddr)

.algo_fardata 
*          1    8083512c    00000068     
                  8083512c    0000001c     libevekernels.eve.lib : bam_census_8bits_helper_funcs.obj (.fardata)
                  80835148    00000018                           : bam_census_8bits_exec_funcs.obj (.fardata)
                  80835160    0000001c                           : bam_census_16bits_helper_funcs.obj (.fardata)
                  8083517c    00000018                           : bam_census_16bits_exec_funcs.obj (.fardata)


SEGMENT ATTRIBUTES

    id tag      seg value
    -- ---      --- -----
     0 PHA_PAGE 3   1    
     1 PHA_PAGE 4   1    
     2 PHA_PAGE 5   1    
     3 PHA_PAGE 6   1    
     4 PHA_PAGE 7   1    
     5 PHA_PAGE 8   1    
     6 PHA_PAGE 9   1    
     7 PHA_PAGE 10  1    
     8 PHA_PAGE 11  1    
     9 PHA_PAGE 12  1    
    10 PHA_PAGE 13  1    
    11 PHA_PAGE 14  1    
    12 PHA_PAGE 15  1    
    13 PHA_PAGE 16  1    
    14 PHA_PAGE 17  1    


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
8000f464   BAM_ARP32_computeWrapper
8000f88c   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000f924   BAM_DMA_AUTOINCREMENT_frameInitOutChannel
8000e820   BAM_DMA_AUTOINCREMENT_getMemRecFunc
8000ee60   BAM_DMA_AUTOINCREMENT_setMemRecFunc
8000f68c   BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel
8000f6fc   BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel
8000f264   BAM_activateGraph
8000f838   BAM_controlNode
8000f318   BAM_copyIntMemRec2ExtMem
8000f58c   BAM_copyNodeList
8000e4d0   BAM_createGraph
8000f9e4   BAM_dummyKernelFunc
8000ef7c   BAM_fillKernelInfo
8000f08c   BAM_getGraphMemSize
8000f968   BAM_getMemPacket
8000c3c4   BAM_initGraph
8000f618   BAM_initGraphInstance
8000f8d8   BAM_initKernelDB
8000dd44   BAM_optimizeGraph
8000f9a0   BAM_printf
8000ead0   BAM_process
8000e978   BAM_updateNodes
80008004   C$$EXIT
80007b28   C$$IO$$
808345f8   CENSUS_TI_IRES
808345cc   CENSUS_TI_VISION_FXNS
800114c0   CENSUS_TI_activate
80011404   CENSUS_TI_alloc
8001156c   CENSUS_TI_control
8001151c   CENSUS_TI_deactivate
800110cc   CENSUS_TI_dmaControl
8001158c   CENSUS_TI_execute
800115c8   CENSUS_TI_free
800115ac   CENSUS_TI_getGraphMemReq
80010f3c   CENSUS_TI_graphCreate
80011300   CENSUS_TI_init
800115e0   CENSUS_TI_numAlloc
800111f4   CENSUS_TI_process
80834f38   CRED_instVirtAddr
8000ad4c   DMA_funcs_hardwareRegSetup
8000be7c   DMA_funcs_writeTransferParams
8000b244   DMA_resourceAllocator_allocateResources
8000c2f8   DMA_resourceAllocator_initResources
8000c390   DMA_resourceAllocator_setEdma3RmHandle
8000c348   DMA_utils_resetStateStruct
8000bc54   DMA_utils_updateStateStruct
40024000   DMEM_SCRATCH
8000c3c0   EDMA3LLD_SUPPORT_requestResources
800098f0   EDMA_UTILS_autoIncrement_configure
8000ba94   EDMA_UTILS_autoIncrement_init
8000b3bc   EDMA_UTILS_autoIncrement_triggerInChannel
8000af10   EDMA_UTILS_autoIncrement_triggerOutChannel
8000a620   EDMA_UTILS_autoIncrement_update
8000c08c   EDMA_UTILS_autoIncrement_waitInChannel
8000bfcc   EDMA_UTILS_autoIncrement_waitOutChannel
8000c130   EDMA_UTILS_globalReset
8000bde4   EDMA_UTILS_memcpy2D
8000c39c   EDMA_UTILS_setEdma3RmHandle
800115e4   EVE_SCTM_CounterConfig
800116b0   EVE_SCTM_CounterRead
8001162c   EVE_SCTM_CounterTimerEnable
800116e0   EVE_SCTM_Enable
80011658   EVE_SCTM_InpEvtSelect
800116c8   EVE_SCTM_OverflowCheck
80011684   EVE_SCTM_SamplingSelect
800070fc   HOSTclose
80005f20   HOSTlseek
8000645c   HOSTopen
800066b4   HOSTread
80006088   HOSTrename
80006f1c   HOSTunlink
80006a14   HOSTwrite
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
8000c324   TEST_PRINTF
8000c3a8   TI_CreateMemoryHandle
8000c034   TI_GetMemoryChunk
8000c3b4   TI_ResetMemoryHandle
00007d00   WMEM_SIZE
40026804   __CIOBUF_
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit
40024000   __TI_STACK_END
00004000   __TI_STACK_SIZE
40026000   __TI_STATIC_BASE
00800000   __TI_SYSMEM_SIZE
00000001   __TI_args_main
00000001   __TI_exit
80007ca0   __arp32abi_abort_msg
8000444c   __arp32abi_addd
80007ec0   __arp32abi_addll
80005c18   __arp32abi_cmpd
80007e58   __arp32abi_cmplls
80007e7c   __arp32abi_cmpllu
80006744   __arp32abi_cvtdf
80006bac   __arp32abi_cvtfd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80006d2c   __arp32abi_fixdi
80007330   __arp32abi_fltid
800079c0   __arp32abi_fltud
800076c0   __arp32abi_isinf
80007600   __arp32abi_llshl
80007d48   __arp32abi_llshru
800040bc   __arp32abi_mpyd
80004ec4   __arp32abi_mpyll
80007e08   __arp32abi_negd
80007f54   __arp32abi_negll
80007cd8   __arp32abi_remull
80007bec   __arp32abi_strasgi
80007ddc   __arp32abi_subd
80007f2c   __arp32abi_subll
ffffffff   __binit__
ffffffff   __c_args__
00000068   _algo_fardata_size
00000000   _algo_neardata_size
00001bfc   _algo_text_size
80007b30   _args_main
800071e4   _auto_init
00000558   _bam_fardata_size
000003bd   _bam_neardata_size
00003624   _bam_text_size
80006324   _buff_read
80007398   _c_int00
800078d0   _cleanup
80834ce4   _cleanup_ptr
80006da8   _closefile
400263c0   _ctypes_
80007660   _doflush
80834ce8   _dtors_ptr
80000120   _dummy_handler
80004c08   _frcaddd
80003940   _frcdivd
80005160   _frcmpyd
80834f20   _ft_end
80834cf4   _ftable
40054000   _imemha_memory
40074000   _imemhb_memory
40050000   _imemla_memory
40070000   _imemlb_memory
80834f10   _lock
80007e30   _mpyl
40026790   _my_stack
8000800c   _nop
800030d0   _printfi
800072c4   _rd_ok
80007828   _renormd
80000100   _reset_handler
00000300   _rts_fardata_size
00000266   _rts_neardata_size
00006f14   _rts_text_size
80001100   _scanfi
40020000   _stack
000001f4   _starterware_fardata_size
00000000   _starterware_neardata_size
00000110   _starterware_text_size
80030000   _sys_memory
80008010   _system_pre_init
000043b0   _text_size
80834c38   _tmpnams
80834f14   _unlock
80000000   _vec_table
40040000   _wmem_memory
80006864   _wrt_ok
80008004   abort
80006e24   atoi
8000ec08   bam_getMemPacket
8000f76c   bam_mcheck
8000e69c   bam_mem_alloc
8000f198   bam_mem_free
8000f3c4   bam_minit
8000f4fc   bam_releaseMemPacket
40026780   bam_stat_num_packets
ffffffff   binit
4002678c   census_numTestCases
80006aa0   close
40026924   edmaBase
80834f24   errno
8000787c   exit
80007d7c   fclose
80006ea0   fflush
80007f14   fgets
80007c28   fopen
80007170   fprintf
80005a54   fputc
80004930   fputs
8000501c   fread
80007f40   free
800068f4   fseek
80006984   ftell
8000351c   fwrite
8083517c   gBAM_TI_census_16bits_ExecFunc
80835174   gBAM_TI_census_16bits_HelperFunc
80835160   gBAM_TI_census_16bits_Kernel
80835148   gBAM_TI_census_8bits_ExecFunc
80835140   gBAM_TI_census_8bits_HelperFunc
8083512c   gBAM_TI_census_8bits_Kernel
80834b6c   gBAM_TI_dmaAutoIncrementReadKernel
80834b80   gBAM_TI_dmaAutoIncrementWriteKernel
80834ba4   gBAM_TI_dmaReadAutoIncrementKernelExecFunc
80834b94   gBAM_TI_dmaReadAutoIncrementKernelHelperFunc
80834bbc   gBAM_TI_dmaWriteAutoIncrementKernelExecFunc
80834b9c   gBAM_TI_dmaWriteAutoIncrementKernelHelperFunc
80833630   gBAM_TI_natcCensus_16bits_ExecFunc
8083360c   gBAM_TI_natcCensus_16bits_HelperFunc
808335f8   gBAM_TI_natcCensus_16bits_Kernel
80833648   gBAM_TI_natcCensus_8bits_ExecFunc
80833628   gBAM_TI_natcCensus_8bits_HelperFunc
80833614   gBAM_TI_natcCensus_8bits_Kernel
8083476c   gBAM_memPrintfArr
80830000   gConfig_census
400266d0   gDmaUtilsStateStruct
80831d18   gTest_TI_profileSctm
4002675c   gTest_TI_profileTsc
80831d38   gsTokenMap_census
80010850   init_census_16bits_params
8000fe64   init_census_8bits_params
80007400   lseek
8000759c   ltoa
8000a8a8   main
80007a0c   malloc
80831d28   memObj_DMEM
80005ce4   mem_alloc
80006620   mem_free
80007ea0   memccpy
80005b3c   memcpy
800061dc   memset
80007084   minit
80005968   open
80006cac   printf
8000a318   printparams
8000ab18   profiler_end
8000c380   profiler_end_print
8000c368   profiler_getSP
8000bf60   profiler_getStackDepth
8000bd20   profiler_init
8000c2c8   profiler_initStack
8000c290   profiler_printStatus
8000c17c   profiler_start
8000c0e0   profiler_testCaseInfo
80007970   rand
80007468   read
80007a58   readmsg
8000bb7c   readparamfile
80007ff8   remove
8000b940   report_printAppletInfo
80005648   setvbuf
80007b70   sprintf
80007dac   srand
80007d10   sscanf
80008014   statCollectorControl
8000bef0   statCollectorInit
800015f8   strtod
80003ef0   strtol
80001998   strtold
80001d34   strtoll
80004604   strtoul
80002e84   strtoull
80008da0   test_census
40026738   test_module_cyles
80007aa0   unlink
8000b0c8   vcop_census_16bits_cn
80010388   vcop_census_16bits_init
80010d7c   vcop_census_16bits_param_count
80010cb8   vcop_census_16bits_vloops
8000b520   vcop_census_8bits_cn
8000f9e8   vcop_census_8bits_init
80010380   vcop_census_8bits_param_count
800102cc   vcop_census_8bits_vloops
800064f4   vcop_free
80007f94   vcop_malloc
80004aa0   vcop_memalign
80007778   vcop_minit
80007254   vfprintf
80007c64   vsprintf
800074d0   write
80007ae8   writemsg


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000000   _algo_neardata_size
00000000   _starterware_neardata_size
00000001   __TI_args_main
00000001   __TI_exit
00000068   _algo_fardata_size
00000110   _starterware_text_size
000001f4   _starterware_fardata_size
00000266   _rts_neardata_size
00000300   _rts_fardata_size
000003bd   _bam_neardata_size
00000558   _bam_fardata_size
00001bfc   _algo_text_size
00003624   _bam_text_size
00004000   IMEMH_SIZE
00004000   IMEML_SIZE
00004000   __TI_STACK_SIZE
000043b0   _text_size
00006f14   _rts_text_size
00007d00   WMEM_SIZE
00800000   __TI_SYSMEM_SIZE
40020000   _stack
40024000   DMEM_SCRATCH
40024000   __TI_STACK_END
40026000   __TI_STATIC_BASE
400263c0   _ctypes_
400266d0   gDmaUtilsStateStruct
40026738   test_module_cyles
4002675c   gTest_TI_profileTsc
40026780   bam_stat_num_packets
4002678c   census_numTestCases
40026790   _my_stack
40026804   __CIOBUF_
40026924   edmaBase
40040000   _wmem_memory
40050000   _imemla_memory
40054000   _imemha_memory
40070000   _imemlb_memory
40074000   _imemhb_memory
80000000   _vec_table
80000100   _reset_handler
80000120   _dummy_handler
80001100   _scanfi
800015f8   strtod
80001998   strtold
80001d34   strtoll
80002e84   strtoull
800030d0   _printfi
8000351c   fwrite
80003940   _frcdivd
80003b40   __arp32abi_divd
80003d24   __arp32abi_divull
80003ef0   strtol
800040bc   __arp32abi_mpyd
8000444c   __arp32abi_addd
80004604   strtoul
80004930   fputs
80004aa0   vcop_memalign
80004c08   _frcaddd
80004ec4   __arp32abi_mpyll
8000501c   fread
80005160   _frcmpyd
80005648   setvbuf
80005968   open
80005a54   fputc
80005b3c   memcpy
80005c18   __arp32abi_cmpd
80005ce4   mem_alloc
80005f20   HOSTlseek
80006088   HOSTrename
800061dc   memset
80006324   _buff_read
8000645c   HOSTopen
800064f4   vcop_free
80006620   mem_free
800066b4   HOSTread
80006744   __arp32abi_cvtdf
80006864   _wrt_ok
800068f4   fseek
80006984   ftell
80006a14   HOSTwrite
80006aa0   close
80006bac   __arp32abi_cvtfd
80006cac   printf
80006d2c   __arp32abi_fixdi
80006da8   _closefile
80006e24   atoi
80006ea0   fflush
80006f1c   HOSTunlink
80007084   minit
800070fc   HOSTclose
80007170   fprintf
800071e4   _auto_init
80007254   vfprintf
800072c4   _rd_ok
80007330   __arp32abi_fltid
80007398   _c_int00
80007400   lseek
80007468   read
800074d0   write
8000759c   ltoa
80007600   __arp32abi_llshl
80007660   _doflush
800076c0   __arp32abi_isinf
80007778   vcop_minit
80007828   _renormd
8000787c   exit
800078d0   _cleanup
80007970   rand
800079c0   __arp32abi_fltud
80007a0c   malloc
80007a58   readmsg
80007aa0   unlink
80007ae8   writemsg
80007b28   C$$IO$$
80007b30   _args_main
80007b70   sprintf
80007bec   __arp32abi_strasgi
80007c28   fopen
80007c64   vsprintf
80007ca0   __arp32abi_abort_msg
80007cd8   __arp32abi_remull
80007d10   sscanf
80007d48   __arp32abi_llshru
80007d7c   fclose
80007dac   srand
80007ddc   __arp32abi_subd
80007e08   __arp32abi_negd
80007e30   _mpyl
80007e58   __arp32abi_cmplls
80007e7c   __arp32abi_cmpllu
80007ea0   memccpy
80007ec0   __arp32abi_addll
80007f14   fgets
80007f2c   __arp32abi_subll
80007f40   free
80007f54   __arp32abi_negll
80007f94   vcop_malloc
80007ff8   remove
80008004   C$$EXIT
80008004   abort
8000800c   _nop
80008010   _system_pre_init
80008014   statCollectorControl
80008da0   test_census
800098f0   EDMA_UTILS_autoIncrement_configure
8000a318   printparams
8000a620   EDMA_UTILS_autoIncrement_update
8000a8a8   main
8000ab18   profiler_end
8000ad4c   DMA_funcs_hardwareRegSetup
8000af10   EDMA_UTILS_autoIncrement_triggerOutChannel
8000b0c8   vcop_census_16bits_cn
8000b244   DMA_resourceAllocator_allocateResources
8000b3bc   EDMA_UTILS_autoIncrement_triggerInChannel
8000b520   vcop_census_8bits_cn
8000b940   report_printAppletInfo
8000ba94   EDMA_UTILS_autoIncrement_init
8000bb7c   readparamfile
8000bc54   DMA_utils_updateStateStruct
8000bd20   profiler_init
8000bde4   EDMA_UTILS_memcpy2D
8000be7c   DMA_funcs_writeTransferParams
8000bef0   statCollectorInit
8000bf60   profiler_getStackDepth
8000bfcc   EDMA_UTILS_autoIncrement_waitOutChannel
8000c034   TI_GetMemoryChunk
8000c08c   EDMA_UTILS_autoIncrement_waitInChannel
8000c0e0   profiler_testCaseInfo
8000c130   EDMA_UTILS_globalReset
8000c17c   profiler_start
8000c290   profiler_printStatus
8000c2c8   profiler_initStack
8000c2f8   DMA_resourceAllocator_initResources
8000c324   TEST_PRINTF
8000c348   DMA_utils_resetStateStruct
8000c368   profiler_getSP
8000c380   profiler_end_print
8000c390   DMA_resourceAllocator_setEdma3RmHandle
8000c39c   EDMA_UTILS_setEdma3RmHandle
8000c3a8   TI_CreateMemoryHandle
8000c3b4   TI_ResetMemoryHandle
8000c3c0   EDMA3LLD_SUPPORT_requestResources
8000c3c4   BAM_initGraph
8000dd44   BAM_optimizeGraph
8000e4d0   BAM_createGraph
8000e69c   bam_mem_alloc
8000e820   BAM_DMA_AUTOINCREMENT_getMemRecFunc
8000e978   BAM_updateNodes
8000ead0   BAM_process
8000ec08   bam_getMemPacket
8000ee60   BAM_DMA_AUTOINCREMENT_setMemRecFunc
8000ef7c   BAM_fillKernelInfo
8000f08c   BAM_getGraphMemSize
8000f198   bam_mem_free
8000f264   BAM_activateGraph
8000f318   BAM_copyIntMemRec2ExtMem
8000f3c4   bam_minit
8000f464   BAM_ARP32_computeWrapper
8000f4fc   bam_releaseMemPacket
8000f58c   BAM_copyNodeList
8000f618   BAM_initGraphInstance
8000f68c   BAM_DMA_AUTOINCREMENT_updateDDRptrInChannel
8000f6fc   BAM_DMA_AUTOINCREMENT_updateDDRptrOutChannel
8000f76c   bam_mcheck
8000f838   BAM_controlNode
8000f88c   BAM_DMA_AUTOINCREMENT_frameInitInChannel
8000f8d8   BAM_initKernelDB
8000f924   BAM_DMA_AUTOINCREMENT_frameInitOutChannel
8000f968   BAM_getMemPacket
8000f9a0   BAM_printf
8000f9e4   BAM_dummyKernelFunc
8000f9e8   vcop_census_8bits_init
8000fe64   init_census_8bits_params
800102cc   vcop_census_8bits_vloops
80010380   vcop_census_8bits_param_count
80010388   vcop_census_16bits_init
80010850   init_census_16bits_params
80010cb8   vcop_census_16bits_vloops
80010d7c   vcop_census_16bits_param_count
80010f3c   CENSUS_TI_graphCreate
800110cc   CENSUS_TI_dmaControl
800111f4   CENSUS_TI_process
80011300   CENSUS_TI_init
80011404   CENSUS_TI_alloc
800114c0   CENSUS_TI_activate
8001151c   CENSUS_TI_deactivate
8001156c   CENSUS_TI_control
8001158c   CENSUS_TI_execute
800115ac   CENSUS_TI_getGraphMemReq
800115c8   CENSUS_TI_free
800115e0   CENSUS_TI_numAlloc
800115e4   EVE_SCTM_CounterConfig
8001162c   EVE_SCTM_CounterTimerEnable
80011658   EVE_SCTM_InpEvtSelect
80011684   EVE_SCTM_SamplingSelect
800116b0   EVE_SCTM_CounterRead
800116c8   EVE_SCTM_OverflowCheck
800116e0   EVE_SCTM_Enable
80030000   _sys_memory
80830000   gConfig_census
80831d18   gTest_TI_profileSctm
80831d28   memObj_DMEM
80831d38   gsTokenMap_census
808335f8   gBAM_TI_natcCensus_16bits_Kernel
8083360c   gBAM_TI_natcCensus_16bits_HelperFunc
80833614   gBAM_TI_natcCensus_8bits_Kernel
80833628   gBAM_TI_natcCensus_8bits_HelperFunc
80833630   gBAM_TI_natcCensus_16bits_ExecFunc
80833648   gBAM_TI_natcCensus_8bits_ExecFunc
808345cc   CENSUS_TI_VISION_FXNS
808345f8   CENSUS_TI_IRES
8083476c   gBAM_memPrintfArr
80834b6c   gBAM_TI_dmaAutoIncrementReadKernel
80834b80   gBAM_TI_dmaAutoIncrementWriteKernel
80834b94   gBAM_TI_dmaReadAutoIncrementKernelHelperFunc
80834b9c   gBAM_TI_dmaWriteAutoIncrementKernelHelperFunc
80834ba4   gBAM_TI_dmaReadAutoIncrementKernelExecFunc
80834bbc   gBAM_TI_dmaWriteAutoIncrementKernelExecFunc
80834c38   _tmpnams
80834ce4   _cleanup_ptr
80834ce8   _dtors_ptr
80834cf4   _ftable
80834f10   _lock
80834f14   _unlock
80834f20   _ft_end
80834f24   errno
80834f38   CRED_instVirtAddr
8083512c   gBAM_TI_census_8bits_Kernel
80835140   gBAM_TI_census_8bits_HelperFunc
80835148   gBAM_TI_census_8bits_ExecFunc
80835160   gBAM_TI_census_16bits_Kernel
80835174   gBAM_TI_census_16bits_HelperFunc
8083517c   gBAM_TI_census_16bits_ExecFunc
ffffffff   __binit__
ffffffff   __c_args__
ffffffff   binit
UNDEFED    __TI_CINIT_Base
UNDEFED    __TI_CINIT_Limit
UNDEFED    __TI_Handler_Table_Base
UNDEFED    __TI_Handler_Table_Limit
UNDEFED    __TI_INITARRAY_Base
UNDEFED    __TI_INITARRAY_Limit

[282 symbols]
