/*
*
* Copyright (c) 2008-2017 Texas Instruments Incorporated
*
* All rights reserved not granted herein.
*
* Limited License.
*
* Texas Instruments Incorporated grants a world-wide, royalty-free, non-exclusive
* license under copyrights and patents it now or hereafter owns or controls to make,
* have made, use, import, offer to sell and sell ("Utilize") this software subject to the
* terms herein.  With respect to the foregoing patent license, such license is granted
* solely to the extent that any such patent is necessary to Utilize the software alone.
* The patent license shall not apply to any combinations which include this software,
* other than combinations with devices manufactured by or for TI ("TI Devices").
* No hardware patent is licensed hereunder.
*
* Redistributions must preserve existing copyright notices and reproduce this license
* (including the above copyright notice and the disclaimer and (if applicable) source
* code license limitations below) in the documentation and/or other materials provided
* with the distribution
*
* Redistribution and use in binary form, without modification, are permitted provided
* that the following conditions are met:
*
* *       No reverse engineering, decompilation, or disassembly of this software is
* permitted with respect to any software provided in binary form.
*
* *       any redistribution and use are licensed by TI for use only with TI Devices.
*
* *       Nothing shall obligate TI to provide you with source code for the software
* licensed and provided to you in object code.
*
* If software source code is provided to you, modification and redistribution of the
* source code are permitted provided that the following conditions are met:
*
* *       any redistribution and use of the source code, including any resulting derivative
* works, are licensed by TI for use only with TI Devices.
*
* *       any redistribution and use of any object code compiled from the source code
* and any resulting derivative works, are licensed by TI for use only with TI Devices.
*
* Neither the name of Texas Instruments Incorporated nor the names of its suppliers
*
* may be used to endorse or promote products derived from this software without
* specific prior written permission.
*
* DISCLAIMER.
*
* THIS SOFTWARE IS PROVIDED BY TI AND TI'S LICENSORS "AS IS" AND ANY EXPRESS
* OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
* IN NO EVENT SHALL TI AND TI'S LICENSORS BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
* OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
* OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*
*/



/**
 *  @Component:   EDEN_TEST_DONE
 *
 *  @Filename:    eden_test_done_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
 *//* ====================================================================== */

#ifndef __EDEN_TEST_DONE_CRED_H
#define __EDEN_TEST_DONE_CRED_H

#ifdef __cplusplus
extern "C"
{
#endif

/*
 * Instance GEM_TEST_DONE of component EDEN_TEST_DONE mapped in EDEN at address 0x8032200
 * Instance EVE_TEST_DONE of component EDEN_TEST_DONE mapped in EDEN at address 0x8032800
 */

 /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
 *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

/*
 *  List of Register arrays for component EDEN_TEST_DONE
 *
 */


/*
 *  List of bundle arrays for component EDEN_TEST_DONE
 *
 */

/*
 *  List of bundles for component EDEN_TEST_DONE
 *
 */


/*
 * List of registers for component EDEN_TEST_DONE
 *
 */

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE1
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE1                              0x0ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED1
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED1                            0x4ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE2
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE2                              0x10ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED2
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED2                            0x14ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE3
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE3                              0x20ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED3
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED3                            0x24ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE4
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE4                              0x30ul

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED4
 *
 * @BRIEF        Register description is not available
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED4                            0x34ul


/*
 * List of register bitfields for component EDEN_TEST_DONE
 *
 */
 
/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE1__RSVD   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE1__RSVD                   BITFIELD(31, 1)
#define EDEN_TEST_DONE__DONE1__RSVD__POS              1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE1__DONE   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE1__DONE                   BITFIELD(0, 0)
#define EDEN_TEST_DONE__DONE1__DONE__POS              0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED1__RSVD   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED1__RSVD                 BITFIELD(31, 1)
#define EDEN_TEST_DONE__PASSED1__RSVD__POS            1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED1__PASSED   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED1__PASSED               BITFIELD(0, 0)
#define EDEN_TEST_DONE__PASSED1__PASSED__POS          0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE2__RSVD   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE2__RSVD                   BITFIELD(31, 1)
#define EDEN_TEST_DONE__DONE2__RSVD__POS              1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE2__DONE   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE2__DONE                   BITFIELD(0, 0)
#define EDEN_TEST_DONE__DONE2__DONE__POS              0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED2__RSVD   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED2__RSVD                 BITFIELD(31, 1)
#define EDEN_TEST_DONE__PASSED2__RSVD__POS            1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED2__PASSED   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED2__PASSED               BITFIELD(0, 0)
#define EDEN_TEST_DONE__PASSED2__PASSED__POS          0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE3__RSVD   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE3__RSVD                   BITFIELD(31, 1)
#define EDEN_TEST_DONE__DONE3__RSVD__POS              1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE3__DONE   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE3__DONE                   BITFIELD(0, 0)
#define EDEN_TEST_DONE__DONE3__DONE__POS              0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED3__RSVD   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED3__RSVD                 BITFIELD(31, 1)
#define EDEN_TEST_DONE__PASSED3__RSVD__POS            1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED3__PASSED   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED3__PASSED               BITFIELD(0, 0)
#define EDEN_TEST_DONE__PASSED3__PASSED__POS          0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE4__RSVD   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE4__RSVD                   BITFIELD(31, 1)
#define EDEN_TEST_DONE__DONE4__RSVD__POS              1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__DONE4__DONE   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__DONE4__DONE                   BITFIELD(0, 0)
#define EDEN_TEST_DONE__DONE4__DONE__POS              0

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED4__RSVD   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED4__RSVD                 BITFIELD(31, 1)
#define EDEN_TEST_DONE__PASSED4__RSVD__POS            1

/*-------------------------------------------------------------------------*//**
 * @DEFINITION   EDEN_TEST_DONE__PASSED4__PASSED   
 *
 * @BRIEF        Bitfield description is not available - (RW) 
 *
 *//*------------------------------------------------------------------------ */
#define EDEN_TEST_DONE__PASSED4__PASSED               BITFIELD(0, 0)
#define EDEN_TEST_DONE__PASSED4__PASSED__POS          0


/*
 * List of register bitfields values for component EDEN_TEST_DONE
 *
 */


#ifdef __cplusplus
}
#endif
#endif  /* __EDEN_TEST_DONE_CRED_H */
 
