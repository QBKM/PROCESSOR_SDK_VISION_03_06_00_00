/*
 *  Copyright (C) 2014 Texas Instruments Incorporated
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/**
 *  \file stw_adcTestcases.h
 *
 *  \brief This file defines the test cases for ADC UT.
 */

#ifndef STW_ADC_TEST_CASES_H_
#define STW_ADC_TEST_CASES_H_

/* ========================================================================== */
/*                             Include Files                                  */
/* ========================================================================== */
#include <string.h>
#include <ti/csl/soc.h>
#include <ti/csl/cslr_adc.h>
#include <ti/csl/soc.h>
#include <ti/csl/csl_adc.h>
#include <st_adc.h>

/* ========================================================================== */
/*                           Macros & Typedefs                                */
/* ========================================================================== */
#define ADC_NUM_TESTCASES   (sizeof (gADCTestcaseParams) / \
                             sizeof (st_ADCTestcaseParams_t))

/* ========================================================================== */
/*                            Global Variables                                */
/* ========================================================================== */

/** \brief Defines the various ADC test cases. */
st_ADCTestcaseParams_t gADCTestcaseParams[] =
{
    /* enableTest, testCaseId,
     * testCaseFxnPtr,
     * *reqId,
     * *testCaseName,
     * *userInfo, *disableReason
     * cpuID, dataSize, sourceMemory,
     * adcConfigParams,
     * diagLibTestParams
     * printEnable,
     * testType,
     */
    {
        TEST_ENABLE, 0U,
        &adcRunTestcase,
        "None",
        "User defined test",
        "None", "None",
        NULL,
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_END_OF_SEQUENCE | ADC_INTR_SRC_FIFO0_OVERRUN |
             ADC_INTR_SRC_FIFO0_UNDERFLOW),
            {
                0
            },
        },
        NULL, NULL,
        PRINT_ENABLE,
        0U,
    },
    {
        TEST_ENABLE, 1U,
        &adcRunTestcase,
        ":PDK-377:PDK-403:PDK-404:PDK-410:PDK-411:PDK-377:PDK-378:PDK-379:PDK-380:PDK-382:PDK-383:PDK-384:PDK-385:PDK-392:PDK-393:PDK-394:PDK-395:PDK-400:PDK-401:PDK-407:PDK-413:PDK-419:PDK-421:PDK-425::PDK-436:PDK-386:PDK-387:",
        "adc_ipu_16steps_8channels",
        "Analog to Digital conversion for 16 steps with 8 channels for single shot conversion mode with minimum open and sampling delay.",
        "None",
        "End of sequence interrupt should occur. Output for 16 steps to be displayed",
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_END_OF_SEQUENCE | ADC_INTR_SRC_FIFO0_OVERRUN |
             ADC_INTR_SRC_FIFO0_UNDERFLOW),
            {
                16U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                ADC_STEP_1, ADC_CHANNEL_4, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_2, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_3, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_4, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_5, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_6, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_7, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_8, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_9, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_10, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_11, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_12, ADC_CHANNEL_7, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_13, ADC_CHANNEL_3, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_14, ADC_CHANNEL_4, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_15, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_16, ADC_CHANNEL_6, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
            },
            {
                1U, 0U, 0U,
                1U, 0U, 0U,
            },
            0x3FFU,
            0U,
            TRUE,
        },
        {
            0U, 0U,
        },
        {
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 2U,
        &adcRunTestcase,
        ":PDK-414:",
        "adc_ipu_2avg",
        "Analog to Digital conversion with averaging of 2 input samples.",
        "None",
        "End of sequence interrupt should occur",
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_END_OF_SEQUENCE | ADC_INTR_SRC_FIFO0_OVERRUN |
             ADC_INTR_SRC_FIFO0_UNDERFLOW),
            {
                16U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                ADC_STEP_1, ADC_CHANNEL_4, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_2, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_3, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_4, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_5, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_6, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_7, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_8, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_9, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_10, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_11, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_12, ADC_CHANNEL_7, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_13, ADC_CHANNEL_3, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_14, ADC_CHANNEL_4, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_15, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_16, ADC_CHANNEL_6, ADC_FIFO_NUM_0,
                ADC_AVERAGING_2_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
            },
            {
                1U, 0U, 32U,
                1U, 32U, 0U,
            },
            0x3FFU,
            0U,
            TRUE,
        },
        {
            0U, 0U,
        },
        {
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 3U,
        &adcRunTestcase,
        ":PDK-415:",
        "adc_ipu_4avg",
        "Analog to Digital conversion with averaging of 4 input samples.",
        "None",
        "End of sequence interrupt should occur",
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_END_OF_SEQUENCE | ADC_INTR_SRC_FIFO0_OVERRUN |
             ADC_INTR_SRC_FIFO0_UNDERFLOW),
            {
                16U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                ADC_STEP_1, ADC_CHANNEL_4, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_2, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_3, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_4, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_5, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_6, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_7, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_8, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_9, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_10, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_11, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_12, ADC_CHANNEL_7, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_13, ADC_CHANNEL_3, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_14, ADC_CHANNEL_4, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_15, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_16, ADC_CHANNEL_6, ADC_FIFO_NUM_0,
                ADC_AVERAGING_4_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
            },
            {
                1U, 0U, 32U,
                1U, 32U, 0U,
            },
            0x3FFU,
            0U,
            TRUE,
        },
        {
            0U, 0U,
        },
        {
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 4U,
        &adcRunTestcase,
        ":PDK-416:",
        "adc_ipu_8avg",
        "Analog to Digital conversion with averaging of 8 input samples.",
        "None",
        "End of sequence interrupt should occur",
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_END_OF_SEQUENCE | ADC_INTR_SRC_FIFO0_OVERRUN |
             ADC_INTR_SRC_FIFO0_UNDERFLOW),
            {
                16U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                ADC_STEP_1, ADC_CHANNEL_4, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_2, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_3, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_4, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_5, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_6, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_7, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_8, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_9, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_10, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_11, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_12, ADC_CHANNEL_7, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_13, ADC_CHANNEL_3, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_14, ADC_CHANNEL_4, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_15, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
                ADC_STEP_16, ADC_CHANNEL_6, ADC_FIFO_NUM_0,
                ADC_AVERAGING_8_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U,
                0x0U,
            },
            {
                1U, 0U, 32U,
                1U, 32U, 0U,
            },
            0x3FFU,
            0U,
            TRUE,
        },
        {
            0U, 0U,
        },
        {
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 5U,
        &adcRunTestcase,
        ":PDK-417::",
        "adc_ipu_16avg",
        "Analog to Digital conversion with averaging of 16 input samples.",
        "None",
        "End of sequence interrupt should occur",
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_END_OF_SEQUENCE | ADC_INTR_SRC_FIFO0_OVERRUN |
             ADC_INTR_SRC_FIFO0_UNDERFLOW),
            {
                16U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                ADC_STEP_1, ADC_CHANNEL_4, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_2, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_3, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_4, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_5, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_6, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_7, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_8, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_9, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_10, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_11, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_12, ADC_CHANNEL_7, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_13, ADC_CHANNEL_3, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_14, ADC_CHANNEL_4, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_15, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
                ADC_STEP_16, ADC_CHANNEL_6, ADC_FIFO_NUM_0,
                ADC_AVERAGING_16_SAMPLES, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                01U, 0x0U,
            },
            {
                1U, 0U, 32U,
                1U, 32U, 0U,
            },
            0x3FFU,
            0U,
            TRUE,
        },
        {
            0U, 0U,
        },
        {
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 6U,
        &adcRunTestcase,
        ":PDK-408:PDK-429:PDK-436:PDK-388:PDK-389:",
        "adc_ipu_stepID_FIFO0",
        "After completion of analog to digital conversion, store data into FIFO-0 along with STEP ID and wait for interrupt to come to CPU and read it from FIFO-0.",
        "None",
        "FIFO threshold interrupt should occur from CPU",
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_FIFO0_THRESHOLD),
            {
                4U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                ADC_STEP_1, ADC_CHANNEL_4, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_2, ADC_CHANNEL_5, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_3, ADC_CHANNEL_6, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_4, ADC_CHANNEL_4, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
            },
            {
                1U, 4U, 0U,
                1U, 0U, 0U,
            },
            0x3FFU,
            0U,
            TRUE,
        },
        {
            0U, 0U,
        },
        {
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 7U,
        &adcRunTestcase,
        ":PDK-420:PDK-424:PDK-426:PDK-428:PDK-439:PDK-390:PDK-391:PDK-381:PDK-438:",
        "adc_ipu_stepID_FIFO1_DMA",
        "After completion of analog to digital conversion, store data into FIFO-1 along with STEP ID and generate DMA request and read it from FIFO-1.",
        "None",
        "End of sequence interrupt should occur",
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_END_OF_SEQUENCE),
            {
                4U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                ADC_STEP_1, ADC_CHANNEL_4, ADC_FIFO_NUM_1, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_2, ADC_CHANNEL_5, ADC_FIFO_NUM_1, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_3, ADC_CHANNEL_6, ADC_FIFO_NUM_1, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
                ADC_STEP_4, ADC_CHANNEL_4, ADC_FIFO_NUM_1, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 0U, 01U, 0x0U,
            },
            {
                1U, 0U, 0U,
                1U, 0U, 4U,
            },
            0x3FFU,
            0U,
            TRUE,
        },
        {
            0U, 0U,
        },
        {
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
#if 0
    {
        TEST_DISABLE, 8U,
        &adcRunTestcase,
        ":PDK-428:",
        "adc_ipu_16steps_8channels_delay",
        "Analog to Digital conversion for continuous conversion mode with some open and sampling delay, store data into FIFO.",
        "None",
        "FIFO threshold interrupt should occur from CPU",
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_FIFO0_THRESHOLD), // ADC_INTR_SRC_END_OF_SEQUENCE),//
                                            // | ADC_INTR_SRC_FIFO0_OVERRUN |
            // ADC_INTR_SRC_FIFO0_UNDERFLOW),
            {
                2U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                ADC_STEP_1, ADC_CHANNEL_4, ADC_FIFO_NUM_0,
                ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                0xFFFFU, 0xFFU,
                /*ADC_STEP_2, ADC_CHANNEL_3, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_3, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_4, ADC_CHANNEL_6, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_5, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_6, ADC_CHANNEL_6, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_7, ADC_CHANNEL_6, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_8, ADC_CHANNEL_3, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_9, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_10, ADC_CHANNEL_6, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_11, ADC_CHANNEL_7, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_12, ADC_CHANNEL_1, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_13, ADC_CHANNEL_1, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_14, ADC_CHANNEL_4, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_15, ADC_CHANNEL_5, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,
                 * ADC_STEP_16, ADC_CHANNEL_6, ADC_FIFO_NUM_0,
                 * ADC_AVERAGING_NONE, ADC_OPERATION_MODE_SINGLE_SHOT, 0U,
                 * 0xFFFFU, 0xFFU,*/
            },
            {
                1U, 1U, 0U,
                1U, 0U, 0U,
            },
            0x3FFU,
            0U,
            TRUE,
        },
        {
            0U, 0U,
        },
        {
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_DISABLE, 9U,
        &adcRunTestcase,
        "None",
        "adc_ipu_range_chk",
        "Analog to Digital conversion for single shot conversion mode and check for out of range data. Interrupt should come to CPU.",
        "None",
        "None",
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_OUT_OF_RANGE),
            {
                1U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                ADC_STEP_1, ADC_CHANNEL_4, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 1U, 0x1U, 0x0U,
            },
            {
                1U, 0U, 0U,
                1U, 0U, 0U,
            },
            0xFU,
            0U,
            TRUE,
        },
        {
            0U, 0U,
        },
        {
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
#endif
    {
        TEST_ENABLE, 10U,
        &adcRunTestcase,
        ":PDK-405:PDK-431:PDK-396:PDK-397:",
        "adc_ipu_range_chk",
        "Analog to Digital conversion for single shot conversion mode and check for out of range data. Interrupt should come to CPU.",
        "None",
        "Out of range interrupt should occur",
        IPU,
        {
            DEF_ADC_MODULE,
            DEF_ADC_MODE,
            (ADC_INTR_SRC_OUT_OF_RANGE),
            {
                1U, 0U, 0U, 0U, 0U, 0U, 0U, 0U,
                ADC_STEP_1, ADC_CHANNEL_4, ADC_FIFO_NUM_0, ADC_AVERAGING_NONE,
                ADC_OPERATION_MODE_SINGLE_SHOT, 1U, 0x1U, 0x0U,
            },
            {
                1U, 0U, 0U,
                1U, 0U, 0U,
            },
            0x60U,
            0x50U,
            TRUE,
        },
        {
            0U, 0U,
        },
        {
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
            0U, 0U, 0U, 0U, 0U, 0U, 0U,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
#if !(defined (AVV_TEST_AUTO_BUILD))
    {
        TEST_ENABLE, 11U,
        &DiagLibAdcTest_main,
        ":PDK-1626:PDK-1651:PDK-1700:PDK-1663:",
        "DiagLib ADC Test Single Shot Conversion",
        "Analog to Digital conversion for single shot conversion mode for a single channel. Interrupt should come to CPU.",
        "None",
        "Fifo threshold interrupt should occur. Output voltage should match the expected voltage within given deviation.",
        IPU,
        {},
        {
            DEF_ADC_MODULE,
            DIAGLIB_ADC_DIV_DEFAULT,
        },
        {
            DEF_ADC_MODULE,
            DIAGLIB_ADC_TEST_CONV,
            DEF_ADC_MODE,
            1U,
            {
                ADC_CHANNEL_3,
                1U, 0U, 0U,
                ADC_AVERAGING_NONE,
                665U,
            },
            ADC_FIFO_NUM_0,
            DIAGLIB_ADC_REF_VOLTAGE_DEFAULT,
            5U, 0U, 0U, 1U,
            DIAGLIB_ADC_INTERRUPT_MODE,
            0U, TRUE,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 12U,
        &DiagLibAdcTest_main,
        ":PDK-1626:PDK-1559:PDK-1700:PDK-1697:PDK-1663:",
        "DiagLib ADC Test Continuous Conversion",
        "Analog to Digital conversion for Continuous conversion mode for 2 channels.",
        "None",
        "ADC Diagnostics should be successful. Output voltage should match the expected voltage within given deviation.",
        IPU,
        {},
        {
            DEF_ADC_MODULE,
            DIAGLIB_ADC_DIV_DEFAULT,
        },
        {
            DEF_ADC_MODULE,
            DIAGLIB_ADC_TEST_CONV,
            ADC_OPERATION_MODE_CONTINUOUS,
            2U,
            {
                ADC_CHANNEL_3, 1U, 0U, 1U, ADC_AVERAGING_NONE,
                665U,
                ADC_CHANNEL_4, 1U, 0U, 1U, ADC_AVERAGING_NONE,
                592U,
            },
            ADC_FIFO_NUM_0,
            DIAGLIB_ADC_REF_VOLTAGE_DEFAULT,
            10U, ADC_RANGE_MIN, ADC_RANGE_MAX, 1U,
            DIAGLIB_ADC_INTERRUPT_MODE,
            0U, TRUE,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 13U,
        &DiagLibAdcTest_main,
        ":PDK-1618:PDK-1648:PDK-1548:",
        "DiagLib ADC Test Continuous Conversion",
        "Analog to Digital conversion for Continuous conversion mode for 3 channels.",
        "None",
        "Polling of FIFO should not timeout. Output voltage should match the expected voltage within given deviation.",
        IPU,
        {},
        {
            DEF_ADC_MODULE,
            DIAGLIB_ADC_DIV_DEFAULT,
        },
        {
            DEF_ADC_MODULE,
            DIAGLIB_ADC_TEST_CONV,
            ADC_OPERATION_MODE_CONTINUOUS,
            3U,
            {
                ADC_CHANNEL_3, 1U, 0U, 1U, ADC_AVERAGING_2_SAMPLES,
                665U,
                ADC_CHANNEL_4, 1U, 0U, 1U, ADC_AVERAGING_2_SAMPLES,
                592U,
                ADC_CHANNEL_5, 1U, 0U, 1U, ADC_AVERAGING_2_SAMPLES,
                520U,
            },
            ADC_FIFO_NUM_1,
            DIAGLIB_ADC_REF_VOLTAGE_DEFAULT,
            10U, ADC_RANGE_MIN, ADC_RANGE_MAX, 20U,
            DIAGLIB_ADC_POLLED_MODE,
            1000U, TRUE,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 14U,
        &DiagLibAdcTest_main,
        ":PDK-1630:",
        "DiagLib ADC Overrun",
        "ADC Overrun interrupt check",
        "None",
        "FIFO Overrun interrupt should occur",
        IPU,
        {},
        {
            DEF_ADC_MODULE,
            DIAGLIB_ADC_DIV_DEFAULT,
        },
        {
            DEF_ADC_MODULE,
            DIAGLIB_ADC_TEST_OVERRUN,
            ADC_OPERATION_MODE_CONTINUOUS,
            3U,
            {
                ADC_CHANNEL_3, 1U, 0U, 1U, ADC_AVERAGING_2_SAMPLES,
                665U,
                ADC_CHANNEL_4, 1U, 0U, 1U, ADC_AVERAGING_2_SAMPLES,
                592U,
                ADC_CHANNEL_5, 1U, 0U, 1U, ADC_AVERAGING_2_SAMPLES,
                520U,
            },
            ADC_FIFO_NUM_1,
            DIAGLIB_ADC_REF_VOLTAGE_DEFAULT,
            10U, ADC_RANGE_MIN, ADC_RANGE_MAX, 20U,
            DIAGLIB_ADC_INTERRUPT_MODE,
            0U, TRUE,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 15U,
        &DiagLibAdcTest_main,
        ":PDK-1626:PDK-1559:PDK-1700:PDK-1697:PDK-1663:PDK-1548:",
        "DiagLib ADC Coversion Continuous Mode",
        "Analog to Digital conversion for Continuous conversion mode for 4 channels.",
        "None",
        "Fifo thresold interrupt should occur. Output voltage of continuous conversion should match the expected voltage within given deviation.",
        IPU,
        {},
        {
            DEF_ADC_MODULE,
            2000U,
        },
        {
            DEF_ADC_MODULE,
            DIAGLIB_ADC_TEST_CONV,
            ADC_OPERATION_MODE_CONTINUOUS,
            4U,
            {
                ADC_CHANNEL_3, 1U, 0U, 1U, ADC_AVERAGING_4_SAMPLES,
                665U,
                ADC_CHANNEL_4, 1U, 0U, 1U, ADC_AVERAGING_4_SAMPLES,
                592U,
                ADC_CHANNEL_5, 1U, 0U, 1U, ADC_AVERAGING_4_SAMPLES,
                520U,
                ADC_CHANNEL_6, 1U, 0U, 1U, ADC_AVERAGING_4_SAMPLES,
                412U,
            },
            ADC_FIFO_NUM_1,
            DIAGLIB_ADC_REF_VOLTAGE_DEFAULT,
            10U, ADC_RANGE_MIN, ADC_RANGE_MAX, 20U,
            DIAGLIB_ADC_INTERRUPT_MODE,
            0U, TRUE,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
    {
        TEST_ENABLE, 16U,
        &DiagLibAdcTest_main,
        ":PDK-1626:PDK-1546:PDK-1700:PDK-1697:PDK-1663:",
        "DiagLib ADC Singleshot Mode",
        "Analog to Digital conversion for Single shot conversion mode for 4 channels in polled mode.",
        "None",
        "Output voltage of singleshot conversion should match the expected voltage within given deviation.",
        IPU,
        {},
        {
            DEF_ADC_MODULE,
            1000U,
        },
        {
            DEF_ADC_MODULE,
            DIAGLIB_ADC_TEST_CONV,
            DEF_ADC_MODE,
            4U,
            {
                ADC_CHANNEL_3, 1U, 0U, 1U, ADC_AVERAGING_8_SAMPLES,
                665U,
                ADC_CHANNEL_4, 1U, 0U, 1U, ADC_AVERAGING_8_SAMPLES,
                592U,
                ADC_CHANNEL_5, 1U, 0U, 1U, ADC_AVERAGING_8_SAMPLES,
                520U,
                ADC_CHANNEL_6, 1U, 0U, 1U, ADC_AVERAGING_8_SAMPLES,
                412U,
            },
            ADC_FIFO_NUM_0,
            DIAGLIB_ADC_REF_VOLTAGE_DEFAULT,
            12U, ADC_RANGE_MIN, ADC_RANGE_MAX, 1U,
            DIAGLIB_ADC_POLLED_MODE,
            600U, TRUE,
        },
        PRINT_ENABLE,
        ST_TT_SANITY,
    },
#endif
};

#endif /* #ifndef ST_UART_TEST_CASES_H_ */
